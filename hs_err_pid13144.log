#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffb5a6adb6d, pid=13144, tid=20528
#
# JRE version: OpenJDK Runtime Environment Corretto-17.0.9.8.1 (17.0.9+8) (build 17.0.9+8-LTS)
# Java VM: OpenJDK 64-Bit Server VM Corretto-17.0.9.8.1 (17.0.9+8-LTS, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [dwrite.dll+0x4db6d]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://github.com/corretto/corretto-17/issues/
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55171,suspend=y,server=n -javaagent:C:\Users\fiona\AppData\Local\JetBrains\IntelliJIdea2023.2\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 cs308.group7.usms.App

Host: AMD Ryzen 7 5700U with Radeon Graphics         , 16 cores, 7G,  Windows 11 , 64 bit Build 22621 (10.0.22621.2506)
Time: Thu Nov 23 10:30:00 2023 GMT Standard Time elapsed time: 442.760307 seconds (0d 0h 7m 22s)

---------------  T H R E A D  ---------------

Current thread (0x0000022749baf0d0):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=20528, stack(0x000000d13c500000,0x000000d13c600000)]

Stack: [0x000000d13c500000,0x000000d13c600000],  sp=0x000000d13c5fa860,  free space=1002k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [dwrite.dll+0x4db6d]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  com.sun.javafx.font.directwrite.OS.EndDraw(J)I+0
J 3857 c1 com.sun.javafx.font.directwrite.DWGlyph.getD2DMask(FFZ)[B (674 bytes) @ 0x000002276c99dc34 [0x000002276c99cbc0+0x0000000000001074]
J 5106 c2 com.sun.prism.impl.GlyphCache.getCachedGlyph(II)Lcom/sun/prism/impl/GlyphCache$GlyphData; (494 bytes) @ 0x0000022773f9e104 [0x0000022773f9d6a0+0x0000000000000a64]
J 5369 c2 com.sun.prism.impl.GlyphCache.render(Lcom/sun/prism/impl/BaseContext;Lcom/sun/javafx/scene/text/GlyphList;FFIILcom/sun/prism/paint/Color;Lcom/sun/prism/paint/Color;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)V (326 bytes) @ 0x0000022773fd0c88 [0x0000022773fcfc20+0x0000000000001068]
J 4865 c1 com.sun.prism.impl.ps.BaseShaderGraphics.drawString(Lcom/sun/javafx/scene/text/GlyphList;Lcom/sun/javafx/font/FontStrike;FFLcom/sun/prism/paint/Color;II)V (857 bytes) @ 0x000002276cc4063c [0x000002276cc3d540+0x00000000000030fc]
J 4918 c1 com.sun.javafx.sg.prism.NGText.renderText(Lcom/sun/prism/Graphics;Lcom/sun/javafx/font/FontStrike;Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/prism/paint/Color;I)V (533 bytes) @ 0x000002276cc59044 [0x000002276cc58500+0x0000000000000b44]
J 4863 c1 com.sun.javafx.sg.prism.NGText.renderContent2D(Lcom/sun/prism/Graphics;Z)V (355 bytes) @ 0x000002276cc37664 [0x000002276cc36520+0x0000000000001144]
J 4812 c1 com.sun.javafx.sg.prism.NGShape.renderContent(Lcom/sun/prism/Graphics;)V (458 bytes) @ 0x000002276cc0e7ac [0x000002276cc0bb00+0x0000000000002cac]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5276 c1 com.sun.javafx.sg.prism.NodeEffectInput.getImageDataForBoundedNode(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/sg/prism/NGNode;Lcom/sun/javafx/sg/prism/NodeEffectInput$RenderType;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/scenario/effect/ImageData; (137 bytes) @ 0x000002276cd3a7a4 [0x000002276cd398a0+0x0000000000000f04]
J 5165 c1 com.sun.javafx.sg.prism.NodeEffectInput.filter(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Ljava/lang/Object;Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/ImageData; (225 bytes) @ 0x000002276cd0aecc [0x000002276cd0a400+0x0000000000000acc]
J 5112 c1 com.sun.scenario.effect.FilterEffect.filter(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Ljava/lang/Object;Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/ImageData; (265 bytes) @ 0x000002276ccd000c [0x000002276cccf4a0+0x0000000000000b6c]
J 5349 c1 com.sun.scenario.effect.DelegateEffect.filter(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Ljava/lang/Object;Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/ImageData; (15 bytes) @ 0x000002276cd659ac [0x000002276cd657c0+0x00000000000001ec]
J 5347 c1 com.sun.scenario.effect.impl.prism.PrEffectHelper.render(Lcom/sun/scenario/effect/Effect;Lcom/sun/prism/Graphics;FFLcom/sun/scenario/effect/Effect;)V (626 bytes) @ 0x000002276cd71cf4 [0x000002276cd6f640+0x00000000000026b4]
J 5371 c1 com.sun.javafx.sg.prism.EffectFilter.render(Lcom/sun/prism/Graphics;)V (21 bytes) @ 0x000002276cd778c4 [0x000002276cd77800+0x00000000000000c4]
J 5346 c1 com.sun.javafx.sg.prism.NGNode.renderEffect(Lcom/sun/prism/Graphics;)V (9 bytes) @ 0x000002276cd661f4 [0x000002276cd66140+0x00000000000000b4]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbf498 [0x0000022773fbec80+0x0000000000000818]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
J 3957 c1 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V (422 bytes) @ 0x000002276c9e2b24 [0x000002276c9e1620+0x0000000000001504]
J 3991 c1 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V (115 bytes) @ 0x000002276c9f7424 [0x000002276c9f6320+0x0000000000001104]
J 5301 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V (473 bytes) @ 0x0000022773fbeeb8 [0x0000022773fbec80+0x0000000000000238]
J 5359 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V (39 bytes) @ 0x0000022773fcb9b8 [0x0000022773fcb940+0x0000000000000078]
j  com.sun.javafx.tk.quantum.ViewPainter.doPaint(Lcom/sun/prism/Graphics;Lcom/sun/javafx/sg/prism/NodePath;)V+202
j  com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V+939
j  com.sun.javafx.tk.quantum.PresentingPainter.run()V+331
j  java.util.concurrent.Executors$RunnableAdapter.call()Ljava/lang/Object;+4 java.base@17.0.9
j  java.util.concurrent.FutureTask.runAndReset$$$capture()Z+44 java.base@17.0.9
j  java.util.concurrent.FutureTask.runAndReset()Z+5 java.base@17.0.9
j  com.sun.javafx.tk.RenderJob.run()V+1
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 java.base@17.0.9
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@17.0.9
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8
j  java.lang.Thread.run()V+11 java.base@17.0.9
v  ~StubRoutines::call_stub

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x0000000000000008


Registers:
RAX=0x0000000000000000, RBX=0x0000022749f56cc0, RCX=0x0000022749f56a70, RDX=0x0000022749f56cc0
RSP=0x000000d13c5fa860, RBP=0x0000000000000000, RSI=0x0000000000000034, RDI=0x0000022749f56c40
R8 =0x0000022749f56c00, R9 =0x0000022749f6cab8, R10=0xfd41b67356dad870, R11=0x0000022749f56b80
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x0000000000000000, R15=0x0000000000000000
RIP=0x00007ffb5a6adb6d, EFLAGS=0x0000000000010202


Register to memory mapping:

RIP=0x00007ffb5a6adb6d dwrite.dll
RAX=0x0 is NULL
RBX=0x0000022749f56cc0 points into unknown readable memory: 0x00007ffb5a89dad0 | d0 da 89 5a fb 7f 00 00
RCX=0x0000022749f56a70 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RDX=0x0000022749f56cc0 points into unknown readable memory: 0x00007ffb5a89dad0 | d0 da 89 5a fb 7f 00 00
RSP=0x000000d13c5fa860 is pointing into the stack for thread: 0x0000022749baf0d0
RBP=0x0 is NULL
RSI=0x0000000000000034 is an unknown value
RDI=0x0000022749f56c40 points into unknown readable memory: 0x00007ffb5a89dad0 | d0 da 89 5a fb 7f 00 00
R8 =0x0000022749f56c00 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
R9 =0x0000022749f6cab8 points into unknown readable memory: 0x000000000015999a | 9a 99 15 00 00 00 00 00
R10=0xfd41b67356dad870 is an unknown value
R11=0x0000022749f56b80 points into unknown readable memory: 0x00000227517279a0 | a0 79 72 51 27 02 00 00
R12=0x0 is NULL
R13=0x0 is NULL
R14=0x0 is NULL
R15=0x0 is NULL


Top of Stack: (sp=0x000000d13c5fa860)
0x000000d13c5fa860:   0000022749f4a000 0000000000000000
0x000000d13c5fa870:   000000d13c5fa928 00007ffb5a6cf4d2
0x000000d13c5fa880:   00007ffb5a7f5b70 00007ffb5a691f56
0x000000d13c5fa890:   0000022749f56c20 0000022749f6cab8
0x000000d13c5fa8a0:   0000020000004527 0000022700800000
0x000000d13c5fa8b0:   0000022749f56c00 00007ffb5a691f06
0x000000d13c5fa8c0:   0000022749f56c40 0000022749f56c50
0x000000d13c5fa8d0:   0000000000000000 0000022749f56c18
0x000000d13c5fa8e0:   0000022749f56b80 00007ffb5a68ecde
0x000000d13c5fa8f0:   0000022749f56c18 0000000000000034
0x000000d13c5fa900:   0000000000000000 00007ffb5febcb80
0x000000d13c5fa910:   0000022749f56b80 00007ffb5a68ea51
0x000000d13c5fa920:   0000022749f56b80 0000022749f6cab8
0x000000d13c5fa930:   0000022749f6ca90 00007ffb5a6edbc0
0x000000d13c5fa940:   0000000000000358 0000000000000034
0x000000d13c5fa950:   0000000000000000 0000022749f6ca90
0x000000d13c5fa960:   0000022749f6ca90 00007ffb5a6c6318
0x000000d13c5fa970:   0000022749f56b80 0000022749f342d8
0x000000d13c5fa980:   0000022749f56940 0000000000000000
0x000000d13c5fa990:   000002274a950034 0000000000001f80
0x000000d13c5fa9a0:   0000022700000034 0010000000000000
0x000000d13c5fa9b0:   0000022749f56940 0000022749f56b80
0x000000d13c5fa9c0:   0000000000001f80 000000d13c5fb170
0x000000d13c5fa9d0:   0000022749f6ca90 0000022749fb7d80
0x000000d13c5fa9e0:   0000022749f56bd0 0000000000000001
0x000000d13c5fa9f0:   000000d13c5faae0 000000d13c5fab00
0x000000d13c5faa00:   0000000000000000 00007ffb5a6c6698
0x000000d13c5faa10:   0000022749fb7d90 0000022749f342d8
0x000000d13c5faa20:   0000022749f56c00 00007ffb5a6c4a25
0x000000d13c5faa30:   00007ffb41accc00 000000d13c5faac0
0x000000d13c5faa40:   00007ffb00000001 000000d13c5faae0
0x000000d13c5faa50:   0000000000004527 0000000000000001 

Instructions: (pc=0x00007ffb5a6adb6d)
0x00007ffb5a6ada6d:   47 30 48 8b 43 38 48 89 01 e8 dd 08 ff ff 48 8d
0x00007ffb5a6ada7d:   53 40 48 8d 4f 40 e8 0c 26 01 00 48 8b 43 48 48
0x00007ffb5a6ada8d:   8d 4f 48 48 89 01 e8 c0 08 ff ff 8a 43 50 88 47
0x00007ffb5a6ada9d:   50 8a 43 51 88 47 51 8a 43 52 88 47 52 48 8b 43
0x00007ffb5a6adaad:   58 48 89 47 58 48 85 c0 74 03 f0 ff 00 48 8b 5c
0x00007ffb5a6adabd:   24 30 48 8b c7 48 83 c4 20 5f c3 cc cc cc cc cc
0x00007ffb5a6adacd:   cc cc cc 48 89 5c 24 08 4c 89 44 24 18 57 48 83
0x00007ffb5a6adadd:   ec 20 49 8b c0 49 8b d8 48 c1 e8 20 48 8b f9 85
0x00007ffb5a6adaed:   c0 74 27 48 8d 4c 24 48 e8 32 00 00 00 44 8b 44
0x00007ffb5a6adafd:   24 44 48 8d 8f 38 01 00 00 8b d3 4c 8b c8 e8 24
0x00007ffb5a6adb0d:   82 ff ff c6 87 58 01 00 00 00 48 8b 5c 24 30 48
0x00007ffb5a6adb1d:   83 c4 20 5f c3 cc cc cc cc cc cc cc cc cc cc 48
0x00007ffb5a6adb2d:   89 4c 24 08 53 48 83 ec 20 48 8b d9 48 89 11 e8
0x00007ffb5a6adb3d:   13 00 00 00 90 48 8b c3 48 83 c4 20 5b c3 cc cc
0x00007ffb5a6adb4d:   cc cc cc cc cc cc cc 48 83 ec 28 48 8b 09 48 85
0x00007ffb5a6adb5d:   c9 74 18 48 8b 01 49 ba 70 d8 da 56 73 b6 41 fd
0x00007ffb5a6adb6d:   48 8b 40 08 ff 15 f1 f5 14 00 90 48 83 c4 28 c3
0x00007ffb5a6adb7d:   cc cc cc cc cc cc cc 48 89 5c 24 08 57 48 83 ec
0x00007ffb5a6adb8d:   20 48 8b f9 48 8b da 48 8b ca e8 b8 ff ff ff 48
0x00007ffb5a6adb9d:   8b cf e8 c4 25 fd ff 48 8b 03 48 8b 5c 24 30 48
0x00007ffb5a6adbad:   89 07 48 8b c7 48 83 c4 20 5f c3 cc cc cc cc cc
0x00007ffb5a6adbbd:   cc cc cc 48 89 5c 24 08 57 48 83 ec 20 48 8b fa
0x00007ffb5a6adbcd:   48 8b d9 48 3b 51 08 72 39 32 c0 48 8b 49 10 84
0x00007ffb5a6adbdd:   c0 0f 85 fa 6e 07 00 48 39 4b 08 75 08 48 8b cb
0x00007ffb5a6adbed:   e8 e2 01 00 00 48 8b d7 48 8b 4b 08 e8 22 00 00
0x00007ffb5a6adbfd:   00 48 83 43 08 60 48 8b 5c 24 30 48 83 c4 20 5f
0x00007ffb5a6adc0d:   c3 cc 48 39 39 77 c2 b0 01 eb c0 cc cc cc cc cc
0x00007ffb5a6adc1d:   cc cc cc 48 89 5c 24 08 48 89 74 24 10 57 48 83
0x00007ffb5a6adc2d:   ec 20 8b 02 48 8b f9 89 01 48 8b da 8b 42 04 be
0x00007ffb5a6adc3d:   01 00 00 00 89 41 04 8b 42 08 89 41 08 8b 42 0c
0x00007ffb5a6adc4d:   89 41 0c 8b 42 10 89 41 10 8b 42 14 89 41 14 8b
0x00007ffb5a6adc5d:   42 18 89 41 18 8b 42 1c 89 41 1c 8b 42 20 89 41 


Stack slot to memory mapping:
stack at sp + 0 slots: 0x0000022749f4a000 points into unknown readable memory: 0x00007ffb5a7f5b58 | 58 5b 7f 5a fb 7f 00 00
stack at sp + 1 slots: 0x0 is NULL
stack at sp + 2 slots: 0x000000d13c5fa928 is pointing into the stack for thread: 0x0000022749baf0d0
stack at sp + 3 slots: 0x00007ffb5a6cf4d2 dwrite.dll
stack at sp + 4 slots: 0x00007ffb5a7f5b70 dwrite.dll
stack at sp + 5 slots: 0x00007ffb5a691f56 dwrite.dll
stack at sp + 6 slots: 0x0000022749f56c20 points into unknown readable memory: 0x0000008600000000 | 00 00 00 00 86 00 00 00
stack at sp + 7 slots: 0x0000022749f6cab8 points into unknown readable memory: 0x000000000015999a | 9a 99 15 00 00 00 00 00


Compiled method (c1)  442859 3857       3       com.sun.javafx.font.directwrite.DWGlyph::getD2DMask (674 bytes)
 total in heap  [0x000002276c99c710,0x000002276c9a0520] = 15888
 relocation     [0x000002276c99c868,0x000002276c99cbb0] = 840
 main code      [0x000002276c99cbc0,0x000002276c99efc0] = 9216
 stub code      [0x000002276c99efc0,0x000002276c99f188] = 456
 oops           [0x000002276c99f188,0x000002276c99f190] = 8
 metadata       [0x000002276c99f190,0x000002276c99f260] = 208
 scopes data    [0x000002276c99f260,0x000002276c99ff28] = 3272
 scopes pcs     [0x000002276c99ff28,0x000002276c9a0438] = 1296
 dependencies   [0x000002276c9a0438,0x000002276c9a0498] = 96
 nul chk table  [0x000002276c9a0498,0x000002276c9a0520] = 136

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph'
  # this:     rdx:rdx   = 'com/sun/javafx/font/directwrite/DWGlyph'
  # parm0:    xmm0      = float
  # parm1:    xmm1      = float
  # parm2:    r8        = boolean
  #           [sp+0x170]  (sp of caller)
  0x000002276c99cbc0: 448b 5208 | 49bb 0000 | 0004 2702 | 0000 4d03 | d34c 3bd0 

  0x000002276c99cbd4: ;   {runtime_call ic_miss_stub}
  0x000002276c99cbd4: 0f85 a644 | cc06 660f | 1f44 0000 
[Verified Entry Point]
  0x000002276c99cbe0: 8984 2400 | 90ff ff55 | 4881 ec60 | 0100 0048 | 8994 2490 | 0000 0044 | 8984 2498 

  0x000002276c99cbfc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cbfc: 0000 0048 | bed8 9534 | 4627 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 fe07 
  0x000002276c99cc1c: 0000 83ff | 000f 84a7 | 1e00 00c5 | fa11 8c24 | 3801 0000 | c5fa 1184 | 241c 0100 | 0048 8bf2 
  0x000002276c99cc3c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cc3c: 48bf d895 | 3446 2702 

  0x000002276c99cc44: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cc44: 0000 49ba | 3006 2e05 | 2702 0000 | 4c89 9720 | 0100 0048 | 8387 2801 | 0000 0148 | 8bf2 488b 
  0x000002276c99cc64: ;   {optimized virtual_call}
  0x000002276c99cc64: d666 90e8 

  0x000002276c99cc68: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@1 (line 155)
  0x000002276c99cc68: f4da feff | 488b 9424 | 9000 0000 

  0x000002276c99cc74: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cc74: 48be d895 | 3446 2702 

  0x000002276c99cc7c: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cc7c: 0000 49ba | 3006 2e05 | 2702 0000 | 4c89 9658 | 0100 0048 | 8386 6001 

  0x000002276c99cc94: ;   {metadata(method data for {method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cc94: 0000 0148 | ba00 0534 | 4627 0200 | 008b b2cc | 0000 0083 | c602 89b2 | cc00 0000 | 81e6 feff 
  0x000002276c99ccb4: 1f00 83fe | 000f 8430 | 1e00 0048 | 8b94 2490 

  0x000002276c99ccc4: ;   {metadata(method data for {method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ccc4: 0000 0048 | be00 0534 | 4627 0200 | 0048 8386 | 2801 0000 | 0148 8b94 | 2490 0000 | 0066 0f1f 
  0x000002276c99cce4: ;   {optimized virtual_call}
  0x000002276c99cce4: 4400 00e8 

  0x000002276c99cce8: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@1 (line 375)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002276c99cce8: 74da feff | 488b 9424 | 9000 0000 | 8b72 248b | 7e14 8b76 | 0c2b fe48 

  0x000002276c99cd00: ;   {metadata(method data for {method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cd00: 8bf2 48bb | 0005 3446 | 2702 0000 | 4883 8360 | 0100 0001 

  0x000002276c99cd14: ;   {metadata(method data for {method} {0x000002274611a5c0} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cd14: 48be f806 | 3446 2702 | 0000 8b9e | cc00 0000 | 83c3 0289 | 9ecc 0000 | 0081 e3fe | ff1f 0083 
  0x000002276c99cd34: fb00 0f84 | d91d 0000 | 8b72 1848 | 3b06 488b 

  0x000002276c99cd44: ;   {metadata(method data for {method} {0x000002274611a5c0} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cd44: de48 b8f8 | 0634 4627 | 0200 008b | 5b08 49ba | 0000 0004 | 2702 0000 | 4903 da48 | 3b98 2001 
  0x000002276c99cd64: 0000 750d | 4883 8028 | 0100 0001 | e966 0000 | 0048 3b98 | 3001 0000 | 750d 4883 | 8038 0100 
  0x000002276c99cd84: 0001 e950 | 0000 0048 | 81b8 2001 | 0000 0000 | 0000 7517 | 4889 9820 | 0100 0048 | c780 2801 
  0x000002276c99cda4: 0000 0100 | 0000 e92c | 0000 0048 | 81b8 3001 | 0000 0000 | 0000 7517 | 4889 9830 | 0100 0048 
  0x000002276c99cdc4: c780 3801 | 0000 0100 | 0000 e908 | 0000 0048 | 8380 1001 | 0000 018b | 7610 83fe 

  0x000002276c99cde0: ;   {metadata(method data for {method} {0x000002274611a5c0} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cde0: 0148 bef8 | 0634 4627 | 0200 0048 | bb48 0100 | 0000 0000 | 000f 850a | 0000 0048 | bb58 0100 
  0x000002276c99ce00: 0000 0000 | 0048 8b04 | 1e48 8d40 | 0148 8904 | 1e0f 851a 

  0x000002276c99ce14: ;   {metadata(method data for {method} {0x000002274611a5c0} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ce14: 0000 0048 | bef8 0634 | 4627 0200 | 00ff 8668 | 0100 00be | 0100 0000 | e905 0000 | 00be 0000 
  0x000002276c99ce34: 0000 83e6 | 0183 fe00 

  0x000002276c99ce3c: ;   {metadata(method data for {method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ce3c: 48be 0005 | 3446 2702 | 0000 48bb | 8001 0000 | 0000 0000 | 0f84 0a00 | 0000 48bb | 9001 0000 
  0x000002276c99ce5c: 0000 0000 | 488b 041e | 488d 4001 | 4889 041e | 0f84 1a00 

  0x000002276c99ce70: ;   {metadata(method data for {method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ce70: 0000 48be | 0005 3446 | 2702 0000 | ff86 a001 | 0000 be03 | 0000 00e9 | 0500 0000 | be01 0000 
  0x000002276c99ce90: 000f aff7 

  0x000002276c99ce94: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ce94: 83fe 0048 | bed8 9534 | 4627 0200 | 0048 bf80 | 0100 0000 | 0000 000f | 840a 0000 | 0048 bf90 
  0x000002276c99ceb4: 0100 0000 | 0000 0048 | 8b1c 3e48 | 8d5b 0148 | 891c 3e0f | 8437 1b00 | 0048 8bf2 

  0x000002276c99ced0: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ced0: 48bf d895 | 3446 2702 

  0x000002276c99ced8: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ced8: 0000 49ba | 3006 2e05 | 2702 0000 | 4c89 97b0 | 0100 0048 | 8387 b801 

  0x000002276c99cef0: ;   {metadata(method data for {method} {0x000002274611a3e0} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cef0: 0000 0148 | beb8 0834 | 4627 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 feff 
  0x000002276c99cf10: 1f00 83ff | 000f 8420 | 1c00 0048 

  0x000002276c99cf1c: ;   {metadata(method data for {method} {0x000002274611a3e0} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cf1c: 8bf2 48bf | b808 3446 | 2702 0000 | 4883 8728 | 0100 0001 | 488b f248 

  0x000002276c99cf34: ;   {optimized virtual_call}
  0x000002276c99cf34: 8bd6 90e8 

  0x000002276c99cf38: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@1 (line 381)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
  0x000002276c99cf38: 24d8 feff | 488b 9424 | 9000 0000 | 448b 4224 

  0x000002276c99cf48: ; implicit exception: dispatches to 0x000002276c99eb5c
  0x000002276c99cf48: 458b 4818 | 418b 7010 | 442b ce44 | 898c 24a0 | 0000 0041 

  0x000002276c99cf5c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cf5c: 83f9 0048 | bfd8 9534 | 4627 0200 | 0048 bbd8 | 0100 0000 | 0000 000f | 840a 0000 | 0048 bbe8 
  0x000002276c99cf7c: 0100 0000 | 0000 0048 | 8b04 1f48 | 8d40 0148 | 8904 1f0f | 846f 1a00 | 008b 7a20 

  0x000002276c99cf98: ; implicit exception: dispatches to 0x000002276c99eb61
  0x000002276c99cf98: 488b 5f10 | 4883 fb00 

  0x000002276c99cfa0: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cfa0: 48bf d895 | 3446 2702 | 0000 48bb | 0802 0000 | 0000 0000 | 0f84 0a00 | 0000 48bb | f801 0000 
  0x000002276c99cfc0: 0000 0000 | 488b 041f | 488d 4001 | 4889 041f | 0f84 2e1a | 0000 418b | 780c c5fa | 2ac7 c5f2 
  0x000002276c99cfe0: 2ace 458b | 4014 442b | c744 8984 | 249c 0000 | 0041 81f8 | 0001 0000 

  0x000002276c99cff8: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99cff8: 48be d895 | 3446 2702 | 0000 48bf | 1802 0000 | 0000 0000 | 0f8f 0a00 | 0000 48bf | 2802 0000 
  0x000002276c99d018: 0000 0000 | 488b 1c3e | 488d 5b01 | 4889 1c3e | 0f8f 3d00 | 0000 4181 | f900 0100 

  0x000002276c99d034: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d034: 0048 bed8 | 9534 4627 | 0200 0048 | bf48 0200 | 0000 0000 | 000f 8e0a | 0000 0048 | bf38 0200 
  0x000002276c99d054: 0000 0000 | 0048 8b1c | 3e48 8d5b | 0148 891c | 3e0f 8e0a | 0000 00be | 0000 0000 | e915 0000 
  0x000002276c99d074: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d074: 0048 bed8 | 9534 4627 | 0200 00ff | 8658 0200 | 00be 0100 | 0000 83fe 

  0x000002276c99d08c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d08c: 0048 bfd8 | 9534 4627 | 0200 0048 | bb70 0200 | 0000 0000 | 000f 840a | 0000 0048 | bb80 0200 
  0x000002276c99d0ac: 0000 0000 | 0048 8b04 | 1f48 8d40 | 0148 8904 | 1f0f 84a1 | 0300 0048 

  0x000002276c99d0c4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d0c4: 8bfa 48bb | d895 3446 | 2702 0000 

  0x000002276c99d0d0: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d0d0: 49ba 3006 | 2e05 2702 | 0000 4c89 | 93a0 0200 | 0048 8383 | a802 0000 

  0x000002276c99d0e8: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d0e8: 0148 bf80 | a034 4627 | 0200 008b | 9fcc 0000 | 0083 c302 | 899f cc00 | 0000 81e3 | feff 1f00 
  0x000002276c99d108: 83fb 000f | 8455 1a00 

  0x000002276c99d110: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d110: 0048 bf60 | f7f6 8a00 | 0000 008b | 7f70 4883 

  0x000002276c99d120: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d120: ff00 48bf | 80a0 3446 | 2702 0000 | 48bb 1001 | 0000 0000 | 0000 0f85 | 0a00 0000 | 48bb 2001 
  0x000002276c99d140: 0000 0000 | 0000 488b | 041f 488d | 4001 4889 | 041f 89b4 | 24a4 0000 | 00c5 fa11 | 8c24 4001 
  0x000002276c99d160: 0000 c5fa | 1184 243c | 0100 000f | 8577 0000 | 0048 8bfa 

  0x000002276c99d174: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d174: 48bb 80a0 | 3446 2702 

  0x000002276c99d17c: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d17c: 0000 49ba | 3006 2e05 | 2702 0000 | 4c89 9340 | 0100 0048 | 8383 4801 | 0000 0141 | b800 0100 
  0x000002276c99d19c: 0041 b900 | 0100 0048 | 8bc2 488b | d066 0f1f 

  0x000002276c99d1ac: ;   {optimized virtual_call}
  0x000002276c99d1ac: 4400 00e8 

  0x000002276c99d1b0: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@13 (line 274)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@117 (line 168)
  0x000002276c99d1b0: cc41 cc06 

  0x000002276c99d1b4: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d1b4: 49b8 60f7 | f68a 0000 | 0000 450f | be4f 3841 | 83f9 000f | 85ba 1900 | 004c 8bd0 | 4589 5070 
  0x000002276c99d1d4: 4d8b c84c | 33c8 49c1 | e914 4983 | f900 0f85 | bb19 0000 

  0x000002276c99d1e8: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d1e8: 49b8 60f7 | f68a 0000 | 0000 418b | 7070 488b | 9424 9000 

  0x000002276c99d1fc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d1fc: 0000 49b8 | d895 3446 | 2702 0000 

  0x000002276c99d208: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d208: 49ba 3006 | 2e05 2702 | 0000 4d89 | 90d8 0200 | 0049 8380 | e002 0000 

  0x000002276c99d220: ;   {metadata(method data for {method} {0x0000022746119b00} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d220: 0149 b800 | a634 4627 | 0200 0045 | 8b88 cc00 | 0000 4183 | c102 4589 | 88cc 0000 | 0041 81e1 
  0x000002276c99d240: feff 1f00 | 4183 f900 | 0f84 6d19 

  0x000002276c99d24c: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d24c: 0000 49b8 | 60f7 f68a | 0000 0000 | 458b 4074 | 4983 f800 

  0x000002276c99d260: ;   {metadata(method data for {method} {0x0000022746119b00} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d260: 49b8 00a6 | 3446 2702 | 0000 49b9 | 2001 0000 | 0000 0000 | 0f84 0a00 | 0000 49b9 | 1001 0000 
  0x000002276c99d280: 0000 0000 | 4b8b 1408 | 488d 5201 | 4b89 1408 | 0f84 0d00 | 0000 4889 | b424 a800 | 0000 e995 
  0x000002276c99d2a0: 0100 0048 | 8b94 2490 

  0x000002276c99d2a8: ;   {metadata(method data for {method} {0x0000022746119b00} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d2a8: 0000 0049 | b800 a634 | 4627 0200 

  0x000002276c99d2b4: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d2b4: 0049 ba30 | 062e 0527 | 0200 004d | 8990 4001 | 0000 4983 | 8048 0100 

  0x000002276c99d2cc: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d2cc: 0001 49b8 | 80a0 3446 | 2702 0000 | 458b 88cc | 0000 0041 | 83c1 0245 | 8988 cc00 | 0000 4181 
  0x000002276c99d2ec: e1fe ff1f | 0041 83f9 | 000f 84e1 | 1800 0048 

  0x000002276c99d2fc: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d2fc: 83fe 0049 | b880 a034 | 4627 0200 | 0049 b910 | 0100 0000 | 0000 000f | 850a 0000 | 0049 b920 
  0x000002276c99d31c: 0100 0000 | 0000 004b | 8b14 0848 | 8d52 014b | 8914 0848 | 89b4 24a8 | 0000 000f | 857a 0000 
  0x000002276c99d33c: 0048 8b94 | 2490 0000 

  0x000002276c99d344: ;   {metadata(method data for {method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d344: 0049 b880 | a034 4627 

  0x000002276c99d34c: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d34c: 0200 0049 | ba30 062e | 0527 0200 | 004d 8990 | 4001 0000 | 4983 8048 | 0100 0001 | 41b8 0001 
  0x000002276c99d36c: 0000 41b9 | 0001 0000 | 488b 9424 | 9000 0000 

  0x000002276c99d37c: ;   {optimized virtual_call}
  0x000002276c99d37c: 6666 90e8 

  0x000002276c99d380: ; ImmutableOopMap {[144]=Oop [168]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@13 (line 274)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@8 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002276c99d380: fc3f cc06 

  0x000002276c99d384: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d384: 49b8 60f7 | f68a 0000 | 0000 410f | be57 3883 | fa00 0f85 | 6118 0000 | 4c8b d045 | 8950 7049 
  0x000002276c99d3a4: 8bd0 4833 | d048 c1ea | 1448 83fa | 000f 8562 

  0x000002276c99d3b4: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d3b4: 1800 0049 | b860 f7f6 | 8a00 0000 | 0045 8b40 | 7048 8b94 | 2490 0000 

  0x000002276c99d3cc: ;   {metadata(method data for {method} {0x0000022746119b00} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d3cc: 0048 be00 | a634 4627 

  0x000002276c99d3d4: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d3d4: 0200 0049 | ba30 062e | 0527 0200 | 004c 8996 | 7801 0000 | 4883 8680 | 0100 0001 | 488b 9424 
  0x000002276c99d3f4: 9000 0000 | 0f1f 8000 

  0x000002276c99d3fc: ;   {optimized virtual_call}
  0x000002276c99d3fc: 0000 00e8 

  0x000002276c99d400: ; ImmutableOopMap {[144]=Oop [168]=Oop }
                      ;*invokevirtual createRenderingTarget {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@11 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002276c99d400: 7c3f cc06 

  0x000002276c99d404: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d404: 49b8 60f7 | f68a 0000 | 0000 450f | be4f 3841 | 83f9 000f | 8514 1800 | 004c 8bd0 | 4589 5074 
  0x000002276c99d424: 4d8b c84c | 33c8 49c1 | e914 4983 | f900 0f85 | 1518 0000 

  0x000002276c99d438: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d438: 49b8 60f7 | f68a 0000 | 0000 458b | 4074 488b | b424 a800 

  0x000002276c99d44c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d44c: 0000 49b9 | d895 3446 | 2702 0000 | 41ff 8100 | 0300 00e9 | bb00 0000 | 89b4 24a4 | 0000 00c5 
  0x000002276c99d46c: fa11 8c24 | 4001 0000 | c5fa 1184 | 243c 0100 | 0048 8b94 | 2490 0000 

  0x000002276c99d484: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d484: 0049 b8d8 | 9534 4627 

  0x000002276c99d48c: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d48c: 0200 0049 | ba30 062e | 0527 0200 | 004d 8990 | 2803 0000 | 4983 8030 | 0300 0001 | 448b 8424 
  0x000002276c99d4ac: 9c00 0000 | 448b 8c24 | a000 0000 | 488b 9424 | 9000 0000 | 0f1f 8000 

  0x000002276c99d4c4: ;   {optimized virtual_call}
  0x000002276c99d4c4: 0000 00e8 

  0x000002276c99d4c8: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@136 (line 171)
  0x000002276c99d4c8: b43e cc06 | 488b 9424 | 9000 0000 

  0x000002276c99d4d4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d4d4: 49b8 d895 | 3446 2702 

  0x000002276c99d4dc: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d4dc: 0000 49ba | 3006 2e05 | 2702 0000 | 4d89 9060 | 0300 0049 | 8380 6803 | 0000 014c | 8bc0 488b 
  0x000002276c99d4fc: 9424 9000 | 0000 4889 | 8424 b000 | 0000 0f1f 

  0x000002276c99d50c: ;   {optimized virtual_call}
  0x000002276c99d50c: 4400 00e8 

  0x000002276c99d510: ; ImmutableOopMap {[144]=Oop [176]=Oop }
                      ;*invokevirtual createRenderingTarget {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@144 (line 172)
  0x000002276c99d510: 6c3e cc06 | 4c8b c048 | 8bb4 24b0 | 0000 0048 

  0x000002276c99d520: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d520: 83fe 0048 | bad8 9534 | 4627 0200 | 0048 bf88 | 0300 0000 | 0000 000f | 840a 0000 | 0048 bf98 
  0x000002276c99d540: 0300 0000 | 0000 0048 | 8b04 3a48 | 8d40 0148 | 8904 3a0f | 84c1 1300 | 0049 83f8 

  0x000002276c99d55c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d55c: 0048 bad8 | 9534 4627 | 0200 0048 | bfb8 0300 | 0000 0000 | 000f 840a | 0000 0048 | bfa8 0300 
  0x000002276c99d57c: 0000 0000 | 0048 8b04 | 3a48 8d40 | 0148 8904 | 3a0f 8487 | 1300 0048 | 8b94 2490 | 0000 008b 
  0x000002276c99d59c: 7a18 8b5f | 3448 83fb 

  0x000002276c99d5a4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d5a4: 0048 bfd8 | 9534 4627 | 0200 0048 | b8c8 0300 | 0000 0000 | 000f 840a | 0000 0048 | b8d8 0300 
  0x000002276c99d5c4: 0000 0000 | 0048 8b0c | 0748 8d49 | 0148 890c | 070f 8416 | 0100 004c | 8984 24c0 | 0000 0048 
  0x000002276c99d5e4: 89b4 24c8 

  0x000002276c99d5e8: ;   {metadata('com/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F')}
  0x000002276c99d5e8: 0000 0048 | ba60 0b2e | 0527 0200 | 0049 8b87 | 0801 0000 | 488d 7828 | 493b bf18 | 0100 000f 
  0x000002276c99d608: 875d 1600 | 0049 89bf | 0801 0000 | 48c7 0001 | 0000 0048 | 8bca 49ba | 0000 0004 | 2702 0000 
  0x000002276c99d628: 492b ca89 | 4808 4833 | c989 480c | 4833 c948 | 8948 1048 | 8948 1848 | 8948 20c5 | fa10 430c 
  0x000002276c99d648: c5fa 104b | 10c5 fa10 | 5314 c5fa | 105b 1848 

  0x000002276c99d658: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d658: 8bd0 48be | d895 3446 | 2702 0000 | 4883 86e8 | 0300 0001 | c5fa 10a4 | 243c 0100 

  0x000002276c99d674: ;   {external_word}
  0x000002276c99d674: 0049 ba90 | 4951 0afb | 7f00 00c4 | c158 5722 | c5da 58a4 | 241c 0100 | 00c5 fa10 | ac24 4001 
  0x000002276c99d694: ;   {external_word}
  0x000002276c99d694: 0000 49ba | 9049 510a | fb7f 0000 | c4c1 5057 | 2ac5 d258 | ac24 3801 | 0000 488b | d048 899c 
  0x000002276c99d6b4: 24d0 0000 | 0048 8984 | 24b8 0000 | 0066 0f1f 

  0x000002276c99d6c4: ;   {optimized virtual_call}
  0x000002276c99d6c4: 4400 00e8 

  0x000002276c99d6c8: ; ImmutableOopMap {[144]=Oop [184]=Oop [200]=Oop [192]=Oop [208]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@211 (line 181)
  0x000002276c99d6c8: 7919 0000 

  0x000002276c99d6cc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d6cc: 48ba d895 | 3446 2702 | 0000 ff82 | f803 0000 | 488b 8424 | b800 0000 | c5f8 57c0 | c5f0 57c9 
  0x000002276c99d6ec: e94f 0000 | 0048 899c | 24d0 0000 | 004c 8984 | 24c0 0000 | 0048 89b4 | 24c8 0000 

  0x000002276c99d708: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d708: 0048 ba60 | f7f6 8a00 | 0000 008b | 9280 0000 | 00c5 fa10 | 8c24 3c01 | 0000 c5f2 | 5c8c 241c 
  0x000002276c99d728: 0100 00c5 | fa10 8424 | 4001 0000 | c5fa 5c84 | 2438 0100 | 0048 8bc2 | 4889 8424 | d800 0000 
  0x000002276c99d748: c5fa 1184 | 2448 0100 | 00c5 fa11 | 8c24 4401 | 0000 4c8b | 8424 c000 | 0000 493b | 0049 8bd0 
  0x000002276c99d768: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d768: 48bf d895 | 3446 2702 

  0x000002276c99d770: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d770: 0000 49ba | 0010 2f05 | 2702 0000 | 4c89 9720 | 0400 0048 | 8387 2804 

  0x000002276c99d788: ;   {metadata(method data for {method} {0x0000022746194498} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d788: 0000 0148 | ba10 ab34 | 4627 0200 | 008b bacc | 0000 0083 | c702 89ba | cc00 0000 | 81e7 feff 
  0x000002276c99d7a8: 1f00 83ff | 000f 84ce | 1400 0049 

  0x000002276c99d7b4: ;   {metadata(method data for {method} {0x0000022746194498} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d7b4: 8b50 1048 | bf10 ab34 | 4627 0200 | 0048 8387 | 1001 0000 | 014c 8984 | 24c0 0000 | 0066 0f1f 
  0x000002276c99d7d4: ;   {static_call}
  0x000002276c99d7d4: 4400 00e8 

  0x000002276c99d7d8: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [192]=Oop [216]=Oop }
                      ;*invokestatic BeginDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::BeginDraw@4 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
  0x000002276c99d7d8: 7918 0000 | 4c8b 8424 | c000 0000 

  0x000002276c99d7e4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d7e4: 48ba d895 | 3446 2702 

  0x000002276c99d7ec: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d7ec: 0000 49ba | 0010 2f05 | 2702 0000 | 4c89 9258 | 0400 0048 | 8382 6004 

  0x000002276c99d804: ;   {metadata(method data for {method} {0x0000022746194660} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d804: 0000 0148 | ba70 ac34 | 4627 0200 | 0044 8b82 | cc00 0000 | 4183 c002 | 4489 82cc | 0000 0041 
  0x000002276c99d824: 81e0 feff | 1f00 4183 | f800 0f84 | 6e14 0000 | 4c8b 8424 | c000 0000 | 498b 5010 

  0x000002276c99d840: ;   {metadata(method data for {method} {0x0000022746194660} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d840: 48be 70ac | 3446 2702 | 0000 4883 | 8610 0100 | 0001 4c89 | 8424 c000 | 0000 4c8b | 8424 d800 
  0x000002276c99d860: 0000 0f1f 

  0x000002276c99d864: ;   {static_call}
  0x000002276c99d864: 4400 00e8 

  0x000002276c99d868: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop }
                      ;*invokestatic SetTransform {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTransform@5 (line 46)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@251 (line 192)
  0x000002276c99d868: f917 0000 

  0x000002276c99d86c: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d86c: 48be 60f7 | f68a 0000 | 0000 8b7e | 7c4c 8b84 | 24c0 0000 

  0x000002276c99d880: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d880: 0048 bad8 | 9534 4627 

  0x000002276c99d888: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d888: 0200 0049 | ba00 102f | 0527 0200 | 004c 8992 | 9004 0000 | 4883 8298 | 0400 0001 

  0x000002276c99d8a4: ;   {metadata(method data for {method} {0x00000227461945c8} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d8a4: 48ba d8ad | 3446 2702 | 0000 448b | 82cc 0000 | 0041 83c0 | 0244 8982 | cc00 0000 | 4181 e0fe 
  0x000002276c99d8c4: ff1f 0041 | 83f8 000f | 84f2 1300 | 004c 8b84 | 24c0 0000 | 0049 8b50 

  0x000002276c99d8dc: ;   {metadata(method data for {method} {0x00000227461945c8} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99d8dc: 1048 bbd8 | ad34 4627 | 0200 0048 | 8383 1001 | 0000 014c | 8984 24c0 | 0000 004c | 8bc7 4889 
  0x000002276c99d8fc: bc24 e800 | 0000 4889 | b424 e000 | 0000 0f1f 

  0x000002276c99d90c: ;   {static_call}
  0x000002276c99d90c: 4400 00e8 

  0x000002276c99d910: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [232]=Oop [192]=Oop [224]=Oop }
                      ;*invokestatic Clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::Clear@5 (line 42)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@259 (line 193)
  0x000002276c99d910: 6117 0000 

  0x000002276c99d914: ;   {metadata('com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002276c99d914: 48ba 4812 | 2f05 2702 | 0000 498b | 8708 0100 | 0048 8d78 | 1849 3bbf | 1801 0000 | 0f87 ae13 
  0x000002276c99d934: 0000 4989 | bf08 0100 | 0048 c700 | 0100 0000 | 488b ca49 | ba00 0000 | 0427 0200 | 0049 2bca 
  0x000002276c99d954: 8948 0848 | 33c9 8948 | 0c48 33c9 | 4889 4810 

  0x000002276c99d964: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99d964: 4c8b c048 | bad8 9534 | 4627 0200 | 0048 8382 | b804 0000 | 01c5 fa10 | 8c24 4401 | 0000 c5f8 
  0x000002276c99d984: ;   {external_word}
  0x000002276c99d984: 28c1 49ba | 9049 510a | fb7f 0000 | c4c1 7857 | 02c5 fa10 | 8c24 4801 

  0x000002276c99d99c: ;   {external_word}
  0x000002276c99d99c: 0000 49ba | 9049 510a | fb7f 0000 | c4c1 7057 

  0x000002276c99d9ac: ;   {metadata(method data for {method} {0x0000022746194e28} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002276c99d9ac: 0a49 b840 | af34 4627 | 0200 0041 | 8b90 cc00 | 0000 83c2 | 0241 8990 | cc00 0000 | 81e2 feff 
  0x000002276c99d9cc: 1f00 83fa | 000f 841a | 1300 004c 

  0x000002276c99d9d8: ;   {metadata(method data for {method} {0x0000022746194e28} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002276c99d9d8: 8bc0 48ba | 40af 3446 | 2702 0000 | 4883 8210 | 0100 0001 

  0x000002276c99d9ec: ;   {metadata(method data for {method} {0x000002270443f2f0} '<init>' '()V' in 'java/lang/Object')}
  0x000002276c99d9ec: 49b8 d07e | 0045 2702 | 0000 418b | 90cc 0000 | 0083 c202 | 4189 90cc | 0000 0081 | e2fe ff1f 
  0x000002276c99da0c: 0083 fa00 | 0f84 fc12 | 0000 c5fa | 1140 0cc5 | fa11 4810 | 488b b424 | e000 0000 | 448b 4678 
  0x000002276c99da2c: 488b 9424 | c000 0000 

  0x000002276c99da34: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99da34: 48be d895 | 3446 2702 

  0x000002276c99da3c: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99da3c: 0000 49ba | 0010 2f05 | 2702 0000 | 4c89 96d8 | 0400 0048 | 8386 e004 | 0000 0148 | 8b94 24c0 
  0x000002276c99da5c: 0000 0048 | 8984 24f0 

  0x000002276c99da64: ;   {optimized virtual_call}
  0x000002276c99da64: 0000 00e8 

  0x000002276c99da68: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop [240]=Oop }
                      ;*invokevirtual CreateSolidColorBrush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@282 (line 195)
  0x000002276c99da68: 9463 4200 | 4889 8424 | f800 0000 | 448b 8424 | 9800 0000 | 4183 f800 

  0x000002276c99da80: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99da80: 48ba d895 | 3446 2702 | 0000 48be | 1005 0000 | 0000 0000 | 0f84 0a00 | 0000 48be | 0005 0000 
  0x000002276c99daa0: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f84 1500 | 0000 488b | 9424 9000 | 0000 4c8b 
  0x000002276c99dac0: 8424 c000 | 0000 e999 | 0000 004c | 8b84 24c0 | 0000 0049 

  0x000002276c99dad4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dad4: 8bd0 48bf | d895 3446 | 2702 0000 

  0x000002276c99dae0: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99dae0: 49ba 0010 | 2f05 2702 | 0000 4c89 | 9730 0500 | 0048 8387 | 3805 0000 

  0x000002276c99daf8: ;   {metadata(method data for {method} {0x00000227461946f8} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99daf8: 0148 ba50 | b234 4627 | 0200 008b | bacc 0000 | 0083 c702 | 89ba cc00 | 0000 81e7 | feff 1f00 
  0x000002276c99db18: 83ff 000f | 8412 1200 | 0049 8b50 

  0x000002276c99db24: ;   {metadata(method data for {method} {0x00000227461946f8} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99db24: 1048 bf50 | b234 4627 | 0200 0048 | 8387 1001 | 0000 014c | 8984 24c0 | 0000 0041 | b802 0000 
  0x000002276c99db44: ;   {static_call}
  0x000002276c99db44: 0066 90e8 

  0x000002276c99db48: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [192]=Oop }
                      ;*invokestatic SetTextAntialiasMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTextAntialiasMode@5 (line 50)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@294 (line 197)
  0x000002276c99db48: 4915 0000 | 488b 8424 | f800 0000 | 4c8b 8424 | c000 0000 | 488b 9424 | 9000 0000 | 448b 4a20 
  0x000002276c99db68: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99db68: 498b f848 | bed8 9534 | 4627 0200 

  0x000002276c99db74: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99db74: 0049 ba00 | 102f 0527 | 0200 004c | 8996 6805 | 0000 4883 | 8670 0500 | 0001 498b | d84c 8b84 
  0x000002276c99db94: 24f0 0000 | 0048 8bf8 | be00 0000 | 0048 8bd3 | 4889 9c24 | c000 0000 

  0x000002276c99dbac: ;   {optimized virtual_call}
  0x000002276c99dbac: 6666 90e8 

  0x000002276c99dbb0: ; ImmutableOopMap {[200]=Oop [208]=Oop [216]=Oop [240]=Oop [144]=Oop [248]=Oop [192]=Oop }
                      ;*invokevirtual DrawGlyphRun {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@308 (line 199)
  0x000002276c99dbb0: 2c5e 4200 | 4c8b 8424 | c000 0000 

  0x000002276c99dbbc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dbbc: 48ba d895 | 3446 2702 

  0x000002276c99dbc4: ;   {metadata('com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99dbc4: 0000 49ba | 0010 2f05 | 2702 0000 | 4c89 92a0 | 0500 0048 | 8382 a805 

  0x000002276c99dbdc: ;   {metadata(method data for {method} {0x0000022746194530} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99dbdc: 0000 0148 | ba38 b534 | 4627 0200 | 008b b2cc | 0000 0083 | c602 89b2 | cc00 0000 | 81e6 feff 
  0x000002276c99dbfc: 1f00 83fe | 000f 844d | 1100 004c | 8b84 24c0 | 0000 0049 

  0x000002276c99dc10: ;   {metadata(method data for {method} {0x0000022746194530} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99dc10: 8b50 1048 | be38 b534 | 4627 0200 | 0048 8386 | 1001 0000 | 014c 8984 | 24c0 0000 

  0x000002276c99dc2c: ;   {static_call}
  0x000002276c99dc2c: 0066 90e8 

  0x000002276c99dc30: ; ImmutableOopMap {[200]=Oop [208]=Oop [216]=Oop [240]=Oop [144]=Oop [248]=Oop [192]=Oop }
                      ;*invokestatic EndDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::EndDraw@4 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@313 (line 200)
  0x000002276c99dc30: 8114 0000 | 8984 2400 | 0100 0048 | 8bb4 24f8 | 0000 0048 | 3b06 488b 

  0x000002276c99dc48: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dc48: d648 bfd8 | 9534 4627 | 0200 008b | 5208 49ba | 0000 0004 | 2702 0000 | 4903 d248 | 3b97 d805 
  0x000002276c99dc68: 0000 750d | 4883 87e0 | 0500 0001 | e966 0000 | 0048 3b97 | e805 0000 | 750d 4883 | 87f0 0500 
  0x000002276c99dc88: 0001 e950 | 0000 0048 | 81bf d805 | 0000 0000 | 0000 7517 | 4889 97d8 | 0500 0048 | c787 e005 
  0x000002276c99dca8: 0000 0100 | 0000 e92c | 0000 0048 | 81bf e805 | 0000 0000 | 0000 7517 | 4889 97e8 | 0500 0048 
  0x000002276c99dcc8: c787 f005 | 0000 0100 | 0000 e908 | 0000 0048 | 8387 c805 | 0000 0148 | 8bd6 0f1f 

  0x000002276c99dce4: ;   {optimized virtual_call}
  0x000002276c99dce4: 4400 00e8 

  0x000002276c99dce8: ; ImmutableOopMap {[200]=Oop [208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@320 (line 201)
  0x000002276c99dce8: f4a3 ffff | 8b84 2400 | 0100 0083 

  0x000002276c99dcf4: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dcf4: f800 49b8 | d895 3446 | 2702 0000 | 49b9 1006 | 0000 0000 | 0000 0f85 | 0a00 0000 | 49b9 0006 
  0x000002276c99dd14: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 488b | b424 c800 | 0000 0f85 | b109 0000 
  0x000002276c99dd34: ; implicit exception: dispatches to 0x000002276c99ed7a
  0x000002276c99dd34: 483b 064c 

  0x000002276c99dd38: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dd38: 8bc6 49b9 | d895 3446 | 2702 0000 

  0x000002276c99dd44: ;   {metadata('com/sun/javafx/font/directwrite/IWICBitmap')}
  0x000002276c99dd44: 49ba 5037 | 2f05 2702 | 0000 4d89 | 9118 0700 | 0049 8381 | 2007 0000 | 0141 b800 | 0000 0041 
  0x000002276c99dd64: b900 0000 | 008b bc24 | 9c00 0000 | 488b de8b | b424 a000 | 0000 b901 | 0000 0048 | 8bd3 4889 
  0x000002276c99dd84: 9c24 c800 | 0000 0f1f 

  0x000002276c99dd8c: ;   {optimized virtual_call}
  0x000002276c99dd8c: 4400 00e8 

  0x000002276c99dd90: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop }
                      ;*invokevirtual Lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@414 (line 217)
  0x000002276c99dd90: ec66 4200 | 4889 8424 | 0801 0000 | 4883 f800 

  0x000002276c99dda0: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dda0: 48ba d895 | 3446 2702 | 0000 48be | 5007 0000 | 0000 0000 | 0f85 0a00 | 0000 48be | 4007 0000 
  0x000002276c99ddc0: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f85 0f00 

  0x000002276c99ddd4: ;   {oop(NULL)}
  0x000002276c99ddd4: 0000 48be | 0000 0000 | 0000 0000 | e92f 0700 | 0048 3b00 

  0x000002276c99dde8: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99dde8: 488b d048 | bed8 9534 | 4627 0200 

  0x000002276c99ddf4: ;   {metadata('com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99ddf4: 0049 ba58 | 162f 0527 | 0200 004c | 8996 7007 | 0000 4883 | 8678 0700 

  0x000002276c99de0c: ;   {metadata(method data for {method} {0x0000022746195618} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99de0c: 0001 48ba | 68b8 3446 | 2702 0000 | 8bb2 cc00 | 0000 83c6 | 0289 b2cc | 0000 0081 | e6fe ff1f 
  0x000002276c99de2c: 0083 fe00 | 0f84 4e0f | 0000 488b 

  0x000002276c99de38: ;   {metadata(method data for {method} {0x0000022746195618} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99de38: 5010 48be | 68b8 3446 | 2702 0000 | 4883 8610 | 0100 0001 

  0x000002276c99de4c: ;   {static_call}
  0x000002276c99de4c: 6666 90e8 

  0x000002276c99de50: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop }
                      ;*invokestatic GetDataPointer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetDataPointer@4 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002276c99de50: 9112 0000 | 4889 8424 | 1001 0000 | 4883 f800 

  0x000002276c99de60: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99de60: 48ba d895 | 3446 2702 | 0000 48be | a807 0000 | 0000 0000 | 0f85 0a00 | 0000 48be | 9807 0000 
  0x000002276c99de80: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f85 0f00 

  0x000002276c99de94: ;   {oop(NULL)}
  0x000002276c99de94: 0000 48be | 0000 0000 | 0000 0000 | e9b4 0500 | 0048 8b84 | 2408 0100 | 0048 8bd0 

  0x000002276c99deb0: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99deb0: 48bf d895 | 3446 2702 

  0x000002276c99deb8: ;   {metadata('com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99deb8: 0000 49ba | 5816 2f05 | 2702 0000 | 4c89 97c8 | 0700 0048 | 8387 d007 

  0x000002276c99ded0: ;   {metadata(method data for {method} {0x00000227461956b0} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99ded0: 0000 0148 | bac8 b934 | 4627 0200 | 008b bacc | 0000 0083 | c702 89ba | cc00 0000 | 81e7 feff 
  0x000002276c99def0: 1f00 83ff | 000f 84aa | 0e00 0048 

  0x000002276c99defc: ;   {metadata(method data for {method} {0x00000227461956b0} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99defc: 8b50 1048 | bfc8 b934 | 4627 0200 | 0048 8387 | 1001 0000 | 0166 0f1f 

  0x000002276c99df14: ;   {static_call}
  0x000002276c99df14: 4400 00e8 

  0x000002276c99df18: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop [272]=Oop }
                      ;*invokestatic GetStride {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetStride@4 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@438 (line 223)
  0x000002276c99df18: d911 0000 | 4c8b c044 | 8b8c 2498 | 0000 0041 

  0x000002276c99df28: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99df28: 83f9 0048 | bbd8 9534 | 4627 0200 | 0048 baf0 | 0700 0000 | 0000 000f | 840a 0000 | 0048 ba00 
  0x000002276c99df48: 0800 0000 | 0000 0048 | 8b34 1348 | 8d76 0148 | 8934 130f | 84c8 0200 | 0044 8b9c | 24a0 0000 
  0x000002276c99df68: 008b 9c24 | 9c00 0000 | 410f afdb | 488b d3c1 | e302 2bda 

  0x000002276c99df7c: ;   {metadata({type array byte})}
  0x000002276c99df7c: 48ba 3867 | 0004 2702 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 872d 0e00 | 0048 be17 
  0x000002276c99df9c: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 0801 | 0000 488d | 3430 493b | b718 0100 
  0x000002276c99dfbc: 000f 8703 | 0e00 0049 | 89b7 0801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002276c99dfdc: 0427 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 0f84 | 1a00 0000 | 4885 f60f | 8411 0000 
  0x000002276c99dffc: 0048 33db | 48c1 ee03 | 4889 5cf0 | 0848 ffce | 75f6 bb00 | 0000 00ba | 0000 0000 | be00 0000 
  0x000002276c99e01c: 004c 8bb4 | 2410 0100 | 0044 8bac | 249c 0000 | 00e9 a601 | 0000 660f | 1f44 0000 | 488b fab9 
  0x000002276c99e03c: 0000 0000 | 899c 2404 | 0100 00e9 | f800 0000 | 0f1f 4000 | 488b deff | c34c 8bcf | 41ff c141 
  0x000002276c99e05c: 3b7e 0c0f | 8375 0d00 | 0048 63ff | 410f be7c | 3e10 41bb | ffff ffff | 442b df3b | 700c 0f83 
  0x000002276c99e07c: 680d 0000 | 4863 f644 | 885c 3010 | 488b f3ff | c649 8bf9 | ffc7 453b | 4e0c 0f83 | 5a0d 0000 
  0x000002276c99e09c: 4d63 c947 | 0fbe 4c0e | 1041 bbff | ffff ff45 | 2bd9 3b58 | 0c0f 834d | 0d00 0048 | 63db 4488 
  0x000002276c99e0bc: 5c18 1048 | 8bde ffc3 | 4c8b cf41 | ffc1 413b | 7e0c 0f83 | 3e0d 0000 | 4863 ff41 | 0fbe 7c3e 
  0x000002276c99e0dc: 1041 bbff | ffff ff44 | 2bdf 3b70 | 0c0f 8331 | 0d00 0048 | 63f6 4488 | 5c30 1041 | ffc1 ffc1 
  0x000002276c99e0fc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e0fc: 48be d895 | 3446 2702 | 0000 8bbe | d000 0000 | 83c7 0289 | bed0 0000 | 0081 e7fe | 3f00 0083 
  0x000002276c99e11c: ff00 0f84 | 0a0d 0000 | 4d8b 9758 

  0x000002276c99e128: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@557 (line 230)
                      ;   {poll}
  0x000002276c99e128: 0300 0041 

  0x000002276c99e12c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e12c: 8502 48be | d895 3446 | 2702 0000 | ff86 5008 | 0000 498b | f948 8bf3 

  0x000002276c99e144: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e144: 413b cd49 | b9d8 9534 | 4627 0200 | 0049 bb40 | 0800 0000 | 0000 000f | 8c0a 0000 | 0049 bb30 
  0x000002276c99e164: 0800 0000 | 0000 004b | 8b1c 1948 | 8d5b 014b | 891c 190f | 8cd3 feff | ff41 03d0 | 8b9c 2404 
  0x000002276c99e184: 0100 00ff 

  0x000002276c99e188: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e188: c349 b9d8 | 9534 4627 | 0200 0045 | 8b99 d000 | 0000 4183 | c302 4589 | 99d0 0000 | 0041 81e3 
  0x000002276c99e1a8: fe3f 0000 | 4183 fb00 | 0f84 990c | 0000 4d8b | 9758 0300 

  0x000002276c99e1bc: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@570 (line 228)
                      ;   {poll}
  0x000002276c99e1bc: 0041 8502 

  0x000002276c99e1c0: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e1c0: 48bf d895 | 3446 2702 | 0000 ff87 | 6808 0000 | 448b 9c24 | a000 0000 

  0x000002276c99e1d8: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e1d8: 413b db48 | bfd8 9534 | 4627 0200 | 0048 b920 | 0800 0000 | 0000 000f | 8c0a 0000 | 0048 b910 
  0x000002276c99e1f8: 0800 0000 | 0000 004c | 8b0c 0f4d | 8d49 014c | 890c 0f0f | 8c27 feff 

  0x000002276c99e210: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e210: ff48 bbd8 | 9534 4627 | 0200 00ff | 8380 0800 | 0048 8bf0 | e930 0200 | 004c 8bb4 | 2410 0100 
  0x000002276c99e230: 0044 8bac | 249c 0000 | 0044 8b8c | 24a0 0000 | 0049 8bdd | 410f afd9 

  0x000002276c99e248: ;   {metadata({type array byte})}
  0x000002276c99e248: 48ba 3867 | 0004 2702 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 870b 0c00 | 0048 be17 
  0x000002276c99e268: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 0801 | 0000 488d | 3430 493b | b718 0100 
  0x000002276c99e288: 000f 87e1 | 0b00 0049 | 89b7 0801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002276c99e2a8: 0427 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 0f84 | 1a00 0000 | 4885 f60f | 8411 0000 
  0x000002276c99e2c8: 0048 33db | 48c1 ee03 | 4889 5cf0 | 0848 ffce | 75f6 ba00 | 0000 00be | 0000 0000 | bf00 0000 
  0x000002276c99e2e8: 00e9 2f01 | 0000 6690 | 488b deb9 | 0000 0000 | 8994 2418 | 0100 00e9 | 8500 0000 | 0f1f 4000 
  0x000002276c99e308: 488b d7ff | c241 3b5e | 0c0f 836d | 0b00 004c | 63cb 470f | be4c 0e10 | 41bb ffff | ffff 452b 
  0x000002276c99e328: d93b 780c | 0f83 600b | 0000 4863 | ff44 885c | 3810 83c3 

  0x000002276c99e33c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e33c: 04ff c148 | bfd8 9534 | 4627 0200 | 0044 8b8f | d000 0000 | 4183 c102 | 4489 8fd0 | 0000 0041 
  0x000002276c99e35c: 81e1 fe3f | 0000 4183 | f900 0f84 | 340b 0000 | 4d8b 9758 

  0x000002276c99e370: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@632 (line 242)
                      ;   {poll}
  0x000002276c99e370: 0300 0041 

  0x000002276c99e374: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e374: 8502 48bf | d895 3446 | 2702 0000 | ff87 d808 | 0000 488b | fa41 3bcd 

  0x000002276c99e38c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e38c: 49bb d895 | 3446 2702 | 0000 49b9 | c808 0000 | 0000 0000 | 0f8c 0a00 | 0000 49b9 | b808 0000 
  0x000002276c99e3ac: 0000 0000 | 4b8b 140b | 488d 5201 | 4b89 140b | 0f8c 46ff | ffff 4103 | f08b 9424 | 1801 0000 
  0x000002276c99e3cc: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e3cc: ffc2 49b9 | d895 3446 | 2702 0000 | 458b 99d0 | 0000 0041 | 83c3 0245 | 8999 d000 | 0000 4181 
  0x000002276c99e3ec: e3fe 3f00 | 0041 83fb | 000f 84c6 | 0a00 004d | 8b97 5803 

  0x000002276c99e400: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@645 (line 240)
                      ;   {poll}
  0x000002276c99e400: 0000 4185 

  0x000002276c99e404: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e404: 0248 bbd8 | 9534 4627 | 0200 00ff | 83f0 0800 | 0044 8b8c | 24a0 0000 | 0041 3bd1 

  0x000002276c99e420: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e420: 48bb d895 | 3446 2702 | 0000 48b9 | a808 0000 | 0000 0000 | 0f8c 0a00 | 0000 48b9 | 9808 0000 
  0x000002276c99e440: 0000 0000 | 4c8b 1c0b | 4d8d 5b01 | 4c89 1c0b | 0f8c 9afe | ffff 488b | f048 89b4 | 2420 0100 
  0x000002276c99e460: 0048 8b94 | 2408 0100 

  0x000002276c99e468: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e468: 0048 bbd8 | 9534 4627 | 0200 008b | 5208 49ba | 0000 0004 | 2702 0000 | 4903 d248 | 3b93 1809 
  0x000002276c99e488: 0000 750d | 4883 8320 | 0900 0001 | e966 0000 | 0048 3b93 | 2809 0000 | 750d 4883 | 8330 0900 
  0x000002276c99e4a8: 0001 e950 | 0000 0048 | 81bb 1809 | 0000 0000 | 0000 7517 | 4889 9318 | 0900 0048 | c783 2009 
  0x000002276c99e4c8: 0000 0100 | 0000 e92c | 0000 0048 | 81bb 2809 | 0000 0000 | 0000 7517 | 4889 9328 | 0900 0048 
  0x000002276c99e4e8: c783 3009 | 0000 0100 | 0000 e908 | 0000 0048 | 8383 0809 | 0000 0148 | 8b94 2408 

  0x000002276c99e504: ;   {optimized virtual_call}
  0x000002276c99e504: 0100 00e8 

  0x000002276c99e508: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop [288]=Oop [272]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@650 (line 250)
  0x000002276c99e508: d49b ffff | 488b b424 | 2001 0000 | 8bbc 24a4 | 0000 0083 

  0x000002276c99e51c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e51c: ff00 48ba | d895 3446 | 2702 0000 | 48bb 4009 | 0000 0000 | 0000 0f85 | 0a00 0000 | 48bb 5009 
  0x000002276c99e53c: 0000 0000 | 0000 488b | 041a 488d | 4001 4889 | 041a 0f85 | 7801 0000 | 4889 b424 | 2801 0000 
  0x000002276c99e55c: 89bc 24a4 | 0000 0048 | 8b94 24c8 

  0x000002276c99e568: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e568: 0000 0048 | bbd8 9534 | 4627 0200 | 008b 5208 | 49ba 0000 | 0004 2702 | 0000 4903 | d248 3b93 
  0x000002276c99e588: 7009 0000 | 750d 4883 | 8378 0900 | 0001 e966 | 0000 0048 | 3b93 8009 | 0000 750d | 4883 8388 
  0x000002276c99e5a8: 0900 0001 | e950 0000 | 0048 81bb | 7009 0000 | 0000 0000 | 7517 4889 | 9370 0900 | 0048 c783 
  0x000002276c99e5c8: 7809 0000 | 0100 0000 | e92c 0000 | 0048 81bb | 8009 0000 | 0000 0000 | 7517 4889 | 9380 0900 
  0x000002276c99e5e8: 0048 c783 | 8809 0000 | 0100 0000 | e908 0000 | 0048 8383 | 6009 0000 | 0148 8b94 | 24c8 0000 
  0x000002276c99e608: 0066 0f1f 

  0x000002276c99e60c: ;   {optimized virtual_call}
  0x000002276c99e60c: 4400 00e8 

  0x000002276c99e610: ; ImmutableOopMap {[200]=Oop [248]=Oop [192]=Oop [144]=Oop [240]=Oop [216]=Oop [208]=Oop [296]=Oop [264]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@661 (line 254)
  0x000002276c99e610: 6c2d cc06 | 4c8b 8424 | c000 0000 

  0x000002276c99e61c: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e61c: 48ba d895 | 3446 2702 | 0000 458b | 4008 49ba | 0000 0004 | 2702 0000 | 4d03 c24c | 3b82 a809 
  0x000002276c99e63c: 0000 750d | 4883 82b0 | 0900 0001 | e966 0000 | 004c 3b82 | b809 0000 | 750d 4883 | 82c0 0900 
  0x000002276c99e65c: 0001 e950 | 0000 0048 | 81ba a809 | 0000 0000 | 0000 7517 | 4c89 82a8 | 0900 0048 | c782 b009 
  0x000002276c99e67c: 0000 0100 | 0000 e92c | 0000 0048 | 81ba b809 | 0000 0000 | 0000 7517 | 4c89 82b8 | 0900 0048 
  0x000002276c99e69c: c782 c009 | 0000 0100 | 0000 e908 | 0000 0048 | 8382 9809 | 0000 0148 | 8b94 24c0 | 0000 000f 
  0x000002276c99e6bc: ;   {optimized virtual_call}
  0x000002276c99e6bc: 1f40 00e8 

  0x000002276c99e6c0: ; ImmutableOopMap {[200]=Oop [248]=Oop [192]=Oop [144]=Oop [240]=Oop [216]=Oop [208]=Oop [296]=Oop [264]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@667 (line 255)
  0x000002276c99e6c0: bc2c cc06 | 488b b424 | 2801 0000 | 488b c648 | 81c4 6001 

  0x000002276c99e6d4: ;   {poll_return}
  0x000002276c99e6d4: 0000 5d49 | 3ba7 5003 | 0000 0f87 | fe07 0000 | c348 3b06 

  0x000002276c99e6e8: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e6e8: 488b d648 | bfd8 9534 | 4627 0200 | 008b 5208 | 49ba 0000 | 0004 2702 | 0000 4903 | d248 3b97 
  0x000002276c99e708: 3006 0000 | 750d 4883 | 8738 0600 | 0001 e966 | 0000 0048 | 3b97 4006 | 0000 750d | 4883 8748 
  0x000002276c99e728: 0600 0001 | e950 0000 | 0048 81bf | 3006 0000 | 0000 0000 | 7517 4889 | 9730 0600 | 0048 c787 
  0x000002276c99e748: 3806 0000 | 0100 0000 | e92c 0000 | 0048 81bf | 4006 0000 | 0000 0000 | 7517 4889 | 9740 0600 
  0x000002276c99e768: 0048 c787 | 4806 0000 | 0100 0000 | e908 0000 | 0048 8387 | 2006 0000 | 0148 8bd6 | 4889 b424 
  0x000002276c99e788: c800 0000 

  0x000002276c99e78c: ;   {optimized virtual_call}
  0x000002276c99e78c: 6666 90e8 

  0x000002276c99e790: ; ImmutableOopMap {[248]=Oop [192]=Oop [144]=Oop [240]=Oop [216]=Oop [208]=Oop [200]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@331 (line 205)
  0x000002276c99e790: ec2b cc06 

  0x000002276c99e794: ;   {oop(a 'java/lang/Class'{0x000000008af6f760} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e794: 48be 60f7 | f68a 0000 | 0000 410f | be57 3883 | fa00 0f85 | 5107 0000 | c746 7000 | 0000 004c 
  0x000002276c99e7b4: 8b84 24c0 

  0x000002276c99e7b8: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e7b8: 0000 0048 | bad8 9534 | 4627 0200 | 0045 8b40 | 0849 ba00 | 0000 0427 | 0200 004d | 03c2 4c3b 
  0x000002276c99e7d8: 8268 0600 | 0075 0d48 | 8382 7006 | 0000 01e9 | 6600 0000 | 4c3b 8278 | 0600 0075 | 0d48 8382 
  0x000002276c99e7f8: 8006 0000 | 01e9 5000 | 0000 4881 | ba68 0600 | 0000 0000 | 0075 174c | 8982 6806 | 0000 48c7 
  0x000002276c99e818: 8270 0600 | 0001 0000 | 00e9 2c00 | 0000 4881 | ba78 0600 | 0000 0000 | 0075 174c | 8982 7806 
  0x000002276c99e838: 0000 48c7 | 8280 0600 | 0001 0000 | 00e9 0800 | 0000 4883 | 8258 0600 | 0001 488b | 9424 c000 
  0x000002276c99e858: 0000 4889 | b424 3001 | 0000 0f1f 

  0x000002276c99e864: ;   {optimized virtual_call}
  0x000002276c99e864: 4400 00e8 

  0x000002276c99e868: ; ImmutableOopMap {[248]=Oop [192]=Oop [144]=Oop [240]=Oop [216]=Oop [208]=Oop [200]=Oop [304]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@341 (line 207)
  0x000002276c99e868: 142b cc06 | 410f be47 | 3883 f800 | 488b b424 | 3001 0000 | 0f85 9606 | 0000 c746 | 7400 0000 
  0x000002276c99e888: ;   {metadata(method data for {method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99e888: 0048 b8d8 | 9534 4627 | 0200 00ff | 8090 0600 | 008b 8424 | 0001 0000 | 488b 9c24 | f800 0000 
  0x000002276c99e8a8: 488b 9424 | f000 0000 | 488b b424 | d800 0000 | c5fa 1084 | 2448 0100 | 00c5 fa10 | 8c24 4401 
  0x000002276c99e8c8: 0000 488b | bc24 d000 | 0000 4c8b | 8424 9000 | 0000 418b | 4824 c741 | 1800 0000 | 00c7 4114 
  0x000002276c99e8e8: 0000 0000 | c741 1000 | 0000 00c7 | 410c 0000 

  0x000002276c99e8f8: ;   {oop(NULL)}
  0x000002276c99e8f8: 0000 48b8 | 0000 0000 | 0000 0000 | 4881 c460 | 0100 005d 

  0x000002276c99e90c: ;   {poll_return}
  0x000002276c99e90c: 493b a750 | 0300 000f | 871f 0600 | 00c3 4c89 | 8424 c000 | 0000 4c8b | ce44 8b9c | 24a4 0000 
  0x000002276c99e92c: 0044 8bac | 249c 0000 | 00c5 fa10 | 8c24 4001 | 0000 c5fa | 1084 243c | 0100 0044 | 8bb4 24a0 
  0x000002276c99e94c: 0000 004c | 8b84 2490 | 0000 00bb | 0000 0000 

  0x000002276c99e95c: ;   {metadata({type array byte})}
  0x000002276c99e95c: 48ba 3867 | 0004 2702 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 87d5 0500 | 0048 be17 
  0x000002276c99e97c: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 0801 | 0000 488d | 3430 493b | b718 0100 
  0x000002276c99e99c: 000f 87ab | 0500 0049 | 89b7 0801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002276c99e9bc: 0427 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 0f84 | 1a00 0000 | 4885 f60f | 8411 0000 
  0x000002276c99e9dc: 0048 33db | 48c1 ee03 | 4889 5cf0 | 0848 ffce | 75f6 4881 | c460 0100 

  0x000002276c99e9f4: ;   {poll_return}
  0x000002276c99e9f4: 005d 493b | a750 0300 | 000f 8755 | 0500 00c3 | 448b 8c24 | 9800 0000 | c5fa 108c | 2438 0100 
  0x000002276c99ea14: 00c5 fa10 | 8424 1c01 | 0000 4c8b | c2bb 0000 

  0x000002276c99ea24: ;   {metadata({type array byte})}
  0x000002276c99ea24: 0000 48ba | 3867 0004 | 2702 0000 | 4863 db48 | 8bfb 4881 | fbff ffff | 000f 872b | 0500 0048 
  0x000002276c99ea44: be17 0000 | 0000 0000 | 0048 8d34 | 1e48 83e6 | f849 8b87 | 0801 0000 | 488d 3430 | 493b b718 
  0x000002276c99ea64: 0100 000f | 8701 0500 | 0049 89b7 | 0801 0000 | 482b f048 | c700 0100 | 0000 488b | ca49 ba00 
  0x000002276c99ea84: 0000 0427 | 0200 0049 | 2bca 8948 | 0889 580c | 4883 ee10 | 0f84 1a00 | 0000 4885 | f60f 8411 
  0x000002276c99eaa4: 0000 0048 | 33db 48c1 | ee03 4889 | 5cf0 0848 | ffce 75f6 | 4881 c460 | 0100 005d 

  0x000002276c99eac0: ;   {poll_return}
  0x000002276c99eac0: 493b a750 | 0300 000f | 87ab 0400 

  0x000002276c99eacc: ;   {metadata({method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eacc: 00c3 49ba | e097 1146 | 2702 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002276c99eae4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eae4: ffe8 16c4 

  0x000002276c99eae8: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@-1 (line 155)
  0x000002276c99eae8: d706 e938 

  0x000002276c99eaec: ;   {metadata({method} {0x000002274611a320} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eaec: e1ff ff49 | ba18 a311 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002276c99eb04: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eb04: ffff e8f5 

  0x000002276c99eb08: ; ImmutableOopMap {[144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@-1 (line 375)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002276c99eb08: c3d7 06e9 | afe1 ffff 

  0x000002276c99eb10: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99eb10: e80b 6dd7 

  0x000002276c99eb14: ; ImmutableOopMap {rdx=Oop [144]=Oop rsi=Oop }
                      ;*getfield right {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getWidth@8 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
                      ;   {metadata({method} {0x000002274611a5c0} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eb14: 0649 bab8 | a511 4627 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002276c99eb2c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eb2c: e8cf c3d7 

  0x000002276c99eb30: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@-1 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002276c99eb30: 06e9 06e2 

  0x000002276c99eb34: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99eb34: ffff e8e5 

  0x000002276c99eb38: ; ImmutableOopMap {rdx=Oop [144]=Oop rsi=Oop }
                      ;*invokevirtual getAAMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@4 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
                      ;   {metadata({method} {0x000002274611a3e0} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eb38: 6cd7 0649 | bad8 a311 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002276c99eb50: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eb50: ffff e8a9 

  0x000002276c99eb54: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@-1 (line 381)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
  0x000002276c99eb54: c3d7 06e9 | bfe3 ffff 

  0x000002276c99eb5c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99eb5c: e8bf 6cd7 

  0x000002276c99eb60: ; ImmutableOopMap {rdx=Oop [144]=Oop r8=Oop }
                      ;*getfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getHeight@8 (line 382)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99eb60: 06e8 ba6c 

  0x000002276c99eb64: ; ImmutableOopMap {rdx=Oop [144]=Oop r8=Oop rdi=Oop }
                      ;*getfield fontFace {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@22 (line 156)
                      ;   {metadata({method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eb64: d706 49ba | 409a 1146 | 2702 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002276c99eb7c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eb7c: ffe8 7ec3 

  0x000002276c99eb80: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@-1 (line 273)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@117 (line 168)
  0x000002276c99eb80: d706 e98a | e5ff ff45 | 8b48 7049 | 83f9 000f | 8438 e6ff | ff4c 890c 

  0x000002276c99eb98: ;   {runtime_call g1_pre_barrier_slow}
  0x000002276c99eb98: 24e8 62c9 | d706 e92a | e6ff ff48 | 83f8 000f | 843b e6ff | ff4c 8904 

  0x000002276c99ebb0: ;   {runtime_call g1_post_barrier_slow}
  0x000002276c99ebb0: 24e8 4acc | d706 e92d 

  0x000002276c99ebb8: ;   {metadata({method} {0x0000022746119b00} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ebb8: e6ff ff49 | baf8 9a11 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002276c99ebd0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ebd0: ffff e829 

  0x000002276c99ebd4: ; ImmutableOopMap {[144]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@-1 (line 280)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002276c99ebd4: c3d7 06e9 | 72e6 ffff 

  0x000002276c99ebdc: ;   {metadata({method} {0x0000022746119a48} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ebdc: 49ba 409a | 1146 2702 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002276c99ebf0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ebf0: ffff ffe8 

  0x000002276c99ebf4: ; ImmutableOopMap {[144]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@-1 (line 273)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@8 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002276c99ebf4: 08c3 d706 | e9fe e6ff | ff41 8b50 | 7048 83fa | 000f 8491 | e7ff ff48 

  0x000002276c99ec0c: ;   {runtime_call g1_pre_barrier_slow}
  0x000002276c99ec0c: 8914 24e8 | ecc8 d706 | e983 e7ff | ff48 83f8 | 000f 8494 | e7ff ff4c 

  0x000002276c99ec24: ;   {runtime_call g1_post_barrier_slow}
  0x000002276c99ec24: 8904 24e8 | d4cb d706 | e986 e7ff | ff45 8b48 | 7449 83f9 | 000f 84de | e7ff ff4c 

  0x000002276c99ec40: ;   {runtime_call g1_pre_barrier_slow}
  0x000002276c99ec40: 890c 24e8 | b8c8 d706 | e9d0 e7ff | ff48 83f8 | 000f 84e1 | e7ff ff4c 

  0x000002276c99ec58: ;   {runtime_call g1_post_barrier_slow}
  0x000002276c99ec58: 8904 24e8 | a0cb d706 | e9d3 e7ff 

  0x000002276c99ec64: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ec64: ffe8 b66b 

  0x000002276c99ec68: ; ImmutableOopMap {r8=Oop rsi=Oop rdx=Oop [144]=Oop }
                      ;*getfield matrix {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@167 (line 178)
  0x000002276c99ec68: d706 488b 

  0x000002276c99ec6c: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000002276c99ec6c: d2e8 8e74 

  0x000002276c99ec70: ; ImmutableOopMap {rbx=Oop [192]=Oop [144]=Oop [200]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@177 (line 181)
  0x000002276c99ec70: d706 e9cc 

  0x000002276c99ec74: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ec74: e9ff ffe8 

  0x000002276c99ec78: ; ImmutableOopMap {rbx=Oop [192]=Oop [144]=Oop [200]=Oop rax=Oop }
                      ;*getfield m11 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@183 (line 181)
  0x000002276c99ec78: a46b d706 

  0x000002276c99ec7c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ec7c: e89f 6bd7 

  0x000002276c99ec80: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop r8=Oop }
                      ;*invokevirtual BeginDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
                      ;   {metadata({method} {0x0000022746194498} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99ec80: 0649 ba90 | 4419 4627 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002276c99ec98: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ec98: e863 c2d7 

  0x000002276c99ec9c: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::BeginDraw@-1 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
  0x000002276c99ec9c: 06e9 11eb 

  0x000002276c99eca0: ;   {metadata({method} {0x0000022746194660} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99eca0: ffff 49ba | 5846 1946 | 2702 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002276c99ecb8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ecb8: ffe8 42c2 

  0x000002276c99ecbc: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [192]=Oop [216]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTransform@-1 (line 46)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@251 (line 192)
  0x000002276c99ecbc: d706 e971 

  0x000002276c99ecc0: ;   {metadata({method} {0x00000227461945c8} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99ecc0: ebff ff49 | bac0 4519 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002276c99ecd8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ecd8: ffff e821 

  0x000002276c99ecdc: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop rsi=Oop rdi=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::Clear@-1 (line 42)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@259 (line 193)
  0x000002276c99ecdc: c2d7 06e9 | edeb ffff 

  0x000002276c99ece4: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000002276c99ece4: 488b d2e8 

  0x000002276c99ece8: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop [224]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@262 (line 194)
  0x000002276c99ece8: 1474 d706 | e973 ecff 

  0x000002276c99ecf0: ;   {metadata({method} {0x0000022746194e28} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002276c99ecf0: ff49 ba20 | 4e19 4627 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002276c99ed08: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ed08: e8f3 c1d7 

  0x000002276c99ed0c: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop [224]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.D2D1_POINT_2F::<init>@-1 (line 32)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@272 (line 194)
  0x000002276c99ed0c: 06e9 c5ec 

  0x000002276c99ed10: ;   {metadata({method} {0x000002270443f2f0} '<init>' '()V' in 'java/lang/Object')}
  0x000002276c99ed10: ffff 49ba | e8f2 4304 | 2702 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002276c99ed28: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ed28: ffe8 d2c1 

  0x000002276c99ed2c: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [192]=Oop [224]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.Object::<init>@-1 (line 44)
                      ; - com.sun.javafx.font.directwrite.D2D1_POINT_2F::<init>@1 (line 32)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@272 (line 194)
  0x000002276c99ed2c: d706 e9e3 

  0x000002276c99ed30: ;   {metadata({method} {0x00000227461946f8} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99ed30: ecff ff49 | baf0 4619 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002276c99ed48: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ed48: ffff e8b1 

  0x000002276c99ed4c: ; ImmutableOopMap {[144]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTextAntialiasMode@-1 (line 50)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@294 (line 197)
  0x000002276c99ed4c: c1d7 06e9 | cded ffff 

  0x000002276c99ed54: ;   {metadata({method} {0x0000022746194530} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002276c99ed54: 49ba 2845 | 1946 2702 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002276c99ed68: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ed68: ffff ffe8 

  0x000002276c99ed6c: ; ImmutableOopMap {[200]=Oop [208]=Oop [216]=Oop [240]=Oop [144]=Oop [248]=Oop [192]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::EndDraw@-1 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@313 (line 200)
  0x000002276c99ed6c: 90c1 d706 | e992 eeff 

  0x000002276c99ed74: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ed74: ffe8 a66a 

  0x000002276c99ed78: ; ImmutableOopMap {[200]=Oop [208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop rsi=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@320 (line 201)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ed78: d706 e8a1 

  0x000002276c99ed7c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop rsi=Oop }
                      ;*invokevirtual Lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@414 (line 217)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ed7c: 6ad7 06e8 

  0x000002276c99ed80: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop rax=Oop [264]=Oop }
                      ;*invokevirtual GetDataPointer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002276c99ed80: 9c6a d706 

  0x000002276c99ed84: ;   {metadata({method} {0x0000022746195618} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99ed84: 49ba 1056 | 1946 2702 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002276c99ed98: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ed98: ffff ffe8 

  0x000002276c99ed9c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop rax=Oop [264]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetDataPointer@-1 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002276c99ed9c: 60c1 d706 | e991 f0ff 

  0x000002276c99eda4: ;   {metadata({method} {0x00000227461956b0} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002276c99eda4: ff49 baa8 | 5619 4627 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002276c99edbc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99edbc: e83f c1d7 

  0x000002276c99edc0: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [272]=Oop rax=Oop [264]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetStride@-1 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@438 (line 223)
  0x000002276c99edc0: 06e9 35f1 

  0x000002276c99edc4: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002276c99edc4: ffff e835 

  0x000002276c99edc8: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop [272]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@463 (line 227)
  0x000002276c99edc8: 79d7 06e9 | 3ef2 ffff 

  0x000002276c99edd0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99edd0: e84b 6ad7 

  0x000002276c99edd4: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99edd4: 06e8 466a 

  0x000002276c99edd8: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
  0x000002276c99edd8: d706 4889 | 3c24 4c89 

  0x000002276c99ede0: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ede0: 7424 08e8 

  0x000002276c99ede4: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
  0x000002276c99ede4: 3861 d706 | 4889 3424 | 4889 4424 

  0x000002276c99edf0: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99edf0: 08e8 2a61 

  0x000002276c99edf4: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@510 (line 231)
  0x000002276c99edf4: d706 4c89 | 0c24 4c89 

  0x000002276c99edfc: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99edfc: 7424 08e8 

  0x000002276c99ee00: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@527 (line 232)
  0x000002276c99ee00: 1c61 d706 | 4889 1c24 | 4889 4424 

  0x000002276c99ee0c: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ee0c: 08e8 0e61 

  0x000002276c99ee10: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@530 (line 232)
  0x000002276c99ee10: d706 4889 | 3c24 4c89 

  0x000002276c99ee18: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ee18: 7424 08e8 

  0x000002276c99ee1c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@547 (line 233)
  0x000002276c99ee1c: 0061 d706 | 4889 3424 | 4889 4424 

  0x000002276c99ee28: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ee28: 08e8 f260 

  0x000002276c99ee2c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@550 (line 233)
                      ;   {metadata({method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ee2c: d706 49ba | e097 1146 | 2702 0000 | 4c89 5424 | 0848 c704 | 242d 0200 

  0x000002276c99ee44: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ee44: 00e8 b6c0 

  0x000002276c99ee48: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@557 (line 230)
  0x000002276c99ee48: d706 e9d5 

  0x000002276c99ee4c: ;   {metadata({method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99ee4c: f2ff ff49 | bae0 9711 | 4627 0200 | 004c 8954 | 2408 48c7 | 0424 3a02 

  0x000002276c99ee64: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99ee64: 0000 e895 

  0x000002276c99ee68: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop rax=Oop r14=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@570 (line 228)
  0x000002276c99ee68: c0d7 06e9 | 46f3 ffff 

  0x000002276c99ee70: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002276c99ee70: e88b 78d7 

  0x000002276c99ee74: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@581 (line 239)
  0x000002276c99ee74: 06e9 60f4 

  0x000002276c99ee78: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ee78: ffff e8a1 

  0x000002276c99ee7c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ee7c: 69d7 06e8 

  0x000002276c99ee80: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
  0x000002276c99ee80: 9c69 d706 | 4889 1c24 | 4c89 7424 

  0x000002276c99ee8c: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ee8c: 08e8 8e60 

  0x000002276c99ee90: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
  0x000002276c99ee90: d706 4889 | 3c24 4889 

  0x000002276c99ee98: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002276c99ee98: 4424 08e8 

  0x000002276c99ee9c: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@625 (line 243)
  0x000002276c99ee9c: 8060 d706 

  0x000002276c99eea0: ;   {metadata({method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eea0: 49ba e097 | 1146 2702 | 0000 4c89 | 5424 0848 | c704 2478 

  0x000002276c99eeb4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eeb4: 0200 00e8 

  0x000002276c99eeb8: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@632 (line 242)
  0x000002276c99eeb8: 44c0 d706 | e9ab f4ff 

  0x000002276c99eec0: ;   {metadata({method} {0x00000227461197e8} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002276c99eec0: ff49 bae0 | 9711 4627 | 0200 004c | 8954 2408 | 48c7 0424 | 8502 0000 

  0x000002276c99eed8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002276c99eed8: e823 c0d7 

  0x000002276c99eedc: ; ImmutableOopMap {[208]=Oop [216]=Oop [240]=Oop [144]=Oop [192]=Oop [248]=Oop [200]=Oop [264]=Oop r14=Oop [272]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@645 (line 240)
  0x000002276c99eedc: 06e9 19f5 

  0x000002276c99eee0: ;   {internal_word}
  0x000002276c99eee0: ffff 49ba | d7e6 996c | 2702 0000 | 4d89 9768 

  0x000002276c99eef0: ;   {runtime_call SafepointBlob}
  0x000002276c99eef0: 0300 00e9 | 088b cc06 

  0x000002276c99eef8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99eef8: e823 69d7 

  0x000002276c99eefc: ; ImmutableOopMap {rsi=Oop [248]=Oop [192]=Oop [144]=Oop [240]=Oop [216]=Oop [208]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@331 (line 205)
  0x000002276c99eefc: 068b 5670 | 4883 fa00 | 0f84 a2f8 | ffff 4889 

  0x000002276c99ef0c: ;   {runtime_call g1_pre_barrier_slow}
  0x000002276c99ef0c: 1424 e8ed | c5d7 06e9 | 94f8 ffff | 8b46 7448 | 83f8 000f | 845d f9ff | ff48 8904 

  0x000002276c99ef28: ;   {runtime_call g1_pre_barrier_slow}
  0x000002276c99ef28: 24e8 d2c5 | d706 e94f 

  0x000002276c99ef30: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002276c99ef30: f9ff ffe8 

  0x000002276c99ef34: ; ImmutableOopMap {[192]=Oop [200]=Oop rdx=Oop r8=Oop [144]=Oop rdi=Oop rsi=Oop rbx=Oop [248]=Oop rcx=Oop }
                      ;*putfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@386 (line 212)
  0x000002276c99ef34: e868 d706 

  0x000002276c99ef38: ;   {internal_word}
  0x000002276c99ef38: 49ba 0ce9 | 996c 2702 | 0000 4d89 | 9768 0300 

  0x000002276c99ef48: ;   {runtime_call SafepointBlob}
  0x000002276c99ef48: 00e9 b28a 

  0x000002276c99ef4c: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002276c99ef4c: cc06 e8ad 

  0x000002276c99ef50: ; ImmutableOopMap {r9=Oop r8=Oop [144]=Oop [192]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@160 (line 175)
  0x000002276c99ef50: 77d7 06e9 | 96fa ffff 

  0x000002276c99ef58: ;   {internal_word}
  0x000002276c99ef58: 49ba f6e9 | 996c 2702 | 0000 4d89 | 9768 0300 

  0x000002276c99ef68: ;   {runtime_call SafepointBlob}
  0x000002276c99ef68: 00e9 928a 

  0x000002276c99ef6c: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002276c99ef6c: cc06 e88d 

  0x000002276c99ef70: ; ImmutableOopMap {r8=Oop [144]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@31 (line 157)
  0x000002276c99ef70: 77d7 06e9 | 40fb ffff 

  0x000002276c99ef78: ;   {internal_word}
  0x000002276c99ef78: 49ba c0ea | 996c 2702 | 0000 4d89 | 9768 0300 

  0x000002276c99ef88: ;   {runtime_call SafepointBlob}
  0x000002276c99ef88: 00e9 728a | cc06 9090 | 498b 87e0 | 0300 0049 | c787 e003 | 0000 0000 | 0000 49c7 | 87e8 0300 
  0x000002276c99efa8: 0000 0000 | 0048 81c4 | 6001 0000 

  0x000002276c99efb4: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000002276c99efb4: 5de9 4682 | ce06 f4f4 | f4f4 f4f4 
[Stub Code]
  0x000002276c99efc0: ;   {no_reloc}
  0x000002276c99efc0: 0f1f 4400 

  0x000002276c99efc4: ;   {static_stub}
  0x000002276c99efc4: 0048 bb00 | 0000 0000 

  0x000002276c99efcc: ;   {runtime_call}
  0x000002276c99efcc: 0000 00e9 | fbff ffff 

  0x000002276c99efd4: ;   {static_stub}
  0x000002276c99efd4: 9048 bb00 | 0000 0000 

  0x000002276c99efdc: ;   {runtime_call}
  0x000002276c99efdc: 0000 00e9 | fbff ffff 

  0x000002276c99efe4: ;   {static_stub}
  0x000002276c99efe4: 9048 bb00 | 0000 0000 

  0x000002276c99efec: ;   {runtime_call}
  0x000002276c99efec: 0000 00e9 | fbff ffff 

  0x000002276c99eff4: ;   {static_stub}
  0x000002276c99eff4: 9048 bb00 | 0000 0000 

  0x000002276c99effc: ;   {runtime_call}
  0x000002276c99effc: 0000 00e9 | fbff ffff 

  0x000002276c99f004: ;   {static_stub}
  0x000002276c99f004: 9048 bb00 | 0000 0000 

  0x000002276c99f00c: ;   {runtime_call}
  0x000002276c99f00c: 0000 00e9 | fbff ffff 

  0x000002276c99f014: ;   {static_stub}
  0x000002276c99f014: 9048 bb00 | 0000 0000 

  0x000002276c99f01c: ;   {runtime_call}
  0x000002276c99f01c: 0000 00e9 | fbff ffff 

  0x000002276c99f024: ;   {static_stub}
  0x000002276c99f024: 9048 bb00 | 0000 0000 

  0x000002276c99f02c: ;   {runtime_call}
  0x000002276c99f02c: 0000 00e9 | fbff ffff 

  0x000002276c99f034: ;   {static_stub}
  0x000002276c99f034: 9048 bb00 | 0000 0000 

  0x000002276c99f03c: ;   {runtime_call}
  0x000002276c99f03c: 0000 00e9 | fbff ffff 

  0x000002276c99f044: ;   {static_stub}
  0x000002276c99f044: 9048 bbb0 | bb11 4627 

  0x000002276c99f04c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f04c: 0200 00e9 | 239d ec06 

  0x000002276c99f054: ;   {static_stub}
  0x000002276c99f054: 9048 bb60 | 5187 4527 

  0x000002276c99f05c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f05c: 0200 00e9 | 7549 ca06 

  0x000002276c99f064: ;   {static_stub}
  0x000002276c99f064: 9048 bbc0 | 5387 4527 

  0x000002276c99f06c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f06c: 0200 00e9 | e9e5 cd06 

  0x000002276c99f074: ;   {static_stub}
  0x000002276c99f074: 9048 bb90 | 5287 4527 

  0x000002276c99f07c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f07c: 0200 00e9 | d9e5 cd06 

  0x000002276c99f084: ;   {static_stub}
  0x000002276c99f084: 9048 bb40 | 4819 4627 

  0x000002276c99f08c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f08c: 0200 00e9 | c975 cc06 

  0x000002276c99f094: ;   {static_stub}
  0x000002276c99f094: 9048 bb28 | 5387 4527 

  0x000002276c99f09c: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f09c: 0200 00e9 | 3929 cd06 

  0x000002276c99f0a4: ;   {static_stub}
  0x000002276c99f0a4: 9048 bb90 | 4719 4627 

  0x000002276c99f0ac: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f0ac: 0200 00e9 | 3464 ca06 

  0x000002276c99f0b4: ;   {static_stub}
  0x000002276c99f0b4: 9048 bbf8 | 5187 4527 

  0x000002276c99f0bc: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f0bc: 0200 00e9 | 1549 ca06 

  0x000002276c99f0c4: ;   {static_stub}
  0x000002276c99f0c4: 9048 bb00 | 0000 0000 

  0x000002276c99f0cc: ;   {runtime_call}
  0x000002276c99f0cc: 0000 00e9 | fbff ffff 

  0x000002276c99f0d4: ;   {static_stub}
  0x000002276c99f0d4: 9048 bb58 | 3419 4627 

  0x000002276c99f0dc: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f0dc: 0200 00e9 | 0629 d806 

  0x000002276c99f0e4: ;   {static_stub}
  0x000002276c99f0e4: 9048 bb98 | 4f87 4527 

  0x000002276c99f0ec: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f0ec: 0200 00e9 | e548 ca06 

  0x000002276c99f0f4: ;   {static_stub}
  0x000002276c99f0f4: 9048 bb30 | 5087 4527 

  0x000002276c99f0fc: ;   {runtime_call I2C/C2I adapters}
  0x000002276c99f0fc: 0200 00e9 | d548 ca06 

  0x000002276c99f104: ;   {static_stub}
  0x000002276c99f104: 9048 bb00 | 0000 0000 

  0x000002276c99f10c: ;   {runtime_call}
  0x000002276c99f10c: 0000 00e9 | fbff ffff 

  0x000002276c99f114: ;   {static_stub}
  0x000002276c99f114: 9048 bb00 | 0000 0000 

  0x000002276c99f11c: ;   {runtime_call}
  0x000002276c99f11c: 0000 00e9 | fbff ffff 

  0x000002276c99f124: ;   {static_stub}
  0x000002276c99f124: 9048 bb00 | 0000 0000 

  0x000002276c99f12c: ;   {runtime_call}
  0x000002276c99f12c: 0000 00e9 | fbff ffff 

  0x000002276c99f134: ;   {static_stub}
  0x000002276c99f134: 9048 bb00 | 0000 0000 

  0x000002276c99f13c: ;   {runtime_call}
  0x000002276c99f13c: 0000 00e9 | fbff ffff 

  0x000002276c99f144: ;   {static_stub}
  0x000002276c99f144: 9048 bb00 | 0000 0000 

  0x000002276c99f14c: ;   {runtime_call}
  0x000002276c99f14c: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000002276c99f154: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000002276c99f154: e8a7 87d7 

  0x000002276c99f158: ;   {external_word}
  0x000002276c99f158: 0648 b940 | 9a2c 0afb | 7f00 0048 

  0x000002276c99f164: ;   {runtime_call}
  0x000002276c99f164: 83e4 f049 | ba60 2bf5 | 09fb 7f00 | 0041 ffd2 

  0x000002276c99f174: ;   {section_word}
  0x000002276c99f174: f449 ba75 | f199 6c27 | 0200 0041 

  0x000002276c99f180: ;   {runtime_call DeoptimizationBlob}
  0x000002276c99f180: 52e9 1a7b | cc06 f4f4 
[/MachCode]


Compiled method (c2)  442914 5106   !   4       com.sun.prism.impl.GlyphCache::getCachedGlyph (494 bytes)
 total in heap  [0x0000022773f9d390,0x0000022773fa12a8] = 16152
 relocation     [0x0000022773f9d4e8,0x0000022773f9d668] = 384
 constants      [0x0000022773f9d680,0x0000022773f9d6a0] = 32
 main code      [0x0000022773f9d6a0,0x0000022773f9f6e0] = 8256
 stub code      [0x0000022773f9f6e0,0x0000022773f9f7c8] = 232
 oops           [0x0000022773f9f7c8,0x0000022773f9f7d0] = 8
 metadata       [0x0000022773f9f7d0,0x0000022773f9fa50] = 640
 scopes data    [0x0000022773f9fa50,0x0000022773fa0b18] = 4296
 scopes pcs     [0x0000022773fa0b18,0x0000022773fa0f28] = 1040
 dependencies   [0x0000022773fa0f28,0x0000022773fa1008] = 224
 handler table  [0x0000022773fa1008,0x0000022773fa1200] = 504
 nul chk table  [0x0000022773fa1200,0x0000022773fa12a8] = 168


[Constant Pool]
             Address          hex4                    hex8      
  0x0000022773f9d680:   0x3ea8f5c3      0x3f28f5c33ea8f5c3      
  0x0000022773f9d684:   0x3f28f5c3                              
  0x0000022773f9d688:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x0000022773f9d68c:   0xf4f4f4f4                              
  0x0000022773f9d690:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x0000022773f9d694:   0xf4f4f4f4                              
  0x0000022773f9d698:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x0000022773f9d69c:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000002274618ec40} 'getCachedGlyph' '(II)Lcom/sun/prism/impl/GlyphCache$GlyphData;' in 'com/sun/prism/impl/GlyphCache'
  # this:     rdx:rdx   = 'com/sun/prism/impl/GlyphCache'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0xe0]  (sp of caller)
  0x0000022773f9d6a0: ;   {no_reloc}
  0x0000022773f9d6a0: 448b 5208 | 49bb 0000 | 0004 2702 | 0000 4d03 | d349 3bc2 

  0x0000022773f9d6b4: ;   {runtime_call ic_miss_stub}
  0x0000022773f9d6b4: 0f85 c639 | 6cff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000022773f9d6c0: 8984 2400 | 90ff ff55 | 4881 ecd0 | 0000 0044 | 894c 2434 | 4489 4424 | 4048 8954 | 2448 448b 
  0x0000022773f9d6e0: 4218 448b | 5c24 4041 | c1eb 0541 | c1e1 1b45 | 0bd9 8b5c | 2440 83e3 | 1f41 8bd3 | 81c2 8000 
  0x0000022773f9d700: 0000 4963 | f381 fa00 | 0100 0072 | 444d 8b8f | 0801 0000 | 4d8b d149 | 83c2 104d | 3b97 1801 
  0x0000022773f9d720: 0000 0f83 | 460f 0000 | 4d89 9708 | 0100 0041 | 0f18 8200 | 0100 0049 | c701 0100 

  0x0000022773f9d73c: ;   {metadata('java/lang/Integer')}
  0x0000022773f9d73c: 0000 41c7 | 4108 702f | 0400 4589 | 590c c4c1 | f96e d1eb 

  0x0000022773f9d750: ;   {oop(a 'java/lang/Integer'[256] {0x000000008a74c340})}
  0x0000022773f9d750: 1a49 ba40 | c374 8a00 | 0000 0045 | 8b8c b210 | 0200 004d | 8bd1 c4c1 | f96e d245 

  0x0000022773f9d76c: ;   {metadata('java/util/HashMap')}
  0x0000022773f9d76c: 8b48 0841 | 81f9 685a | 0b00 0f85 | 7e0f 0000 | 4d8b d041 | 8b4a 2485 | c90f 84ee | 0000 0044 
  0x0000022773f9d78c: 8b49 0c45 | 85c9 0f86 | 5c12 0000 | 418b f9ff | cf45 8bc3 | 41c1 e810 | 4533 c341 | 23f8 8b7c 
  0x0000022773f9d7ac: b910 85ff | 0f84 c300 | 0000 8b47 | 0c48 8bef | 413b c00f | 8406 0800 | 008b 4718 | 85c0 0f84 
  0x0000022773f9d7cc: a900 0000 | c4e1 f96e | c644 8bf2 | 448b eb44 | 895c 2444 | 448b 5f08 

  0x0000022773f9d7e4: ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000022773f9d7e4: 4181 fb60 | 8313 000f | 847b 1400 | 0048 8bf0 | 8b5e 0c41 | 3bd8 742c | 498b 9f58 | 0300 0044 
  0x0000022773f9d804: 8b5e 1848 

  0x0000022773f9d808: ; ImmutableOopMap {r10=Oop r11=NarrowOop rcx=NarrowOop rdi=NarrowOop rdx=Oop rbp=Oop xmm2=Oop [72]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 579)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
                      ;   {poll}
  0x0000022773f9d808: 8bd1 8503 | 4585 db74 | 0549 8bf3 | ebde 448b | 5c24 4441 | 8bdd 418b | d6c4 e1f9 | 7ec6 eb51 
  0x0000022773f9d828: 448b 5e10 | c4c1 796e | cbc4 e1f9 | 7ed3 4c3b | db74 36c5 | f97e cb44 

  0x0000022773f9d840: ;   {metadata('java/lang/Integer')}
  0x0000022773f9d840: 8b5b 0841 | 81fb 702f | 0400 0f85 | e714 0000 | 4c8b db41 | 8b5b 0c44 | 8b5c 2444 | bd01 0000 
  0x0000022773f9d860: 0033 c044 | 3bdb 0f45 | e885 ed0f | 84c8 1400 | 0048 8bee | e9a3 0700 | 004d 8b8f | 0801 0000 
  0x0000022773f9d880: 4d8b d149 | 81c2 9000 | 0000 4d3b | 9718 0100 | 000f 838f | 0d00 004d | 8997 0801 | 0000 410f 
  0x0000022773f9d8a0: 1882 0001 | 0000 49c7 | 0101 0000 | 0041 0f18 | 8240 0100 

  0x0000022773f9d8b4: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x0000022773f9d8b4: 0041 c741 | 0810 2f2f | 0141 0f18 | 8280 0100 | 0041 c741 | 0c20 0000 | 0049 8bf9 | 4883 c710 
  0x0000022773f9d8d4: b910 0000 | 00c5 fdef | c0e9 0d00 | 0000 c5fe | 7f07 c5fe | 7f47 2048 | 83c7 4048 | 83e9 087d 
  0x0000022773f9d8f4: ed48 83c1 | 047c 0cc5 | fe7f 0748 | 83c7 2048 | 83e9 0448 | 83c1 047e | 1048 ffc9 | c5f9 d607 
  0x0000022773f9d914: 4883 c708 | 48ff c97d | f34c 8b54 | 2448 418b | 6a18 81fa | 0001 0000 | 723f 4d8b | 8708 0100 
  0x0000022773f9d934: 004d 8bd0 | 4983 c210 | 4d3b 9718 | 0100 000f | 8372 0d00 | 004d 8997 | 0801 0000 | 410f 1882 
  0x0000022773f9d954: 0001 0000 | 49c7 0001 

  0x0000022773f9d95c: ;   {metadata('java/lang/Integer')}
  0x0000022773f9d95c: 0000 0041 | c740 0870 | 2f04 0045 | 8958 0ceb 

  0x0000022773f9d96c: ;   {oop(a 'java/lang/Integer'[256] {0x000000008a74c340})}
  0x0000022773f9d96c: 1549 ba40 | c374 8a00 | 0000 0045 | 8b94 b210 | 0200 004d | 8bc2 448b 

  0x0000022773f9d984: ;   {metadata('java/util/HashMap')}
  0x0000022773f9d984: 5508 4181 | fa68 5a0b | 000f 85d1 | 0f00 004c | 894c 2428 | 895c 2424 | 4489 5c24 | 4448 8bd5 
  0x0000022773f9d9a4: ;   {optimized virtual_call}
  0x0000022773f9d9a4: 6666 90e8 

  0x0000022773f9d9a8: ; ImmutableOopMap {[40]=Oop [72]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x0000022773f9d9a8: 146b ecff | 448b 5424 | 244c 8b5c | 2428 4c8b | 4c24 4845 | 8b41 1441 

  0x0000022773f9d9c0: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x0000022773f9d9c0: 8b48 0881 | f9b8 eb12 | 010f 85a9 | 0e00 004c | 895c 2450 | 4489 5424 | 484c 894c | 2438 498b 
  0x0000022773f9d9e0: d044 8b44 

  0x0000022773f9d9e4: ;   {optimized virtual_call}
  0x0000022773f9d9e4: 2440 90e8 

  0x0000022773f9d9e8: ; ImmutableOopMap {[56]=Oop [80]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x0000022773f9d9e8: 031d 0000 

  0x0000022773f9d9ec: ; implicit exception: dispatches to 0x0000022773f9f374
  0x0000022773f9d9ec: 448b 5008 

  0x0000022773f9d9f0: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x0000022773f9d9f0: 4181 fa30 | 062e 010f | 85a3 0e00 | 0048 8bf8 | 448b 4728 

  0x0000022773f9da04: ; implicit exception: dispatches to 0x0000022773f9ee08
  0x0000022773f9da04: 458b 500c | 8b5c 2434 | 413b da0f | 8313 0d00 | 0049 8bc8 | 498d 5498 | 108b 2a85 | ed0f 8439 
  0x0000022773f9da24: 0600 008b | 772c 448b | 560c 413b | da0f 8369 | 0f00 0041 | 807f 3800 | 0f85 8c09 | 0000 448b 
  0x0000022773f9da44: 549e 1044 | 8957 244c | 8bdf 4d8b | c248 8bf5 | 4d33 c349 | c1e8 144d | 85c0 741f | 4585 d274 
  0x0000022773f9da64: 1a49 c1eb | 0948 b900 | e09c 7b27 | 0200 0049 | 03cb 8039 | 040f 8582 | 0900 0044 | 8b56 0c45 
  0x0000022773f9da84: 85d2 0f86 | 1010 0000 | 4489 5424 | 6c48 8974 | 2458 4889 | 7c24 3089 | 5c24 4c48 | 8bd7 488b 
  0x0000022773f9daa4: ;   {optimized virtual_call}
  0x0000022773f9daa4: ee66 90e8 

  0x0000022773f9daa8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*invokeinterface getOriginX {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@148 (line 271)
  0x0000022773f9daa8: 521c 0000 | 8944 2424 | 488b 5424 

  0x0000022773f9dab4: ;   {optimized virtual_call}
  0x0000022773f9dab4: 3066 90e8 

  0x0000022773f9dab8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*invokeinterface getOriginY {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@155 (line 272)
  0x0000022773f9dab8: 511c 0000 | 8944 2428 | 488b 5424 

  0x0000022773f9dac4: ;   {optimized virtual_call}
  0x0000022773f9dac4: 3066 90e8 

  0x0000022773f9dac8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@1 (line 375)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x0000022773f9dac8: 94cc 9ef8 | 4c8b 5c24 | 3045 8b43 | 2445 8b50 | 1445 2b50 | 0c45 8b43 | 1845 8b48 | 1041 83f9 
  0x0000022773f9dae8: 010f 8425 | 0700 0044 | 8954 242c 

  0x0000022773f9daf4: ;   {optimized virtual_call}
  0x0000022773f9daf4: 498b d3e8 

  0x0000022773f9daf8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@1 (line 381)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x0000022773f9daf8: 64cc 9ef8 | 488b 7c24 | 3044 8b57 | 2441 8b5a | 1841 2b5a | 1049 8b87 | 0801 0000 | 4c8b d049 
  0x0000022773f9db18: 83c2 204d | 3b97 1801 | 0000 0f83 | 6e09 0000 | 4d89 9708 | 0100 0041 | 0f18 8200 | 0100 0048 
  0x0000022773f9db38: c700 0100 

  0x0000022773f9db3c: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x0000022773f9db3c: 0000 c740 | 0878 182f | 0144 8960 | 0c4c 8960 | 104c 8960 | 1848 8bf0 | 498b af08 | 0100 004c 
  0x0000022773f9db5c: 8bd5 4983 | c238 4d3b | 9718 0100 | 000f 83ed | 0800 004d | 8997 0801 | 0000 410f | 1882 0001 
  0x0000022773f9db7c: 0000 48c7 | 4500 0100 

  0x0000022773f9db84: ;   {metadata('java/nio/HeapByteBuffer')}
  0x0000022773f9db84: 0000 c745 | 08e8 191d | 004c 8965 | 104c 8965 | 184c 8965 | 204c 8965 | 284c 8965 | 30c7 450c 
  0x0000022773f9dba4: ffff ffff | 448b 5424 | 6c44 8955 | 1c44 8955 | 20c6 452d | 0144 8865 | 2e4c 8b6c | 2458 4d8b 
  0x0000022773f9dbc4: d544 8955 | 304d 8bd5 | 4c8b dd4d | 33d3 49c1 | ea14 4d85 | d274 1a49 | c1eb 0948 | b900 e09c 
  0x0000022773f9dbe4: 7b27 0200 | 0049 03cb | 8039 040f | 85ed 0600 | 0048 8974 | 2468 4c89 | 6c24 6048 | 897c 2458 
  0x0000022773f9dc04: 4489 6528 | 48c7 4510 | 1000 0000 | 4c8b c589 | 5c24 308b | cb48 8bd6 | 448b 4c24 | 248b 7c24 
  0x0000022773f9dc24: 288b 7424 | 2c49 8bed 

  0x0000022773f9dc2c: ;   {optimized virtual_call}
  0x0000022773f9dc2c: 6666 90e8 

  0x0000022773f9dc30: ; ImmutableOopMap {rbp=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.shape.MaskData::create@20 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x0000022773f9dc30: 061b 0000 | 4c8b 4424 | 6841 8b68 | 1045 8b58 | 0c49 8b87 | 0801 0000 | 488b c848 | 83c1 2041 
  0x0000022773f9dc50: ba02 0000 | 0045 0350 | 1441 b902 | 0000 0045 | 0348 1849 | 3b8f 1801 | 0000 0f83 | 4808 0000 
  0x0000022773f9dc70: 4989 8f08 | 0100 000f | 1881 0001 | 0000 48c7 | 0001 0000 

  0x0000022773f9dc84: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x0000022773f9dc84: 00c7 4008 | 70de 2001 | 4489 600c | 4c89 6010 | 4c89 6018 | 4489 5014 | 4489 4818 | 498b 8f08 
  0x0000022773f9dca4: 0100 0048 | 8bd9 4883 | c328 493b | 9f18 0100 | 000f 8340 | 0800 0049 | 899f 0801 | 0000 0f18 
  0x0000022773f9dcc4: 8300 0100 | 0048 c701 | 0100 0000 

  0x0000022773f9dcd0: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x0000022773f9dcd0: c741 08d8 | 2c2f 0144 | 8961 0c4c | 8961 104c | 8961 184c | 8961 204c | 8984 2498 | 0000 0044 
  0x0000022773f9dcf0: 895c 2424 | 4489 4c24 | 6844 8954 | 246c 4889 | 4424 2848 | 894c 2430 | 488b 5424 

  0x0000022773f9dd0c: ;   {optimized virtual_call}
  0x0000022773f9dd0c: 5866 90e8 

  0x0000022773f9dd10: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [152]=Oop }
                      ;*invokeinterface getPixelXAdvance {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@247 (line 284)
  0x0000022773f9dd10: 351a 0000 | c5fa 1144 | 2470 488b 

  0x0000022773f9dd1c: ;   {optimized virtual_call}
  0x0000022773f9dd1c: 5424 58e8 

  0x0000022773f9dd20: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [152]=Oop }
                      ;*invokeinterface getPixelYAdvance {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@254 (line 285)
  0x0000022773f9dd20: 341a 0000 | c5f9 7ec3 | 4180 7f38 | 000f 8545 | 0500 004c | 8b4c 2430 | c5f9 6ecb | c4c1 7a11 
  0x0000022773f9dd40: 491c c5fa | 1044 2470 | c4c1 7a11 | 4118 448b | d541 8969 | 1044 8b5c | 2424 4589 | 590c 41c7 
  0x0000022773f9dd60: 4114 0100 | 0000 4c8b | 4424 2849 | 8bc8 4189 | 4920 498b | d949 8bc8 | 4833 cb48 | c1e9 1448 
  0x0000022773f9dd80: 85c9 741a | 48c1 eb09 | 48b9 00e0 | 9c7b 2702 | 0000 4803 | cb80 3904 | 0f85 8a05 | 0000 488b 
  0x0000022773f9dda0: 6c24 388b | 5d1c 85db | 0f84 be09 | 0000 4c89 | 8c24 a000 | 0000 4c89 | 4424 7844 | 895c 2474 
  0x0000022773f9ddc0: 4489 5424 | 7048 8bd3 

  0x0000022773f9ddc8: ;   {optimized virtual_call}
  0x0000022773f9ddc8: 6666 90e8 

  0x0000022773f9ddcc: ; ImmutableOopMap {rbp=Oop [80]=Oop [88]=Oop [96]=Oop [120]=Oop [152]=Oop [160]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x0000022773f9ddcc: 9719 0000 | 85c0 0f84 | 040d 0000 | 448b 5d1c 

  0x0000022773f9dddc: ; implicit exception: dispatches to 0x0000022773f9ef34
  0x0000022773f9dddc: 458b 5328 | 488b 4c24 | 7844 8b41 | 188b 5914 

  0x0000022773f9ddec: ; implicit exception: dispatches to 0x0000022773f9efac
  0x0000022773f9ddec: 458b 5a08 

  0x0000022773f9ddf0: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x0000022773f9ddf0: 4181 fb70 | d22e 010f | 85d7 0a00 | 0049 8bfa | 448b 4f38 

  0x0000022773f9de04: ; implicit exception: dispatches to 0x0000022773f9f034
  0x0000022773f9de04: 458b 511c | 4889 bc24 | 8000 0000 | 899c 248c | 0000 0044 | 8984 2488 | 0000 0048 | 896c 2430 
  0x0000022773f9de24: 458b 4114 | 458b d845 | 0faf 5a14 | 4489 9c24 | 9000 0000 | 8beb 410f | afeb 89ac | 2494 0000 
  0x0000022773f9de44: 000f afac | 2488 0000 

  0x0000022773f9de4c: ;   {oop(a 'java/lang/Class'{0x000000008af9ea98} = 'com/sun/prism/impl/GlyphCache')}
  0x0000022773f9de4c: 0049 ba98 | eaf9 8a00 | 0000 0045 | 8b52 7041 | 8b4a 203b | e90f 8ff1 | 0c00 004c | 8b5c 2478 
  0x0000022773f9de6c: 418b 7310 | 418b 7b0c | 4d8b c248 | 8b94 2480 | 0000 0033 | c945 33db | 4489 1c24 | 895c 2408 
  0x0000022773f9de8c: 448b 9424 | 8800 0000 | 4489 5424 | 1044 8b9c | 2494 0000 | 0044 895c | 2418 41bb | 0100 0000 
  0x0000022773f9deac: 4489 5c24 

  0x0000022773f9deb0: ;   {optimized virtual_call}
  0x0000022773f9deb0: 2066 90e8 

  0x0000022773f9deb4: ; ImmutableOopMap {[48]=Oop [80]=Oop [88]=Oop [96]=Oop [120]=Oop [128]=Oop [152]=Oop [160]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@436 (line 322)
  0x0000022773f9deb4: c86c c4f8 | 4c8b 9424 | 8000 0000 | 458b 4238 | 4c8b 5424 | 7841 8b7a | 0c4c 8b94 | 2498 0000 
  0x0000022773f9ded4: 0041 8b42 | 144c 8b54 | 2478 418b | 7210 ffc7 | ffc6 458b | 481c 458b | 5814 458b | d345 0faf 
  0x0000022773f9def4: 5114 440f | afd0 4489 | 5424 2c4c | 8b94 2498 | 0000 0041 | 8b5a 1845 | 8b5a 1c4d | 8bc8 4d8b 
  0x0000022773f9df14: c389 7c24 | 2489 7424 | 2848 8b94 | 2480 0000 | 0033 c945 | 33db 4489 | 1c24 8944 | 2408 895c 
  0x0000022773f9df34: 2410 448b | 5424 2c44 | 8954 2418 | 41ba 0100 | 0000 4489 

  0x0000022773f9df48: ;   {optimized virtual_call}
  0x0000022773f9df48: 5424 20e8 

  0x0000022773f9df4c: ; ImmutableOopMap {[48]=Oop [80]=Oop [88]=Oop [96]=Oop [120]=Oop [128]=Oop [152]=Oop [160]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.shape.MaskData::uploadToTexture@43 (line 66)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@481 (line 334)
  0x0000022773f9df4c: 306c c4f8 | 4c8b 4424 | 5045 8b50 | 0c44 8b4c | 2448 453b | ca0f 836d | 0800 004b | 8d5c 8810 
  0x0000022773f9df6c: 4180 7f38 | 000f 8539 | 0300 004c | 8bd3 488b | bc24 a000 | 0000 4c8b | df44 891b | 4c8b df4d 
  0x0000022773f9df8c: 33da 49c1 | eb14 4d85 | db74 1b49 | c1ea 0949 | b800 e09c | 7b27 0200 | 004d 03c2 | 4180 3804 
  0x0000022773f9dfac: 0f85 d203 | 0000 488b | c748 81c4 | d000 0000 

  0x0000022773f9dfbc: ;   {poll_return}
  0x0000022773f9dfbc: 5d49 3ba7 | 5003 0000 | 0f87 e516 | 0000 c3c4 | e1f9 6ec6 | 448b f244 | 8beb 4489 | 5c24 448b 
  0x0000022773f9dfdc: 5f10 4c8b | dbc4 e1f9 | 7ed2 4c3b | da74 318b 

  0x0000022773f9dfec: ;   {metadata('java/lang/Integer')}
  0x0000022773f9dfec: 5308 81fa | 702f 0400 | 0f85 1b0c | 0000 4c8b | db41 8b73 | 0c8b 4424 | 4441 bb01 | 0000 0033 
  0x0000022773f9e00c: d23b c644 | 0f45 da45 | 85db 0f84 | fc0b 0000 | 448b 5d14 | 4585 db0f | 841e 0400 | 0045 8b53 
  0x0000022773f9e02c: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x0000022773f9e02c: 0841 81fa | 102f 2f01 | 0f85 5e0d | 0000 458b | 4b0c 458b | d545 3be9 | 0f83 ea09 | 0000 478b 
  0x0000022773f9e04c: 4cab 1045 | 85c9 0f84 | 5ef9 ffff | 498b c1e9 | 55ff ffff | c5f0 57c9 

  0x0000022773f9e064: ;   {section_word}
  0x0000022773f9e064: c5fa 1005 | 18f6 ffff 

  0x0000022773f9e06c: ;   {section_word}
  0x0000022773f9e06c: c5fa 101d | 0cf6 ffff | 83fb 067d | 0e83 fb03 | 7d16 c5e8 | 57d2 448b | d3eb 1844 | 8bd3 4183 
  0x0000022773f9e08c: c2fa c5f8 | 28d0 eb0b | 448b d341 | 83c2 fdc5 | f828 d341 | 83fa 010f | 8489 0100 | 0041 83fa 
  0x0000022773f9e0ac: 020f 8474 | 0100 00c5 | fa11 4c24 | 7844 8b4f | 1845 8b59 | 1041 83fb | 010f 8470 | 0100 00c5 
  0x0000022773f9e0cc: fa11 5424 | 6c44 8954 | 2468 4889 | 5424 6048 | 894c 2458 | 4889 7c24 | 2889 5c24 | 3041 8be8 
  0x0000022773f9e0ec: 488b d7c5 | fa10 4424 | 78c5 f828 | ca45 33c0 

  0x0000022773f9e0fc: ;   {optimized virtual_call}
  0x0000022773f9e0fc: 6666 90e8 

  0x0000022773f9e100: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Derived_oop_[88] }
                      ;*invokevirtual getD2DMask {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@98 (line 353)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9e100: dcea 9ff8 | 488b d841 | 807f 3800 | 0f85 1e04 | 0000 4c8b | 4424 6048 | 8bf3 4c8b | d345 8910 
  0x0000022773f9e120: 4d8b d04c | 8bdb 4d33 | da49 c1eb | 144d 85db | 741f 4885 | db74 1a49 | c1ea 0948 | b900 e09c 
  0x0000022773f9e140: 7b27 0200 | 0049 03ca | 8039 040f | 8549 0400 | 0048 8b7c | 2428 448b | 572c 8b6f | 2445 8b5a 
  0x0000022773f9e160: 0c8b 5c24 | 3041 3bdb | 0f83 4e0b | 0000 4d8b | da4d 8d6c | 9a10 4180 | 7f38 000f | 85e6 0300 
  0x0000022773f9e180: 0041 896d | 004c 8bd5 | 4d8b dd4d | 33d3 49c1 | ea14 4d85 | d274 1e85 | ed74 1a49 | c1eb 0948 
  0x0000022773f9e1a0: b900 e09c | 7b27 0200 | 0049 03cb | 8039 040f | 852b 0400 | 0048 85f6 | 0f85 c1f8 | ffff ba45 
  0x0000022773f9e1c0: ffff ff48 | 8b6c 2438 | 448b 5424 | 4044 8954 | 2424 4889 | 4424 f88b | 4424 3089 | 4424 2848 
  0x0000022773f9e1e0: 8b44 24f8 | 448b 5c24 | 4444 895c | 242c 448b | 5424 4844 | 8954 2430 | 4c8b 5424 | 504c 8954 
  0x0000022773f9e200: 2438 4889 | 7c24 4048 | 8974 2450 

  0x0000022773f9e20c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e20c: 6666 90e8 

  0x0000022773f9e210: ; ImmutableOopMap {rbp=Oop [56]=Oop [64]=Oop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@105 (line 260)
  0x0000022773f9e210: ec86 6cff | 458b ca41 | d1e1 4503 | ca44 894c | 242c e9cd | f8ff ffc5 | fa11 4424 | 78e9 87fe 
  0x0000022773f9e230: ffff c5f8 | 28cb e96e | feff ffc5 | fa11 5424 | 6c44 8954 | 2468 4889 | 5424 6048 | 894c 2458 
  0x0000022773f9e250: 4889 7c24 | 2889 5c24 | 3041 8be8 | 488b d7c5 | fa10 4424 | 78c5 f828 

  0x0000022773f9e268: ;   {optimized virtual_call}
  0x0000022773f9e268: ca66 90e8 

  0x0000022773f9e26c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Derived_oop_[88] }
                      ;*invokevirtual getLCDMask {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@87 (line 352)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9e26c: 1031 6cff | 488b d8e9 | 8ffe ffff | 4c8b 4c24 | 3045 8b59 | 2045 85db | 0f84 aefa | ffff 4d8b 
  0x0000022773f9e28c: 5720 498b | cb4d 85d2 | 0f84 d207 | 0000 4d8b | 5f30 4b89 | 4c13 f849 | 83c2 f84d | 8957 20e9 
  0x0000022773f9e2ac: 88fa ffff | 448b 1b45 | 85db 0f84 | bbfc ffff | 4d8b 5720 | 498b cb4d | 85d2 0f84 | bb07 0000 
  0x0000022773f9e2cc: 4d8b 5f30 | 4b89 4c13 | f849 83c2 | f84d 8957 | 20e9 95fc | ffff 4d8b | 5750 4d8b | 5f40 f083 
  0x0000022773f9e2ec: 4424 c000 | 8039 000f | 84fc f8ff | ff44 8821 | 4d85 db75 | 1549 8bd7 | 49ba 404c | c709 fb7f 
  0x0000022773f9e30c: 0000 41ff | d2e9 dff8 | ffff 4b89 | 4c1a f849 | 83c3 f84d | 895f 40e9 | cdf8 ffff | 498b 5f40 
  0x0000022773f9e32c: 498b 7f50 | f083 4424 | c000 8039 | 000f 845f | faff ff44 | 8821 4885 | db75 2b49 | 8be9 418b 
  0x0000022773f9e34c: fa49 8bd7 | 49ba 404c | c709 fb7f | 0000 41ff | d244 8bd7 | 448b 5c24 | 244c 8b44 | 2428 4c8b 
  0x0000022773f9e36c: cde9 2cfa | ffff 4889 | 4c1f f848 | 83c3 f849 | 895f 40e9 | 1afa ffff | 4d8b 5740 | 4d8b 5f50 
  0x0000022773f9e38c: f083 4424 | c000 4180 | 3800 0f84 | 16fc ffff | 4588 204d | 85d2 7518 | 498b c849 | 8bd7 49ba 
  0x0000022773f9e3ac: 404c c709 | fb7f 0000 | 41ff d2e9 | f6fb ffff | 4f89 4413 | f849 83c2 | f84d 8957 | 40e9 e4fb 
  0x0000022773f9e3cc: ffff 448b | 5f24 4585 | db0f 8467 | f6ff ff4d | 8b57 2049 | 8bcb 4d85 | d20f 8415 | 0800 004d 
  0x0000022773f9e3ec: 8b5f 304b | 894c 13f8 | 4983 c2f8 | 4d89 5720 | e941 f6ff | ff4d 8b57 | 404d 8b5f | 50f0 8344 
  0x0000022773f9e40c: 24c0 0080 | 3900 0f84 | 67f6 ffff | 4488 214d | 85d2 7515 | 498b d749 | ba40 4cc7 | 09fb 7f00 
  0x0000022773f9e42c: 0041 ffd2 | e94a f6ff | ff4b 894c | 13f8 4983 | c2f8 4d89 | 5740 e938 | f6ff ff44 | 8b5c 2444 
  0x0000022773f9e44c: 418b dd41 | 8bd6 c4e1 | f97e c6e9 | 1df4 ffff | 4889 7424 | 7089 5c24 | 6848 897c 

  0x0000022773f9e468: ;   {metadata('java/nio/HeapByteBuffer')}
  0x0000022773f9e468: 2460 48ba | e819 1d04 | 2702 0000 | 488b 6c24 

  0x0000022773f9e478: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e478: 3866 90e8 

  0x0000022773f9e47c: ; ImmutableOopMap {rbp=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.nio.ByteBuffer::wrap@0 (line 408)
                      ; - java.nio.ByteBuffer::wrap@4 (line 437)
                      ; - com.sun.prism.impl.shape.MaskData::create@12 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x0000022773f9e47c: 0010 78ff | 488b 7c24 | 608b 5c24 | 6848 8b74 | 2470 488b | e8e9 0bf7 | ffff 895c | 2430 488b 
  0x0000022773f9e49c: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x0000022773f9e49c: ef48 ba78 | 182f 0527 

  0x0000022773f9e4a4: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e4a4: 0200 00e8 

  0x0000022773f9e4a8: ; ImmutableOopMap {rbp=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.shape.MaskData::create@0 (line 85)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x0000022773f9e4a8: d40f 78ff | 488b fd8b | 5c24 30e9 | 99f6 ffff | 4489 5424 | 3044 894c | 242c 4489 | 5c24 2889 
  0x0000022773f9e4c8: 6c24 2449 

  0x0000022773f9e4cc: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x0000022773f9e4cc: 8be8 48ba | 70de 2005 | 2702 0000 

  0x0000022773f9e4d8: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e4d8: 6666 90e8 

  0x0000022773f9e4dc: ; ImmutableOopMap {rbp=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@220 (line 282)
  0x0000022773f9e4dc: a00f 78ff | 4c8b c58b | 6c24 2444 | 8b5c 2428 | 448b 4c24 | 2c44 8b54 | 2430 e99d | f7ff ff48 
  0x0000022773f9e4fc: 8944 2428 | 4489 5424 | 6c44 894c | 2468 4489 | 5c24 244c | 8984 2498 

  0x0000022773f9e514: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x0000022773f9e514: 0000 0048 | bad8 2c2f | 0527 0200 

  0x0000022773f9e520: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e520: 0066 90e8 

  0x0000022773f9e524: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [152]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@235 (line 283)
  0x0000022773f9e524: 580f 78ff | 488b c8e9 | d3f7 ffff | 4c8b 4424 | 6045 8b18 | 4585 db0f | 84d6 fbff | ff4d 8b57 
  0x0000022773f9e544: 2049 8bcb | 4d85 d20f | 84b7 0700 | 004d 8b5f | 304b 894c | 13f8 4983 | c2f8 4d89 | 5720 e9b0 
  0x0000022773f9e564: fbff ff45 | 8b5d 0045 | 85db 0f84 | 0dfc ffff | 4d8b 5720 | 498b cb4d | 85d2 0f84 | 9e07 0000 
  0x0000022773f9e584: 4d8b 5f30 | 4b89 4c13 | f849 83c2 | f84d 8957 | 20e9 e7fb | ffff 4d8b | 5750 4d8b | 5f40 f083 
  0x0000022773f9e5a4: 4424 c000 | 8039 000f | 84a0 fbff | ff44 8821 | 4d85 db75 | 1549 8bd7 | 49ba 404c | c709 fb7f 
  0x0000022773f9e5c4: 0000 41ff | d2e9 83fb | ffff 4b89 | 4c1a f849 | 83c3 f84d | 895f 40e9 | 71fb ffff | 4d8b 5740 
  0x0000022773f9e5e4: 4d8b 5f50 | f083 4424 | c000 8039 | 000f 84be | fbff ff44 | 8821 4d85 | d275 1549 | 8bd7 49ba 
  0x0000022773f9e604: 404c c709 | fb7f 0000 | 41ff d2e9 | a1fb ffff | 4b89 4c13 | f849 83c2 | f84d 8957 | 40e9 8ffb 
  0x0000022773f9e624: ffff 4889 | 7424 3889 | 5424 2c89 | 5c24 2844 | 895c 2424 | 488b 6c24 

  0x0000022773f9e63c: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x0000022773f9e63c: 4848 ba10 | 2f2f 0527 | 0200 0041 | b820 0000 

  0x0000022773f9e64c: ;   {runtime_call _new_array_Java}
  0x0000022773f9e64c: 0066 90e8 

  0x0000022773f9e650: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@54 (line 251)
  0x0000022773f9e650: 2c11 78ff | 448b 5c24 | 248b 5c24 | 288b 5424 | 2c48 8b74 | 2438 4c8b | c8e9 aff2 | ffff 4889 
  0x0000022773f9e670: 7424 3889 | 5424 3089 | 5c24 2c44 | 895c 2428 | 4489 4424 | 2448 8b6c 

  0x0000022773f9e688: ;   {metadata('java/lang/Integer')}
  0x0000022773f9e688: 2448 48ba | 702f 0404 | 2702 0000 

  0x0000022773f9e694: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e694: 6666 90e8 

  0x0000022773f9e698: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [72]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1081)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@22 (line 245)
  0x0000022773f9e698: e40d 78ff | 4c8b c844 | 8b44 2424 | 448b 5c24 | 288b 5c24 | 2c8b 5424 | 3048 8b74 | 2438 e98b 
  0x0000022773f9e6b8: f0ff ff4c | 894c 2438 | 895c 2430 | 4489 5c24 | 244c 8b54 | 2448 4c89 

  0x0000022773f9e6d0: ;   {metadata('java/lang/Integer')}
  0x0000022773f9e6d0: 5424 2848 | ba70 2f04 | 0427 0200 

  0x0000022773f9e6dc: ;   {runtime_call _new_instance_Java}
  0x0000022773f9e6dc: 0066 90e8 

  0x0000022773f9e6e0: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [56]=Oop [72]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1081)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@64 (line 252)
  0x0000022773f9e6e0: 9c0d 78ff | 4c8b c044 | 8b5c 2424 | 8b5c 2430 | 4c8b 4c24 | 38e9 6df2 | ffff bade | ffff ff48 
  0x0000022773f9e700: 8b6c 2448 | 448b 4c24 | 3444 894c | 2428 4489 | 5c24 2c89 | 5c24 3044 | 8944 2434 | c5fb 1154 
  0x0000022773f9e720: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e720: 2438 90e8 

  0x0000022773f9e724: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [56]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9e724: d881 6cff | bae4 ffff | ff48 8b6c | 2438 448b | 5424 4044 | 8954 2424 | 448b 5c24 | 4444 895c 
  0x0000022773f9e744: 242c 448b | 5424 4844 | 8954 2430 | 4c8b 5424 | 504c 8954 | 2438 4889 | 7c24 4844 | 8944 2450 
  0x0000022773f9e764: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e764: 6666 90e8 

  0x0000022773f9e768: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=NarrowOop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@5 (line 335)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9e768: 9481 6cff | baf6 ffff | ff8b 4c24 | 4089 4c24 | 248b 5c24 | 4c89 5c24 | 288b 4c24 | 4489 4c24 
  0x0000022773f9e788: 2c8b 5c24 | 4889 5c24 | 3048 8b4c | 2450 4889 | 4c24 384c | 894c 2440 | 4c8b 4c24 | 584c 894c 
  0x0000022773f9e7a8: 2448 4c8b | 4c24 604c | 894c 2450 | 448b 4c24 | 6844 894c | 2460 4489 | 5c24 6444 | 8954 2468 
  0x0000022773f9e7c8: 4c89 4424 

  0x0000022773f9e7cc: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e7cc: 7866 90e8 

  0x0000022773f9e7d0: ; ImmutableOopMap {rbp=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [120]=Oop [152]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x0000022773f9e7d0: 2c81 6cff | bae4 ffff | ff4c 8b54 | 2430 4c89 | 5424 2844 | 8b5c 2440 | 4489 5c24 | 2444 8b54 
  0x0000022773f9e7f0: 244c 4489 | 5424 3044 | 8b5c 2444 | 4489 5c24 | 344c 8b54 | 2458 4c89 | 5424 504c | 8b54 2460 
  0x0000022773f9e810: 4c89 5424 | 584c 8b94 | 2498 0000 | 004c 8954 | 2460 448b | 5424 6c44 | 8954 243c | 448b 5c24 
  0x0000022773f9e830: 7444 895c | 246c 448b | 9424 8c00 | 0000 4489 | 5424 7444 | 8b9c 2490 | 0000 0044 | 899c 248c 
  0x0000022773f9e850: 0000 0044 | 8b94 2494 | 0000 0044 | 8994 2490 | 0000 004c | 8984 2498 | 0000 0044 | 898c 2494 
  0x0000022773f9e870: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e870: 0000 00e8 

  0x0000022773f9e874: ; ImmutableOopMap {[40]=Oop [80]=Oop [88]=Oop [96]=Oop [120]=Oop [128]=Oop [152]=Oop [160]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@490 (line 340)
  0x0000022773f9e874: 8880 6cff | bade ffff | ff49 8be9 | 448b 4c24 | 3444 894c | 2428 4489 | 5424 304c | 895c 2438 
  0x0000022773f9e894: 4489 4424 

  0x0000022773f9e898: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e898: 3466 90e8 

  0x0000022773f9e89c: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [56]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x0000022773f9e89c: 6080 6cff | bade ffff | ff48 8b6c | 2438 448b | 5424 4044 | 8954 2424 | 448b 5424 | 4444 8954 
  0x0000022773f9e8bc: 242c 448b | 5c24 4844 | 895c 2430 | 4889 4424 

  0x0000022773f9e8cc: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e8cc: 4866 90e8 

  0x0000022773f9e8d0: ; ImmutableOopMap {rbp=Oop [72]=Oop [80]=Oop }
                      ;*invokeinterface getPixelData {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9e8d0: 2c80 6cff | bade ffff | ff44 8b5c | 2440 4489 | 5c24 2444 | 8b4c 244c | 4489 4c24 | 2844 8b5c 
  0x0000022773f9e8f0: 2444 4489 | 5c24 2c44 | 8b4c 2448 | 4489 4c24 | 304c 8b5c | 2450 4c89 | 5c24 384c | 8b5c 2458 
  0x0000022773f9e910: 4c89 5c24 | 484c 8b5c | 2460 4c89 | 5c24 5044 | 8b5c 246c | 4489 5c24 | 3444 8b4c | 2468 4489 
  0x0000022773f9e930: 4c24 6044 | 8b5c 2474 | 4489 5c24 | 6444 8b4c | 2470 4489 | 4c24 6848 | 894c 2470 | 895c 2478 
  0x0000022773f9e950: 4489 4424 | 7c44 8994 | 2480 0000 

  0x0000022773f9e95c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e95c: 0066 90e8 

  0x0000022773f9e960: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=NarrowOop [152]=Oop [160]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@355 (line 314)
  0x0000022773f9e960: 9c7f 6cff | bade ffff | ff4c 8b54 | 2448 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 248b 4c24 
  0x0000022773f9e980: 3489 4c24 | 3044 895c | 2434 895c | 2438 4c89 | 4424 484c | 894c 2450 

  0x0000022773f9e998: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e998: 6666 90e8 

  0x0000022773f9e99c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x0000022773f9e99c: 607f 6cff | bae4 ffff | ff4c 8b54 | 2438 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b54 
  0x0000022773f9e9bc: 2444 4489 | 5424 3444 | 8b5c 2448 | 4489 5c24 | 384c 8b54 | 2450 4c89 | 5424 4048 | 897c 2450 
  0x0000022773f9e9dc: 895c 243c | 4889 7c24 | 5889 7424 | 6089 5c24 

  0x0000022773f9e9ec: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9e9ec: 6466 90e8 

  0x0000022773f9e9f0: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=NarrowOop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@123 (line 356)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9e9f0: 0c7f 6cff | ba45 ffff | ff48 8b6c | 2448 448b | 4424 4044 | 8944 2424 | 8b7c 2434 | 897c 2428 
  0x0000022773f9ea10: 4489 5c24 | 2c89 5c24 | 304c 8954 | 2448 c5fb | 1154 2450 | 894c 2434 | 4489 4c24 

  0x0000022773f9ea2c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ea2c: 5c66 90e8 

  0x0000022773f9ea30: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop [80]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 567)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9ea30: cc7e 6cff | bae4 ffff | ff48 8b6c | 2448 448b | 4c24 4044 | 894c 2424 | 448b 4424 | 3444 8944 
  0x0000022773f9ea50: 2428 448b | 4c24 4444 | 894c 242c | 4c89 5c24 | 4044 896c 

  0x0000022773f9ea64: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ea64: 2434 90e8 

  0x0000022773f9ea68: ; ImmutableOopMap {rbp=Oop [64]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@42 (line 247)
  0x0000022773f9ea68: 947e 6cff | 498b f949 | 8bd7 49ba | 604c c709 | fb7f 0000 | 41ff d24c | 8bcf e9b1 | f2ff ff49 
  0x0000022773f9ea88: 8bd7 49ba | 604c c709 | fb7f 0000 | 41ff d2e9 | dbf4 ffff | ba45 ffff | ff48 8b6c | 2438 448b 
  0x0000022773f9eaa8: 5c24 4044 | 895c 2424 | 895c 2428 | 448b 4424 | 4444 8944 | 242c 448b | 5c24 4844 | 895c 2430 
  0x0000022773f9eac8: 4889 7c24 | 4048 8974 | 2448 4489 

  0x0000022773f9ead4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ead4: 5424 34e8 

  0x0000022773f9ead8: ; ImmutableOopMap {rbp=Oop [64]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@111 (line 260)
  0x0000022773f9ead8: 247e 6cff | ba45 ffff | ff44 8b54 | 2440 4489 | 5424 2444 | 8b5c 244c | 4489 5c24 | 2844 8b54 
  0x0000022773f9eaf8: 2444 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 304c 8b54 | 2450 4c89 | 5424 384c | 8b54 2458 
  0x0000022773f9eb18: 4c89 5424 | 484c 8b54 | 2460 4c89 | 5424 5044 | 8b54 246c | 4489 5424 | 3444 8b5c | 2468 4489 
  0x0000022773f9eb38: 5c24 6044 | 8b54 2474 | 4489 5424 | 6444 8b5c | 2470 4489 | 5c24 6889 

  0x0000022773f9eb50: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9eb50: 4424 6ce8 

  0x0000022773f9eb54: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [120]=Oop [152]=Oop [160]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@275 (line 288)
  0x0000022773f9eb54: a87d 6cff | ba45 ffff | ff4c 8b54 | 2430 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b5c 
  0x0000022773f9eb74: 244c 4489 | 5c24 3044 | 8b54 2444 | 4489 5424 | 3444 8b5c | 2448 4489 | 5c24 384c | 8b54 2450 
  0x0000022773f9eb94: 4c89 5424 | 404c 8b54 | 2458 4c89 | 5424 504c | 8b54 2460 | 4c89 5424 | 584c 8b94 | 2498 0000 
  0x0000022773f9ebb4: 004c 8954 | 2460 448b | 5424 6c44 | 8954 243c | 448b 5c24 | 7444 895c | 246c 895c | 2474 448b 
  0x0000022773f9ebd4: 9c24 9000 | 0000 4489 | 9c24 8c00 | 0000 448b | 9424 9400 | 0000 4489 | 9424 9000 | 0000 898c 
  0x0000022773f9ebf4: 2498 0000 

  0x0000022773f9ebf8: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ebf8: 0066 90e8 

  0x0000022773f9ebfc: ; ImmutableOopMap {[40]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [120]=Oop [128]=Oop [160]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@393 (line 317)
  0x0000022773f9ebfc: 007d 6cff | 498b d749 | ba60 4cc7 | 09fb 7f00 | 0041 ffd2 | e92d eeff | ff45 33db | ba45 ffff 
  0x0000022773f9ec1c: ff48 8b6c | 2448 8b74 | 2440 8974 | 2424 8b44 | 2434 8944 | 2428 8b74 | 2444 8974 | 242c 4489 
  0x0000022773f9ec3c: 6c24 304c | 8954 2448 | c5fb 1154 | 2450 894c | 2434 897c | 2458 4489 | 4c24 5c44 | 8944 2460 
  0x0000022773f9ec5c: 895c 2464 | 4489 5c24 

  0x0000022773f9ec64: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ec64: 6866 90e8 

  0x0000022773f9ec68: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=NarrowOop [100]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@66 (line 570)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9ec68: 947c 6cff | ba45 ffff | ff48 8b6c | 2448 8b5c | 2440 895c | 2424 448b | 5c24 3444 | 895c 2428 
  0x0000022773f9ec88: 8b5c 2444 | 895c 242c | 4489 6c24 | 304c 8954 | 2448 c5fb | 1154 2450 | 894c 2434 | 897c 2458 
  0x0000022773f9eca8: 8944 245c | 4489 4c24 | 6044 8944 

  0x0000022773f9ecb4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ecb4: 2464 90e8 

  0x0000022773f9ecb8: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=NarrowOop [92]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@85 (line 573)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9ecb8: 447c 6cff | bae4 ffff | ff4c 8b5c | 2438 4c89 | 5c24 2844 | 8b44 2440 | 4489 4424 | 2444 8b5c 
  0x0000022773f9ecd8: 2444 4489 | 5c24 3444 | 8b5c 2448 | 4489 5c24 | 384c 8b5c | 2450 4c89 | 5c24 4048 | 897c 2450 
  0x0000022773f9ecf8: 4889 7424 | 5844 8954 

  0x0000022773f9ed00: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ed00: 2470 90e8 

  0x0000022773f9ed04: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [64]=Oop [80]=Oop [88]=Oop [112]=NarrowOop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9ed04: f87b 6cff | 498b d749 | ba60 4cc7 | 09fb 7f00 | 0041 ffd2 | 4c8b 4424 | 60e9 f5f3 | ffff 498b 
  0x0000022773f9ed24: d749 ba60 | 4cc7 09fb | 7f00 0041 | ffd2 e94a | f4ff ff33 | edba 45ff | ffff 4c8b | 5c24 484c 
  0x0000022773f9ed44: 895c 2428 | 448b 5c24 | 4044 895c | 2424 8b5c | 2434 895c | 2430 448b | 5c24 4444 | 895c 2434 
  0x0000022773f9ed64: 4489 6c24 | 384c 8954 | 2450 c5fb | 1154 2458 | 894c 243c | 897c 2460 | 4889 7424 | 6844 894c 
  0x0000022773f9ed84: 2464 4489 | 4424 70c5 | fa11 4c24 

  0x0000022773f9ed90: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ed90: 7466 90e8 

  0x0000022773f9ed94: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [80]=Oop [88]=Oop [96]=NarrowOop [104]=Oop [116]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@131 (line 577)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9ed94: 687b 6cff | bade ffff | ff48 8b6c | 2448 448b | 5424 3444 | 8954 2428 | 4489 6c24 | 3044 895c 
  0x0000022773f9edb4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9edb4: 2434 90e8 

  0x0000022773f9edb8: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@28 (line 245)
  0x0000022773f9edb8: 447b 6cff | baf6 ffff | ff48 8b6c | 2448 4489 | 5c24 2c89 | 5c24 30c5 | fb11 5424 

  0x0000022773f9edd4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9edd4: 3866 90e8 

  0x0000022773f9edd8: ; ImmutableOopMap {rbp=Oop [56]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9edd8: 247b 6cff | baf6 ffff | ff49 8be9 | 448b 4424 | 4044 8944 | 2424 448b | 4c24 3444 | 894c 2428 
  0x0000022773f9edf8: 4489 5424 | 304c 895c 

  0x0000022773f9ee00: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ee00: 2438 90e8 

  0x0000022773f9ee04: ; ImmutableOopMap {rbp=Oop [56]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x0000022773f9ee04: f87a 6cff | baf6 ffff | ff48 8b6c | 2438 448b | 5c24 4044 | 895c 2424 | 448b 5424 | 3444 8954 
  0x0000022773f9ee24: 2428 448b | 5c24 4444 | 895c 242c | 448b 5424 | 4844 8954 | 2430 4c8b | 5424 504c | 8954 2438 
  0x0000022773f9ee44: 4889 7c24 

  0x0000022773f9ee48: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ee48: 4866 90e8 

  0x0000022773f9ee4c: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@5 (line 335)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9ee4c: b07a 6cff | baf6 ffff | ff48 8b6c | 2438 448b | 5424 4044 | 8954 242c | 448b 4424 | 4c44 8944 
  0x0000022773f9ee6c: 2430 448b | 5424 4444 | 8954 2434 | 448b 4424 | 4844 8944 | 2438 4c8b | 5424 504c | 8954 2440 
  0x0000022773f9ee8c: 4c89 5c24 

  0x0000022773f9ee90: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ee90: 6066 90e8 

  0x0000022773f9ee94: ; ImmutableOopMap {rbp=Oop [64]=Oop [88]=Oop [96]=Oop }
                      ;*getfield right {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getWidth@8 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x0000022773f9ee94: 687a 6cff | baf6 ffff | ff48 8b6c | 2438 448b | 4424 4044 | 8944 242c | 448b 4c24 | 4c44 894c 
  0x0000022773f9eeb4: 2430 448b | 4424 4444 | 8944 2434 | 448b 4c24 | 4844 894c | 2438 4c8b | 4424 504c | 8944 2440 
  0x0000022773f9eed4: 4c89 5c24 | 6044 8954 | 243c 4c89 

  0x0000022773f9eee0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9eee0: 5c24 68e8 

  0x0000022773f9eee4: ; ImmutableOopMap {rbp=Oop [64]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*invokevirtual getAAMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@4 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x0000022773f9eee4: 187a 6cff | baf6 ffff | ff4c 8b54 | 2438 498b | ea44 8b54 | 2440 4489 | 5424 3044 | 8b5c 244c 
  0x0000022773f9ef04: 4489 5c24 | 3444 8b54 | 2444 4489 | 5424 3844 | 8b5c 2448 | 4489 5c24 | 3c4c 8b54 | 2450 4c89 
  0x0000022773f9ef24: 5424 4048 | 897c 2460 

  0x0000022773f9ef2c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9ef2c: 6666 90e8 

  0x0000022773f9ef30: ; ImmutableOopMap {rbp=Oop [64]=Oop [88]=Oop [96]=Oop }
                      ;*getfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getHeight@8 (line 382)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x0000022773f9ef30: cc79 6cff | baf6 ffff | ff44 8b54 | 2440 4489 | 5424 2444 | 8b5c 244c | 4489 5c24 | 2844 8b54 
  0x0000022773f9ef50: 2444 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 304c 8b54 | 2450 4c89 | 5424 384c | 8b54 2458 
  0x0000022773f9ef70: 4c89 5424 | 484c 8b54 | 2460 4c89 | 5424 5044 | 8b54 2468 | 4489 5424 | 6044 8b5c | 2474 4489 
  0x0000022773f9ef90: 5c24 6444 | 8b54 2470 | 4489 5424 | 684c 8b54 | 2478 4c89 

  0x0000022773f9efa4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9efa4: 5424 70e8 

  0x0000022773f9efa8: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [112]=Oop [152]=Oop [160]=Oop }
                      ;*invokevirtual getBackingStore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getBackingStore@4 (line 226)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@334 (line 311)
  0x0000022773f9efa8: 5479 6cff | baf6 ffff | ff44 8b54 | 2440 4489 | 5424 2444 | 8b5c 244c | 4489 5c24 | 2844 8b54 
  0x0000022773f9efc8: 2444 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 304c 8b54 | 2450 4c89 | 5424 384c | 8b54 2458 
  0x0000022773f9efe8: 4c89 5424 | 484c 8b54 | 2460 4c89 | 5424 5044 | 8b54 246c | 4489 5424 | 3444 8b5c | 2468 4489 
  0x0000022773f9f008: 5c24 6044 | 8b54 2474 | 4489 5424 | 6444 8b5c | 2470 4489 | 5c24 6848 | 894c 2470 | 895c 246c 
  0x0000022773f9f028: 4489 4424 

  0x0000022773f9f02c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f02c: 7866 90e8 

  0x0000022773f9f030: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [112]=Oop [152]=Oop [160]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@355 (line 314)
  0x0000022773f9f030: cc78 6cff | baf6 ffff | ff44 8b54 | 2440 4489 | 5424 2444 | 8b5c 244c | 4489 5c24 | 2844 8b54 
  0x0000022773f9f050: 2444 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 304c 8b54 | 2450 4c89 | 5424 384c | 8b54 2458 
  0x0000022773f9f070: 4c89 5424 | 484c 8b54 | 2460 4c89 | 5424 5044 | 8b54 246c | 4489 5424 | 3444 8b5c | 2468 4489 
  0x0000022773f9f090: 5c24 6044 | 8b54 2474 | 4489 5424 | 6444 8b5c | 2470 4489 | 5c24 6848 | 894c 2470 | 4889 7c24 
  0x0000022773f9f0b0: 7889 5c24 | 6c44 8984 | 2480 0000 

  0x0000022773f9f0bc: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f0bc: 0066 90e8 

  0x0000022773f9f0c0: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [112]=Oop [120]=Oop [152]=Oop [160]=Oop }
                      ;*invokevirtual getBytesPerPixelUnit {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@360 (line 314)
  0x0000022773f9f0c0: 3c78 6cff | baf6 ffff | ff44 8b54 | 2440 4489 | 5424 2444 | 8b5c 244c | 4489 5c24 | 2844 8b54 
  0x0000022773f9f0e0: 2444 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 304c 8b54 | 2450 4c89 | 5424 384c | 8b54 2458 
  0x0000022773f9f100: 4c89 5424 | 484c 8b54 | 2460 4c89 | 5424 5044 | 8b5c 246c | 4489 5c24 | 3444 8b54 | 2468 4489 
  0x0000022773f9f120: 5424 6044 | 8b5c 2474 | 4489 5c24 | 6444 8b54 | 2470 4489 | 5424 6848 | 894c 2470 | 4889 7c24 
  0x0000022773f9f140: 7844 8b94 | 2488 0000 | 0044 8994 | 2480 0000 | 0044 898c | 2484 0000 | 0044 8984 | 2488 0000 
  0x0000022773f9f160: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f160: 0066 90e8 

  0x0000022773f9f164: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [112]=Oop [120]=Oop [132]=NarrowOop [152]=Oop [160]=Oop }
                      ;*invokevirtual getSizeInBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PixelFormat::getBytesPerPixelUnit@8 (line 98)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@360 (line 314)
  0x0000022773f9f164: 9877 6cff | baf6 ffff | ff4c 8b54 | 2430 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b5c 
  0x0000022773f9f184: 244c 4489 | 5c24 3044 | 8b54 2444 | 4489 5424 | 3444 8b5c | 2448 4489 | 5c24 384c | 8b54 2450 
  0x0000022773f9f1a4: 4c89 5424 | 404c 8b94 | 24a0 0000 | 004c 8954 | 2448 4c8b | 5424 584c | 8954 2450 | 4c8b 5424 
  0x0000022773f9f1c4: 604c 8954 | 2458 448b | 5424 6c44 | 8954 243c | 448b 5c24 | 7444 895c | 246c 448b | 9424 8c00 
  0x0000022773f9f1e4: 0000 4489 | 5424 7444 | 8b9c 2490 | 0000 0044 | 899c 248c | 0000 0044 | 8b94 2494 | 0000 0044 
  0x0000022773f9f204: 8994 2490 | 0000 0089 | bc24 9400 | 0000 89b4 | 24a8 0000 | 0089 8424 | ac00 0000 

  0x0000022773f9f220: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f220: 6666 90e8 

  0x0000022773f9f224: ; ImmutableOopMap {[40]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [120]=Oop [128]=Oop [152]=Oop }
                      ;*invokevirtual getBytesPerPixelUnit {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.shape.MaskData::uploadToTexture@10 (line 65)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@481 (line 334)
  0x0000022773f9f224: d876 6cff | baf6 ffff | ff4c 8b54 | 2430 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b4c 
  0x0000022773f9f244: 244c 4489 | 4c24 3044 | 8b54 2444 | 4489 5424 | 3444 8b4c | 2448 4489 | 4c24 384c | 8b54 2450 
  0x0000022773f9f264: 4c89 5424 | 404c 8b94 | 24a0 0000 | 004c 8954 | 2448 4c8b | 5424 584c | 8954 2450 | 4c8b 5424 
  0x0000022773f9f284: 604c 8954 | 2458 448b | 5424 6c44 | 8954 243c | 448b 4c24 | 7444 894c | 246c 448b | 9424 8c00 
  0x0000022773f9f2a4: 0000 4489 | 5424 7444 | 8b8c 2490 | 0000 0044 | 898c 248c | 0000 0044 | 8b94 2494 | 0000 0044 
  0x0000022773f9f2c4: 8994 2490 | 0000 0089 | bc24 9400 | 0000 89b4 | 24a8 0000 | 0089 8424 | ac00 0000 | 4489 8424 
  0x0000022773f9f2e4: b000 0000 | 4489 9c24 | b400 0000 

  0x0000022773f9f2f0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f2f0: 6666 90e8 

  0x0000022773f9f2f4: ; ImmutableOopMap {[40]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [120]=Oop [128]=Oop [152]=Oop [176]=NarrowOop }
                      ;*invokevirtual getSizeInBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PixelFormat::getBytesPerPixelUnit@8 (line 98)
                      ; - com.sun.prism.impl.shape.MaskData::uploadToTexture@10 (line 65)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@481 (line 334)
  0x0000022773f9f2f4: 0876 6cff | baf6 ffff | ff48 8b6c | 2448 448b | 5424 4044 | 8954 2424 | 4489 5c24 | 2c89 5c24 
  0x0000022773f9f314: 304c 8944 | 2440 4c89 

  0x0000022773f9f31c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f31c: 4c24 48e8 

  0x0000022773f9f320: ; ImmutableOopMap {rbp=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x0000022773f9f320: dc75 6cff | baf6 ffff | ff4c 8b54 | 2438 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b5c 
  0x0000022773f9f340: 2444 4489 | 5c24 3444 | 8b54 2448 | 4489 5424 | 384c 8b54 | 2450 4c89 | 5424 4048 | 897c 2450 
  0x0000022773f9f360: 895c 243c | 4889 7c24 | 5889 5c24 

  0x0000022773f9f36c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f36c: 6066 90e8 

  0x0000022773f9f370: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [64]=Oop [80]=Oop [88]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@123 (line 356)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9f370: 8c75 6cff | ba45 ffff | ff48 8b6c | 2438 448b | 5c24 4044 | 895c 2424 | 448b 5c24 | 4444 895c 
  0x0000022773f9f390: 242c 448b | 5424 4844 | 8954 2430 | 4889 4424 

  0x0000022773f9f3a0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f3a0: 4866 90e8 

  0x0000022773f9f3a4: ; ImmutableOopMap {rbp=Oop [72]=Oop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@90 (line 258)
  0x0000022773f9f3a4: 5875 6cff | ba45 ffff | ff4c 8b5c | 2430 4c89 | 5c24 2844 | 8b5c 2440 | 4489 5c24 | 2444 8b44 
  0x0000022773f9f3c4: 244c 4489 | 4424 3044 | 8b5c 2444 | 4489 5c24 | 3444 8b44 | 2448 4489 | 4424 384c | 8b5c 2450 
  0x0000022773f9f3e4: 4c89 5c24 | 404c 8b5c | 2458 4c89 | 5c24 504c | 8b5c 2460 | 4c89 5c24 | 5844 8b44 | 246c 4489 
  0x0000022773f9f404: 4424 3c44 | 8b5c 2474 | 4489 5c24 | 6c89 5c24 | 7444 8b9c | 2490 0000 | 0044 899c | 248c 0000 
  0x0000022773f9f424: 0044 8b84 | 2494 0000 | 0044 8984 | 2490 0000 | 0044 8994 | 2494 0000 

  0x0000022773f9f43c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f43c: 0066 90e8 

  0x0000022773f9f440: ; ImmutableOopMap {[40]=Oop [64]=Oop [80]=Oop [88]=Oop [120]=Oop [128]=Oop [148]=NarrowOop [152]=Oop [160]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@382 (line 317)
  0x0000022773f9f440: bc74 6cff | baf4 ffff | ff48 8b6c | 2448 448b | 5c24 4044 | 895c 2424 | 8b74 2434 | 8974 2428 
  0x0000022773f9f460: 448b 5c24 | 4444 895c | 242c 4489 | 6c24 304c | 8954 2448 | c5fb 1154 | 2450 894c | 2434 897c 
  0x0000022773f9f480: 2458 4489 | 4c24 5c44 | 8944 2460 | 895c 2464 | c5fb 1154 

  0x0000022773f9f494: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f494: 2468 90e8 

  0x0000022773f9f498: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=NarrowOop [100]=NarrowOop [104]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1235)
                      ; - java.util.HashMap::getNode@63 (line 570)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9f498: 6474 6cff | baf6 ffff | ff48 8b6c | 2438 448b | 4c24 4044 | 894c 2424 | 8b4c 2444 | 894c 242c 
  0x0000022773f9f4b8: 448b 4c24 | 4844 894c | 2430 4c8b | 4c24 504c | 894c 2438 | 4889 7c24 | 4844 8944 | 2450 4889 
  0x0000022773f9f4d8: 7c24 58c5 | fa11 5424 | 6444 8954 

  0x0000022773f9f4e4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f4e4: 2468 90e8 

  0x0000022773f9f4e8: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=NarrowOop [88]=Oop }
                      ;*invokevirtual getAAMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@4 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@77 (line 352)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9f4e8: 1474 6cff | baf6 ffff | ff4c 8b54 | 2438 4c89 | 5424 2844 | 8b54 2440 | 4489 5424 | 2444 8b5c 
  0x0000022773f9f508: 2444 4489 | 5c24 3444 | 8b54 2448 | 4489 5424 | 384c 8b54 | 2450 4c89 | 5424 4048 | 897c 2450 
  0x0000022773f9f528: 4889 5c24 

  0x0000022773f9f52c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f52c: 5866 90e8 

  0x0000022773f9f530: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [64]=Oop [80]=Oop [88]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x0000022773f9f530: cc73 6cff | baf4 ffff | ff48 8b6c | 2448 8b5c | 2440 895c | 2424 8b5c | 2434 895c | 2428 448b 
  0x0000022773f9f550: 5c24 4444 | 895c 242c | 4489 6c24 | 304c 8954 | 2448 c5fb | 1154 2450 | 894c 2434 | 897c 2458 
  0x0000022773f9f570: 4889 7424 | 6044 894c | 245c 4489 | 4424 68c5 | fb11 5424 | 70c5 fa11 

  0x0000022773f9f588: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f588: 4c24 6ce8 

  0x0000022773f9f58c: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=NarrowOop [96]=Oop [108]=NarrowOop [112]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1235)
                      ; - java.util.HashMap::getNode@128 (line 577)
                      ; - java.util.HashMap::get@2 (line 556)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x0000022773f9f58c: 7073 6cff | 488b d0e9 | 0a01 0000 | 488b d0e9 | 0201 0000 | 488b d0e9 | fa00 0000 | 488b d0e9 
  0x0000022773f9f5ac: f200 0000 | 488b d0e9 | ea00 0000 | 448b 5008 

  0x0000022773f9f5bc: ;   {metadata('java/lang/IllegalArgumentException')}
  0x0000022773f9f5bc: 49bb 303a | 0604 2702 | 0000 49b8 | 0000 0004 | 2702 0000 | 4d03 c24d | 8b50 504d | 3bd3 0f85 
  0x0000022773f9f5dc: bf00 0000 | 488b e8ba | 3b00 0000 | 4c8b 5424 | 384c 8954 | 2430 448b | 5424 4044 | 8954 2438 
  0x0000022773f9f5fc: 448b 5c24 | 4c44 895c | 243c 448b | 5424 4444 | 8954 2440 | 448b 5424 | 4844 8954 | 2444 4c8b 
  0x0000022773f9f61c: 5424 504c | 8954 2448 | 4c8b 5424 | 604c 8954 

  0x0000022773f9f62c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773f9f62c: 2450 90e8 

  0x0000022773f9f630: ; ImmutableOopMap {rbp=Oop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [112]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.ByteBuffer::wrap@13 (line 410)
                      ; - java.nio.ByteBuffer::wrap@4 (line 437)
                      ; - com.sun.prism.impl.shape.MaskData::create@12 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x0000022773f9f630: cc72 6cff | eb69 eb00 | 488b d0eb | 6544 8b50 

  0x0000022773f9f640: ;   {metadata('java/lang/Exception')}
  0x0000022773f9f640: 0849 bbc0 | 1a02 0427 | 0200 0049 | b800 0000 | 0427 0200 | 004d 03c2 | 4d8b 5040 | 4d3b d375 
  0x0000022773f9f660: 0733 c0e9 | 4de9 ffff | 488b d0eb | 3548 8bd0 | eb30 488b | d0eb 2b48 | 8bd0 eb26 | 488b d0eb 
  0x0000022773f9f680: 2148 8bd0 | eb1c 488b | d0eb 1748 | 8bd0 eb12 | 488b d0eb | 0d48 8bd0 | eb08 488b | d0eb 0348 
  0x0000022773f9f6a0: 8bd0 4881 | c4d0 0000 

  0x0000022773f9f6a8: ;   {runtime_call _rethrow_Java}
  0x0000022773f9f6a8: 005d e9d1 

  0x0000022773f9f6ac: ;   {internal_word}
  0x0000022773f9f6ac: 2b78 ff49 | babd dff9 | 7327 0200 | 004d 8997 | 6803 0000 

  0x0000022773f9f6c0: ;   {runtime_call SafepointBlob}
  0x0000022773f9f6c0: e93b 836c | fff4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000022773f9f6e0: ;   {no_reloc}
  0x0000022773f9f6e0: 48bb 0000 | 0000 0000 

  0x0000022773f9f6e8: ;   {runtime_call}
  0x0000022773f9f6e8: 0000 e9fb 

  0x0000022773f9f6ec: ;   {static_stub}
  0x0000022773f9f6ec: ffff ff48 | bb18 248a | 4527 0200 

  0x0000022773f9f6f8: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f6f8: 00e9 5f6c 

  0x0000022773f9f6fc: ;   {static_stub}
  0x0000022773f9f6fc: 6cff 48bb | 78a4 1146 | 2702 0000 

  0x0000022773f9f708: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f708: e94c 666c 

  0x0000022773f9f70c: ;   {static_stub}
  0x0000022773f9f70c: ff48 bb18 | a511 4627 

  0x0000022773f9f714: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f714: 0200 00e9 | 3d66 6cff 

  0x0000022773f9f71c: ;   {static_stub}
  0x0000022773f9f71c: 48bb 0000 | 0000 0000 

  0x0000022773f9f724: ;   {runtime_call}
  0x0000022773f9f724: 0000 e9fb 

  0x0000022773f9f728: ;   {static_stub}
  0x0000022773f9f728: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773f9f734: ;   {runtime_call}
  0x0000022773f9f734: 00e9 fbff 

  0x0000022773f9f738: ;   {static_stub}
  0x0000022773f9f738: ffff 48bb | 5861 1946 | 2702 0000 

  0x0000022773f9f744: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f744: e9a1 546a 

  0x0000022773f9f748: ;   {static_stub}
  0x0000022773f9f748: ff48 bbd0 | a111 4627 

  0x0000022773f9f750: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f750: 0200 00e9 | 0166 6cff 

  0x0000022773f9f758: ;   {static_stub}
  0x0000022773f9f758: 48bb 68a2 | 1146 2702 

  0x0000022773f9f760: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f760: 0000 e9f2 

  0x0000022773f9f764: ;   {static_stub}
  0x0000022773f9f764: 656c ff48 | bbe0 0919 | 4627 0200 

  0x0000022773f9f770: ;   {runtime_call I2C/C2I adapters}
  0x0000022773f9f770: 00e9 e76e 

  0x0000022773f9f774: ;   {static_stub}
  0x0000022773f9f774: 6cff 48bb | 0000 0000 | 0000 0000 

  0x0000022773f9f780: ;   {runtime_call}
  0x0000022773f9f780: e9fb ffff 

  0x0000022773f9f784: ;   {static_stub}
  0x0000022773f9f784: ff48 bb00 | 0000 0000 

  0x0000022773f9f78c: ;   {runtime_call}
  0x0000022773f9f78c: 0000 00e9 | fbff ffff 

  0x0000022773f9f794: ;   {static_stub}
  0x0000022773f9f794: 48bb 0000 | 0000 0000 

  0x0000022773f9f79c: ;   {runtime_call}
  0x0000022773f9f79c: 0000 e9fb 

  0x0000022773f9f7a0: ;   {static_stub}
  0x0000022773f9f7a0: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773f9f7ac: ;   {runtime_call}
  0x0000022773f9f7ac: 00e9 fbff 

  0x0000022773f9f7b0: ;   {runtime_call ExceptionBlob}
  0x0000022773f9f7b0: ffff e9c9 | 836e ffe8 | 0000 0000 | 4883 2c24 

  0x0000022773f9f7c0: ;   {runtime_call DeoptimizationBlob}
  0x0000022773f9f7c0: 05e9 da74 | 6cff f4f4 
[/MachCode]


Compiled method (c2)  442955 5369       4       com.sun.prism.impl.GlyphCache::render (326 bytes)
 total in heap  [0x0000022773fcf890,0x0000022773fd6708] = 28280
 relocation     [0x0000022773fcf9e8,0x0000022773fcfbe8] = 512
 constants      [0x0000022773fcfc00,0x0000022773fcfc20] = 32
 main code      [0x0000022773fcfc20,0x0000022773fd4480] = 18528
 stub code      [0x0000022773fd4480,0x0000022773fd4588] = 264
 oops           [0x0000022773fd4588,0x0000022773fd45a0] = 24
 metadata       [0x0000022773fd45a0,0x0000022773fd4730] = 400
 scopes data    [0x0000022773fd4730,0x0000022773fd6038] = 6408
 scopes pcs     [0x0000022773fd6038,0x0000022773fd6418] = 992
 dependencies   [0x0000022773fd6418,0x0000022773fd64a0] = 136
 handler table  [0x0000022773fd64a0,0x0000022773fd6620] = 384
 nul chk table  [0x0000022773fd6620,0x0000022773fd6708] = 232


[Constant Pool]
             Address          hex4                    hex8      
  0x0000022773fcfc00:   0x3f28f5c3      0x3ea8f5c33f28f5c3      
  0x0000022773fcfc04:   0x3ea8f5c3                              
  0x0000022773fcfc08:   0x3f800000      0x000000003f800000      
  0x0000022773fcfc0c:   0x00000000                              
  0x0000022773fcfc10:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x0000022773fcfc14:   0xf4f4f4f4                              
  0x0000022773fcfc18:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x0000022773fcfc1c:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000002274618e500} 'render' '(Lcom/sun/prism/impl/BaseContext;Lcom/sun/javafx/scene/text/GlyphList;FFIILcom/sun/prism/paint/Color;Lcom/sun/prism/paint/Color;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)V' in 'com/sun/prism/impl/GlyphCache'
  # this:     rdx:rdx   = 'com/sun/prism/impl/GlyphCache'
  # parm0:    r8:r8     = 'com/sun/prism/impl/BaseContext'
  # parm1:    r9:r9     = 'com/sun/javafx/scene/text/GlyphList'
  # parm2:    xmm0      = float
  # parm3:    xmm1      = float
  # parm4:    rdi       = int
  # parm5:    rsi       = int
  # parm6:    rcx:rcx   = 'com/sun/prism/paint/Color'
  # parm7:    [sp+0x100]   = 'com/sun/prism/paint/Color'  (sp of caller)
  # parm8:    [sp+0x108]   = 'com/sun/javafx/geom/transform/BaseTransform'
  # parm9:    [sp+0x110]   = 'com/sun/javafx/geom/BaseBounds'
  0x0000022773fcfc20: ;   {no_reloc}
  0x0000022773fcfc20: 448b 5208 | 49bb 0000 | 0004 2702 | 0000 4d03 | d349 3bc2 

  0x0000022773fcfc34: ;   {runtime_call ic_miss_stub}
  0x0000022773fcfc34: 0f85 4614 | 69ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000022773fcfc40: 8984 2400 | 90ff ff55 | 4881 ecf0 | 0000 0089 | 7424 5889 | 7c24 54c5 | fa11 4424 | 504d 8bd1 
  0x0000022773fcfc60: 4c89 4424 | 4848 8954 | 2460 0fb6 | 6a0c 85ed | 0f85 e233 | 0000 448b | 5a1c 458b | 4b28 458b 
  0x0000022773fcfc80: 402c 498b | da45 8b5a 

  0x0000022773fcfc88: ;   {metadata('com/sun/javafx/text/TextRun')}
  0x0000022773fcfc88: 0841 81fb | c815 2d01 | 0f85 8430 | 0000 448b | 5b0c 4585 | db0f 8e1f | 0600 0048 | 8b84 2408 
  0x0000022773fcfca8: 0100 0044 | 8b50 084c | 8bf1 4885 | c90f 85f6 | 3100 0049 | 8bd0 498b | f1c5 f828 

  0x0000022773fcfcc4: ;   {section_word}
  0x0000022773fcfcc4: d9c5 f258 | 153f ffff 

  0x0000022773fcfccc: ;   {section_word}
  0x0000022773fcfccc: ffc5 fa10 | 2533 ffff 

  0x0000022773fcfcd4: ;   {metadata('com/sun/javafx/geom/transform/Identity')}
  0x0000022773fcfcd4: ff41 81fa | 50a0 0301 

  0x0000022773fcfcdc: ;   {metadata('com/sun/javafx/geom/transform/Affine3D')}
  0x0000022773fcfcdc: 745f 4181 | fa20 9503 | 010f 85e0 | 3300 0048 | 8b8c 2408 | 0100 00c5 | c25a fa48 | 8bbc 2410 
  0x0000022773fcfcfc: 0100 0048 | 85ff 7510 | c5f8 57c0 | c5d0 57ed | 4533 d2e9 | 3510 0000 | 448b 5708 

  0x0000022773fcfd18: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x0000022773fcfd18: 4181 fae8 | af03 010f | 8594 3100 | 004c 8bac | 2410 0100 | 00c5 f857 | c0c5 d057 | ed45 33d2 
  0x0000022773fcfd38: e96e 0b00 | 0048 8974 | 2420 4889 | 9424 0801 | 0000 4489 | 5c24 7c48 | 895c 2440 | 4489 4424 
  0x0000022773fcfd58: 7844 894c | 245c 4889 | 4424 7048 | 894c 2468 | c57a 2cd2 | 4181 fa00 | 0000 8075 | 1048 83ec 
  0x0000022773fcfd78: 08c5 fa11 

  0x0000022773fcfd7c: ;   {runtime_call StubRoutines (1)}
  0x0000022773fcfd7c: 1424 e870 | 1364 ff41 | 5a44 8954 | 2428 c4c1 | 797e d341 | 81e3 ffff | 7f00 c4c1 | 797e d241 
  0x0000022773fcfd9c: c1ea 1741 | 81cb 0000 | 8000 450f | b6d2 41b9 | 9500 0000 | 452b ca44 | 894c 2430 | 4489 5c24 
  0x0000022773fcfdbc: 2c41 f7db | 4489 5c24 | 3445 8bd1 | 4183 e2e0 | 4489 5424 | 3c4c 8b94 | 2410 0100 | 004d 85d2 
  0x0000022773fcfddc: 7515 c5f8 | 57c0 c5d0 | 57ed 4533 | db44 895c | 2438 e9f9 | 0500 0045 

  0x0000022773fcfdf4: ;   {metadata('com/sun/javafx/geom/RectBounds')}
  0x0000022773fcfdf4: 8b5a 0841 | 81fb e8af | 0301 0f85 | b032 0000 | 4c89 9424 | 8000 0000 | c5f8 57c0 | c5d0 57ed 
  0x0000022773fcfe14: 4533 d244 | 8954 2438 | e953 0200 | 000f 1f84 | 0000 0000 | 000f 1f80 | 0000 0000 | 4533 db44 
  0x0000022773fcfe34: 8b44 243c | 4585 c00f | 85d8 1e00 | 00c4 c179 | 7ed2 4585 | d20f 8c85 | 0d00 0044 | 8b54 242c 
  0x0000022773fcfe54: 8b4c 2430 | 41d3 fa41 | ffc2 41d1 | fac4 c179 | 6ec2 c5f8 | 5bc0 c5fa | 1184 24a8 | 0000 00c5 
  0x0000022773fcfe74: fa11 ac24 | a400 0000 | 4489 9c24 | a000 0000 | c5fa 11a4 | 249c 0000 | 00c5 fa11 | 9424 9800 
  0x0000022773fcfe94: 0000 c5fa | 119c 2494 | 0000 0048 | 8b54 2460 | 448b 8424 | 9000 0000 

  0x0000022773fcfeac: ;   {optimized virtual_call}
  0x0000022773fcfeac: 458b cbe8 

  0x0000022773fcfeb0: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop }
                      ;*invokevirtual getCachedGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::render@157 (line 149)
  0x0000022773fcfeb0: 0cd8 fcff | 4889 8424 | b000 0000 | 4885 c00f | 8413 2700 | 004c 8b54 | 2440 458b | 420c 448b 
  0x0000022773fcfed0: 5c24 3845 | 3bd8 0f8f | 4428 0000 | bd00 1000 | 0041 236a | 2c85 ed0f | 84db 2800 | 0045 8b52 
  0x0000022773fcfef0: 444c 8b5c | 2440 418b | 4b10 c4c1 | 7a10 4334 | 418b 7b38 | 448b 4c24 | 3844 03c9 | 4863 c948 
  0x0000022773fcff10: 038c 2488 | 0000 003b | 7c24 3874 | 3dff c73b | 7c24 380f | 85cc 0c00 | 0045 8bd9 | 41ff cb41 
  0x0000022773fcff30: 8b5a 0c44 | 3bdb 0f83 | a82b 0000 | c4c1 7a58 | 448a 0c4c | 8b5c 2440 | c4c1 7a11 | 4334 8b5c 
  0x0000022773fcff50: 2438 4189 | 5b38 8b7c | 2438 c5fa | 5854 2450 | 4c8b 9c24 | 8000 0000 | c4c1 7a10 | 4b10 c5f8 
  0x0000022773fcff70: 2ed1 0f87 | 4a03 0000 | 448b 5c24 | 3841 ffc3 | 4489 9c24 | 8800 0000 | 4585 db0f | 8cfa 2200 
  0x0000022773fcff90: 0045 3bd8 | 0f8f be28 | 0000 413b | fb74 3cff | c741 3bfb | 0f85 620c | 0000 458b | 5a0c 453b 
  0x0000022773fcffb0: cb0f 83d5 | 2b00 00c4 | c17a 5844 | 8a10 4c8b | 5424 40c4 | c17a 1142 | 3444 8b84 | 2488 0000 
  0x0000022773fcffd0: 0045 8942 | 38c5 fa58 | 5424 504c | 8b94 2480 | 0000 00c4 | c17a 104a | 0cc5 f82e | ca0f 8719 
  0x0000022773fcfff0: 2900 0048 | 8b54 2460 | 4c8b c04c | 8b8c 2408 | 0100 0048 | 8b7c 2420 | c5fa 1084 | 24a4 0000 
  0x0000022773fd0010: 00c5 fa10 | 8c24 a800 | 0000 c5fa | 1094 249c | 0000 00c5 

  0x0000022773fd0024: ;   {optimized virtual_call}
  0x0000022773fd0024: f828 dae8 

  0x0000022773fd0028: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [176]=Oop }
                      ;*invokevirtual addDataToQuad {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@316 (line 173)
  0x0000022773fd0028: 348b fcff | 448b 9424 | 8800 0000 | 443b 5424 | 7c0f 8d83 | 0200 00c5 | fa10 ac24 | a800 0000 
  0x0000022773fd0048: c5fa 1084 | 24a4 0000 | 0045 8bda | 4489 5c24 | 38c5 fa10 | 9c24 9400 | 0000 c5fa | 1094 2498 
  0x0000022773fd0068: 0000 00c5 | fa10 a424 | 9c00 0000 | 4c8b 5424 | 4041 8b4a | 0c44 8b54 | 2438 443b | d10f 8dad 
  0x0000022773fd0088: 2200 00bd | 0010 0000 | 4c8b 5424 | 4041 236a | 2c85 ed0f | 845b 2300 | 0045 8b52 | 404c 8b5c 
  0x0000022773fd00a8: 2440 458b | 4310 8b5c | 2438 4103 | d845 8b5a | 0c41 3bdb | 0f83 c81d | 0000 4c63 | 5c24 384c 
  0x0000022773fd00c8: 899c 2488 | 0000 004d | 63d8 4c03 | 9c24 8800 | 0000 478b | 449a 1044 | 8984 2490 | 0000 0041 
  0x0000022773fd00e8: 8be8 81e5 | ffff ff00 | 81fd ffff | 0000 0f84 | ac23 0000 | 448b 5424 | 3844 3bd1 | 0f8f 4a24 
  0x0000022773fd0108: 0000 4c8b | 5424 4045 | 8b52 384c | 8b44 2440 | c4c1 7a10 | 4834 443b | 5424 3874 | 3c41 ffc2 
  0x0000022773fd0128: 443b 5424 | 380f 85ab | 0a00 0045 | 8b40 44ff | cb45 8b50 | 0c41 3bda | 0f83 0229 | 0000 c481 
  0x0000022773fd0148: 7258 4c98 | 0c4c 8b54 | 2440 448b | 5c24 3845 | 895a 38c4 | c17a 114a | 34c5 f258 | 4424 504c 
  0x0000022773fd0168: 8b54 2460 | 458b 4214 

  0x0000022773fd0170: ; implicit exception: dispatches to 0x0000022773fd3e70
  0x0000022773fd0170: 458b 5808 

  0x0000022773fd0174: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x0000022773fd0174: 4d8b d041 | 81fb b8eb | 1201 0f85 | a81d 0000 | 4c89 9424 | 9800 0000 | 458b 521c | 4585 d20f 
  0x0000022773fd0194: 84df 0f00 | 0045 8b5a | 0849 8bda 

  0x0000022773fd01a0: ;   {metadata('com/sun/javafx/font/directwrite/DWFontStrike')}
  0x0000022773fd01a0: 4181 fb60 | 7312 010f | 858b 1e00 | 004c 8bc3 | 8b6b 10c5 | 7a2c d841 | 81fb 0000 | 0080 7510 
  0x0000022773fd01c0: 4883 ec08 | c5fa 1104 

  0x0000022773fd01c8: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd01c8: 24e8 250f | 64ff 415b | 443b 6334 | 0f84 a500 | 0000 85ed | 0f85 262d | 0000 c4c1 | 797e c245 
  0x0000022773fd01e8: 8bc2 41c1 | e817 450f | b6c0 b995 | 0000 0041 | 2bc8 f7c1 | e0ff ffff | 7523 458b | da41 81e3 
  0x0000022773fd0208: ffff 7f00 | 4181 cb00 | 0080 0045 | 85d2 0f8c | 4f0e 0000 | 41d3 fb41 | ffc3 41d1 | fbc4 c179 
  0x0000022773fd0228: 6ecb c5f8 | 5bc9 448b | 5424 3c45 | 85d2 0f85 | f11a 0000 | c4c1 797e | d345 85db | 0f8c 170e 
  0x0000022773fd0248: 0000 448b | 5424 2c8b | 4c24 3041 | d3fa 41ff | c241 d1fa | c4c1 796e | c2c5 f85b | c0c5 fa11 
  0x0000022773fd0268: 8424 a800 | 0000 c5fa | 118c 24a4 | 0000 0045 | 33db e9fd | fbff ff85 | ed0f 85d1 | 2a00 00c4 
  0x0000022773fd0288: c179 6eeb | c5f8 5bed | c5fa 5cc5 

  0x0000022773fd0294: ;   {section_word}
  0x0000022773fd0294: c5f8 2e05 | 64f9 ffff | 720b 41bb | 0200 0000 | e98a fbff 

  0x0000022773fd02a8: ;   {section_word}
  0x0000022773fd02a8: ffc5 f82e | 0553 f9ff | ff0f 8279 | fbff ff41 | bb01 0000 | 00e9 71fb | ffff 4881 | c4f0 0000 
  0x0000022773fd02c8: ;   {poll_return}
  0x0000022773fd02c8: 005d 493b | a750 0300 | 000f 8779 | 4100 00c3 | 0f1f 8400 | 0000 0000 | 4533 db44 | 8b54 243c 
  0x0000022773fd02e8: 4585 d20f | 8532 1a00 | 00c4 c179 | 7ed0 4585 | c00f 8c41 | 0d00 0044 | 8b54 242c | 8b4c 2430 
  0x0000022773fd0308: 41d3 fa41 | ffc2 41d1 | fac4 c179 | 6ec2 c5f8 | 5bc0 c5fa | 1184 2490 | 0000 00c5 | fa11 8c24 
  0x0000022773fd0328: 8c00 0000 | 4489 9c24 | 8800 0000 | c5fa 11a4 | 2484 0000 | 00c5 f97e | d5c5 fa11 | 9c24 9400 
  0x0000022773fd0348: 0000 488b | 5424 6044 | 8b84 2480 | 0000 0045 

  0x0000022773fd0358: ;   {optimized virtual_call}
  0x0000022773fd0358: 8bcb 90e8 

  0x0000022773fd035c: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokevirtual getCachedGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::render@157 (line 149)
  0x0000022773fd035c: 2010 69ff | 4885 c00f | 84ae 2200 | 0048 8b54 | 2460 4c8b | c04c 8b8c | 2408 0100 | 0048 8b7c 
  0x0000022773fd037c: 2420 c5fa | 1084 248c | 0000 00c5 | fa10 8c24 | 9000 0000 | c5fa 1094 | 2484 0000 | 00c5 f828 
  0x0000022773fd039c: da48 8984 | 2498 0000 

  0x0000022773fd03a4: ;   {optimized virtual_call}
  0x0000022773fd03a4: 0066 90e8 

  0x0000022773fd03a8: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [152]=Oop }
                      ;*invokevirtual addDataToQuad {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@316 (line 173)
  0x0000022773fd03a8: d40f 69ff | 448b 5c24 | 3841 ffc3 | 4489 5c24 | 3844 3b5c | 247c 0f8d | fefe ffff | c5fa 10ac 
  0x0000022773fd03c8: 2490 0000 | 00c5 fa10 | 8424 8c00 | 0000 c5fa | 109c 2494 | 0000 00c5 | f96e d5c5 | fa10 a424 
  0x0000022773fd03e8: 8400 0000 | 4c8b 5424 | 4041 8b4a | 0c44 8b5c | 2438 443b | d90f 8d35 | 1f00 00bd | 0010 0000 
  0x0000022773fd0408: 4123 6a2c | 85ed 0f84 | e81f 0000 | 458b 5210 | 4c8b 5c24 | 4045 8b43 | 408b 5c24 | 3841 03da 
  0x0000022773fd0428: ; implicit exception: dispatches to 0x0000022773fd3de9
  0x0000022773fd0428: 458b 480c | 413b d90f | 835a 1a00 | 004c 634c | 2438 4d63 | d24d 03ca | 478b 5488 | 1044 8994 
  0x0000022773fd0448: 2480 0000 | 0041 8bea | 81e5 ffff | ff00 81fd | ffff 0000 | 0f84 5020 | 0000 448b | 5424 3844 
  0x0000022773fd0468: 3bd1 0f8f | e920 0000 | c4c1 7a10 | 4b34 458b | 5b38 443b | 5c24 3874 | 4141 ffc3 | 443b 5c24 
  0x0000022773fd0488: 380f 85bb | 0b00 004c | 8b54 2440 | 458b 5a44 | ffcb 458b | 430c 413b | d80f 83aa | 2500 00c4 
  0x0000022773fd04a8: 8172 584c | 8b0c 4c8b | 5424 4044 | 8b5c 2438 | 4589 5a38 | c4c1 7a11 | 4a34 c5f2 | 586c 2450 
  0x0000022773fd04c8: 4c8b 5424 | 6045 8b5a | 1445 8b43 | 084d 8bd3 

  0x0000022773fd04d8: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x0000022773fd04d8: 4181 f8b8 | eb12 010f | 8559 1a00 | 004c 8994 | 2498 0000 | 0045 8b5a | 1c45 85db | 0f84 580f 
  0x0000022773fd04f8: 0000 458b | 5308 498b 

  0x0000022773fd0500: ;   {metadata('com/sun/javafx/font/directwrite/DWFontStrike')}
  0x0000022773fd0500: db41 81fa | 6073 1201 | 0f85 3c1b | 0000 4c8b | c38b 6b10 | c57a 2cdd | 4181 fb00 | 0000 8075 
  0x0000022773fd0520: 1048 83ec | 08c5 fa11 

  0x0000022773fd0528: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd0528: 2c24 e8c4 | 0b64 ff41 | 5b44 3b63 | 340f 84a5 | 0000 0085 | ed0f 85e0 | 2900 00c4 | c179 7eea 
  0x0000022773fd0548: 458b c241 | c1e8 1745 | 0fb6 c0b9 | 9500 0000 | 412b c8f7 | c1e0 ffff | ff75 2345 | 8bda 4181 
  0x0000022773fd0568: e3ff ff7f | 0041 81cb | 0000 8000 | 4585 d20f | 8c48 0b00 | 0041 d3fb | 41ff c341 | d1fb c4c1 
  0x0000022773fd0588: 796e cbc5 | f85b c944 | 8b54 243c | 4585 d20f | 85a1 1700 | 00c4 c179 | 7ed3 4585 | db0f 8c10 
  0x0000022773fd05a8: 0b00 0044 | 8b54 242c | 8b4c 2430 | 41d3 fa41 | ffc2 41d1 | fac4 c179 | 6ec2 c5f8 | 5bc0 c5fa 
  0x0000022773fd05c8: 1184 2490 | 0000 00c5 | fa11 8c24 | 8c00 0000 | 4533 dbe9 | 4cfd ffff | 85ed 0f85 | 8b27 0000 
  0x0000022773fd05e8: c4c1 796e | cbc5 f85b | c9c5 d25c 

  0x0000022773fd05f4: ;   {section_word}
  0x0000022773fd05f4: c1c5 f82e | 0503 f6ff | ff72 0b41 | bb02 0000 | 00e9 d9fc 

  0x0000022773fd0608: ;   {section_word}
  0x0000022773fd0608: ffff c5f8 | 2e05 f2f5 | ffff 0f82 | c8fc ffff | 41bb 0100 | 0000 e9c0 | fcff ff0f | 1f80 0000 
  0x0000022773fd0628: 0000 660f | 1f44 0000 | 4533 c085 | db0f 85fc | 1600 0085 | d20f 8c30 | 0a00 0041 | 8bca d3ff 
  0x0000022773fd0648: ffc7 d1ff | c5f9 6eef | c5f8 5bed | c5fa 11ac | 24a8 0000 | 00c5 fa11 | 8c24 a400 | 0000 4489 
  0x0000022773fd0668: 8424 a000 | 0000 c5fb | 11bc 2498 | 0000 00c5 | fa11 a424 | 9000 0000 | c5fa 1194 | 248c 0000 
  0x0000022773fd0688: 00c5 fa11 | 9c24 9400 | 0000 488b | 5424 6044 | 8b44 243c | 448b 8c24 | a000 0000 

  0x0000022773fd06a4: ;   {optimized virtual_call}
  0x0000022773fd06a4: 6666 90e8 

  0x0000022773fd06a8: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop }
                      ;*invokevirtual getCachedGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::render@157 (line 149)
  0x0000022773fd06a8: d40c 69ff | 4885 c00f | 84a1 1f00 | 004c 8b4c | 2440 458b | 510c 448b | 5c24 3845 | 3bda 0f8f 
  0x0000022773fd06c8: a020 0000 | 4889 8424 | b000 0000 | 458b c2bd | 0010 0000 | 4123 692c | 85ed 0f84 | 2521 0000 
  0x0000022773fd06e8: 458b 5144 | 418b 4910 | c4c1 7a10 | 4134 418b | 5138 448b | 4c24 3844 | 03c9 4863 | f948 037c 
  0x0000022773fd0708: 2430 3b54 | 2438 743d | ffc2 3b54 | 2438 0f85 | 7609 0000 | 458b d941 | ffcb 418b | 5a0c 443b 
  0x0000022773fd0728: db0f 83fd | 2300 00c4 | c17a 5844 | ba0c 4c8b | 5c24 40c4 | c17a 1143 | 348b 4c24 | 3841 894b 
  0x0000022773fd0748: 388b 5424 | 38c5 fa58 | 5424 504c | 8b5c 2428 | c4c1 7a10 | 5b10 c5f8 | 2ed3 0f87 | 5afb ffff 
  0x0000022773fd0768: 8b4c 2438 | ffc1 898c | 2488 0000 | 0085 c90f | 8c53 1b00 | 0041 3bc8 | 0f8f 1721 | 0000 3bd1 
  0x0000022773fd0788: 7438 ffc2 | 3bd1 0f85 | 1309 0000 

  0x0000022773fd0794: ; implicit exception: dispatches to 0x0000022773fd40d7
  0x0000022773fd0794: 458b 420c | 453b c80f | 8339 2400 | 00c4 c17a | 584c ba10 | 448b d94c | 8b54 2440 | c4c1 7a11 
  0x0000022773fd07b4: 4a34 4589 | 5a38 c5f2 | 5854 2450 | eb08 4c8b | 5424 4044 | 8bd9 4c8b | 4424 28c4 | c17a 1048 
  0x0000022773fd07d4: 0cc5 f82e | ca0f 8777 | 2100 004c | 8944 2430 | 418b eb4c | 8954 2428 | 488b 5424 | 604c 8bc0 
  0x0000022773fd07f4: 4c8b 8c24 | 0801 0000 | 488b 7c24 | 20c5 fa10 | 8424 a400 | 0000 c5fa | 108c 24a8 | 0000 00c5 
  0x0000022773fd0814: fa10 9424 | 9000 0000 | c5f8 28da 

  0x0000022773fd0820: ;   {optimized virtual_call}
  0x0000022773fd0820: 6666 90e8 

  0x0000022773fd0824: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [48]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [176]=Oop }
                      ;*invokevirtual addDataToQuad {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@316 (line 173)
  0x0000022773fd0824: 580b 69ff | 3b6c 247c | 0f8d 90fa | ffff c5fa | 10ac 24a8 | 0000 00c5 | fa10 8424 | a400 0000 
  0x0000022773fd0844: c5fa 109c | 2494 0000 | 004c 8b74 | 2468 488b | 4424 7048 | 8bbc 2410 | 0100 0044 | 8b4c 245c 
  0x0000022773fd0864: 448b 4424 | 7848 8b5c | 2428 448b | 5c24 7c48 | 8b94 2408 | 0100 0048 | 8b74 2420 | c5fa 1094 
  0x0000022773fd0884: 248c 0000 | 00c5 fa10 | a424 9000 | 0000 448b | d548 8b8c | 2480 0000 | 00c5 fb10 | bc24 9800 
  0x0000022773fd08a4: 0000 4c8b | 6c24 308b | 6b0c 89ac | 2480 0000 | 0044 3bd5 | 0f8d ac1a | 0000 bd00 | 1000 0023 
  0x0000022773fd08c4: 6b2c 85ed | 0f84 5f1b | 0000 4c89 | 6c24 2844 | 8954 2438 | 4889 7424 | 2048 8994 | 2408 0100 
  0x0000022773fd08e4: 0044 895c | 247c 4489 | 4424 7844 | 894c 245c | 4889 bc24 | 1001 0000 | 4889 4424 | 704c 8974 
  0x0000022773fd0904: 2468 448b | 5b40 4889 | 5c24 4044 | 8b53 108b | 5c24 3841 | 03da 458b | 4b0c 413b | d90f 836f 
  0x0000022773fd0924: 1500 004c | 6344 2438 | 4c89 4424 | 304d 63c2 | 4c03 4424 | 3047 8b5c | 8310 4489 | 5c24 3c41 
  0x0000022773fd0944: 8beb 81e5 | ffff ff00 | 81fd ffff | 0000 0f84 | 691b 0000 | 448b 5c24 | 3844 3b9c | 2480 0000 
  0x0000022773fd0964: 000f 8f01 | 1c00 004c | 8b54 2440 | 458b 5238 | 4c8b 5c24 | 40c4 c17a | 1073 3444 | 3b54 2438 
  0x0000022773fd0984: 7445 41ff | c244 3b54 | 2438 0f85 | e706 0000 | 458b 5344 | 448b db41 | ffcb 418b | db45 8b5a 
  0x0000022773fd09a4: 0c41 3bdb | 0f83 bd20 | 0000 c481 | 4a58 7482 | 0c44 8b4c | 2438 4c8b | 5424 4045 | 894a 38c4 
  0x0000022773fd09c4: c17a 1172 | 34eb 084d | 8bd3 448b | 4c24 38bd | 0700 0000 | 2369 0cc5 | c359 4128 | c5ca 586c 
  0x0000022773fd09e4: 2450 c5f2 | 5acd c5f3 | 5971 1083 | fd03 0f85 | 0e07 0000 | c5cb 5849 | 30c5 fb58 | 4138 c5d3 
  0x0000022773fd0a04: 5ae9 c5fb | 5ac0 c5fa | 1184 24d4 | 0000 00c5 | fa11 ac24 | d000 0000 | 4c89 5424 | 4044 894c 
  0x0000022773fd0a24: 2438 4889 | 8c24 8000 | 0000 4c8b | 5424 6045 | 8b42 1445 | 8b58 084d 

  0x0000022773fd0a3c: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x0000022773fd0a3c: 8bd0 4181 | fbb8 eb12 | 010f 8524 | 1500 004c | 8994 2498 | 0000 0045 | 8b52 1c45 | 85d2 0f84 
  0x0000022773fd0a5c: c10c 0000 | 458b 4208 

  0x0000022773fd0a64: ;   {metadata('com/sun/javafx/font/directwrite/DWFontStrike')}
  0x0000022773fd0a64: 4181 f860 | 7312 010f | 8510 1600 | 004d 8bc2 | 418b 6a10 | 8b94 24d4 | 0000 00c5 | fa10 ac24 
  0x0000022773fd0a84: d000 0000 | c57a 2ccd | 4181 f900 | 0000 8075 | 1048 83ec | 08c5 fa11 

  0x0000022773fd0a9c: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd0a9c: 2c24 e850 | 0664 ff41 | 5944 8bda | 41c1 eb17 | 8bfa 81e7 | ffff 7f00 | 450f b6db | 41ba 9500 
  0x0000022773fd0abc: 0000 452b | d381 cf00 | 0080 0041 | 8bda 83e3 | e044 8bdf | 41f7 dbc5 | fa10 8424 | d400 0000 
  0x0000022773fd0adc: c5fa 2cc0 | 81f8 0000 | 0080 750f | 4883 ec08 | c5fa 1104 

  0x0000022773fd0af0: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd0af0: 24e8 fd05 | 64ff 5845 | 3b60 340f | 8490 0000 | 0085 ed0f | 8540 2400 | 0044 8b84 | 24d0 0000 
  0x0000022773fd0b10: 0041 8be8 | c1ed 1740 | 0fb6 edb9 | 9500 0000 | 2bcd f7c1 | e0ff ffff | 7523 458b | c841 81e1 
  0x0000022773fd0b30: ffff 7f00 | 4181 c900 | 0080 0045 | 85c0 0f8c | a305 0000 | 41d3 f941 | ffc1 41d1 | f9c4 c179 
  0x0000022773fd0b50: 6ec1 c5f8 | 5bc0 85db | 0f85 f111 | 0000 85d2 | 0f8c 8905 | 0000 418b | cad3 ffff | c7d1 ffc5 
  0x0000022773fd0b70: f96e cfc5 | f85b c9c5 | fa11 8c24 | a800 0000 | c5fa 1184 | 24a4 0000 | 0045 33c0 | e9d5 faff 
  0x0000022773fd0b90: ff85 ed0f | 8500 2200 | 00c4 c179 | 6ec9 c5f8 | 5bc9 c5d2 

  0x0000022773fd0ba4: ;   {section_word}
  0x0000022773fd0ba4: 5cc1 c5f8 | 2e05 52f0 | ffff 720b | 41b8 0200 | 0000 e978 

  0x0000022773fd0bb8: ;   {section_word}
  0x0000022773fd0bb8: faff ffc5 | f82e 0541 | f0ff ff0f | 8267 faff | ff41 b801 | 0000 00e9 | 5ffa ffff | 448b 5424 
  0x0000022773fd0bd8: 34e9 76f2 | ffff 448b | 5c24 3845 | 85db 0f8f | ec24 0000 | c5f0 57c9 | e958 f5ff | ff44 8b5c 
  0x0000022773fd0bf8: 2438 4585 | db0f 8f45 | 2500 00c5 | f857 c0e9 | 37f3 ffff | 4585 db0f | 8fb7 2500 | 00c5 f857 
  0x0000022773fd0c18: c0e9 a0f3 | ffff 6690 | 33db 4585 | db0f 851d | 1100 0085 | ff0f 8c9a | 0400 0041 | 8bca d3fe 
  0x0000022773fd0c38: ffc6 d1fe | c5f9 6eee | c5f8 5bed | c5fa 11ac | 248c 0000 | 00c5 fa11 | 8c24 8800 | 0000 895c 
  0x0000022773fd0c58: 243c c5fb | 11bc 2480 | 0000 00c5 | fa11 6424 | 28c5 f97e | d5c5 fa11 | 9c24 9400 | 0000 488b 
  0x0000022773fd0c78: 5424 6044 | 8b44 242c 

  0x0000022773fd0c80: ;   {optimized virtual_call}
  0x0000022773fd0c80: 448b cbe8 

  0x0000022773fd0c84: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [48]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokevirtual getCachedGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::render@157 (line 149)
  0x0000022773fd0c84: 38ca fcff | 4885 c00f | 84e7 2300 | 0048 8b54 | 2460 4c8b | c04c 8b8c | 2408 0100 | 0048 8b7c 
  0x0000022773fd0ca4: 2420 c5fa | 1084 2488 | 0000 00c5 | fa10 8c24 | 8c00 0000 | c5fa 1054 | 2428 c5f8 | 28da 4889 
  0x0000022773fd0cc4: 8424 9800 

  0x0000022773fd0cc8: ;   {optimized virtual_call}
  0x0000022773fd0cc8: 0000 90e8 

  0x0000022773fd0ccc: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [48]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [152]=Oop }
                      ;*invokevirtual addDataToQuad {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@316 (line 173)
  0x0000022773fd0ccc: 907e fcff | 448b 5424 | 3841 ffc2 | 443b 5424 | 7c0f 8ddf | f5ff ffc5 | fa10 ac24 | 8c00 0000 
  0x0000022773fd0cec: c5fa 1084 | 2488 0000 | 00c5 fa10 | 9c24 9400 | 0000 4c8b | 7424 6848 | 8b44 2470 | 488b bc24 
  0x0000022773fd0d0c: 1001 0000 | 448b 4c24 | 5c44 8b44 | 2478 488b | 5c24 4044 | 8b5c 247c | 488b 9424 | 0801 0000 
  0x0000022773fd0d2c: 488b 7424 | 20c5 f96e | d5c5 fa10 | 6424 2848 | 8b4c 2430 | c5fb 10bc | 2480 0000 | 008b 6b0c 
  0x0000022773fd0d4c: 89ac 2480 | 0000 0044 | 3bd5 0f8d | 0e16 0000 | bd00 1000 | 0023 6b2c | 85ed 0f84 | c116 0000 
  0x0000022773fd0d6c: 4c8b e944 | 8954 2438 | 4889 7424 | 2048 8994 | 2408 0100 | 0044 895c | 247c 4489 | 4424 7844 
  0x0000022773fd0d8c: 894c 245c | 4889 bc24 | 1001 0000 | 4889 4424 | 704c 8974 | 2468 448b | 5b10 448b | 4b40 4889 
  0x0000022773fd0dac: 5c24 4041 | 8bda 4103 | db45 8b41 | 0c41 3bd8 | 0f83 d910 | 0000 4d63 | c24d 63d3 | 4d03 c247 
  0x0000022773fd0dcc: 8b5c 8110 | 4489 5c24 | 2c41 8beb | 81e5 ffff | ff00 81fd | ffff 0000 | 0f84 e116 | 0000 448b 
  0x0000022773fd0dec: 4c24 3844 | 3b8c 2480 | 0000 000f | 8f78 1700 | 0048 8b4c | 2440 c5fa | 1071 3444 | 8b51 3845 
  0x0000022773fd0e0c: 3bd1 7434 | 41ff c245 | 3bd1 0f85 | b902 0000 | 448b 4944 | ffcb 458b | 590c 413b | db0f 8345 
  0x0000022773fd0e2c: 1c00 00c4 | 814a 5874 | 810c 448b | 4c24 3844 | 8949 38c5 | fa11 7134 | bd07 0000 | 0049 8bf5 
  0x0000022773fd0e4c: 236e 0cc5 | c359 4628 | c5ca 584c | 2450 c5d2 | 5ae9 c5d3 | 5976 1083 | fd03 0f85 | dc02 0000 
  0x0000022773fd0e6c: c5cb 584e | 30c5 fb58 | 4638 c5f3 | 5ac9 c5d3 | 5ae8 c5fa | 11ac 24cc | 0000 00c5 | fa11 8c24 
  0x0000022773fd0e8c: c800 0000 | 488b 7c24 | 6044 8b57 | 1445 8b5a | 084d 8bc2 

  0x0000022773fd0ea0: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x0000022773fd0ea0: 4181 fbb8 | eb12 010f | 85fe 1000 | 0045 8b58 | 1c45 85db | 0f84 4c0b | 0000 418b | 5308 498b 
  0x0000022773fd0ec0: ;   {metadata('com/sun/javafx/font/directwrite/DWFontStrike')}
  0x0000022773fd0ec0: db81 fa60 | 7312 010f | 85f8 1100 | 0048 8974 | 2430 4c89 | 8424 9800 | 0000 4489 | 4c24 3848 
  0x0000022773fd0ee0: 894c 2440 | 4889 7c24 | 608b 6b10 | 4c8b c38b | bc24 cc00 | 0000 c5fa | 1084 24c8 | 0000 00c5 
  0x0000022773fd0f00: fa2c d881 | fb00 0000 | 8075 0f48 | 83ec 08c5 | fa11 0424 

  0x0000022773fd0f14: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd0f14: e8da 0164 | ff5b 8bf7 | 81e6 ffff | 7f00 448b | d741 c1ea | 1781 ce00 | 0080 0045 | 0fb6 d241 
  0x0000022773fd0f34: b995 0000 | 0045 2bca | 458b d144 | 8bce 41f7 | d945 8bda | 4183 e3e0 | c5fa 108c | 24cc 0000 
  0x0000022773fd0f54: 00c5 fa2c | d181 fa00 | 0000 8075 | 0f48 83ec | 08c5 fa11 

  0x0000022773fd0f68: ;   {runtime_call StubRoutines (1)}
  0x0000022773fd0f68: 0c24 e884 | 0164 ff5a | 453b 6034 | 0f84 8600 | 0000 85ed | 0f85 0320 | 0000 8b84 | 24c8 0000 
  0x0000022773fd0f88: 008b e8c1 | ed17 400f | b6ed b995 | 0000 002b | cdf7 c1e0 | ffff ff75 | 1c8b d881 | e3ff ff7f 
  0x0000022773fd0fa8: 0081 cb00 | 0080 0085 | c00f 8c40 | 0100 00d3 | fbff c3d1 | fbc5 f96e | c3c5 f85b | c045 85db 
  0x0000022773fd0fc8: 0f85 880d | 0000 85ff | 0f8c 2801 | 0000 418b | cad3 feff | c6d1 fec5 | f96e cec5 | f85b c9c5 
  0x0000022773fd0fe8: fa11 8c24 | 8c00 0000 | c5fa 1184 | 2488 0000 | 0033 dbe9 | 56fc ffff | 85ed 0f85 | cd1d 0000 
  0x0000022773fd1008: c5f9 6ecb | c5f8 5bc9 | c5fa 5cc1 

  0x0000022773fd1014: ;   {section_word}
  0x0000022773fd1014: c5f8 2e05 | e4eb ffff | 720a bb02 | 0000 00e9 | fafb ffff 

  0x0000022773fd1028: ;   {section_word}
  0x0000022773fd1028: c5f8 2e05 | d4eb ffff | 0f82 eafb | ffff bb01 | 0000 00e9 | e2fb ffff | 448b 5424 | 34e9 baf2 
  0x0000022773fd1048: ffff 448b | 5c24 3845 | 85db 0f8f | 8920 0000 | c5f0 57c9 | e94d f4ff | ff44 8b54 | 2434 e9e4 
  0x0000022773fd1068: f1ff ff41 | f7db e9a9 | f1ff ff41 | 8bfb e9c8 | f5ff ff44 | 8b4c 2438 | 4585 c90f | 8f70 2000 
  0x0000022773fd1088: 00c5 c857 | f6e9 28f9 | ffff 8b4c | 2438 85c9 | 0f8f e920 | 0000 c5f8 | 57c0 e98f | f6ff ff44 
  0x0000022773fd10a8: 8bd9 85c9 | 0f8f 6721 | 0000 c5f0 | 57c9 e9f0 | f6ff ff44 | 8b54 2434 | e9eb f4ff | ff41 f7db 
  0x0000022773fd10c8: e9b0 f4ff | ff41 8bf1 | e95e fbff | ff45 85c9 | 0f8f 2420 | 0000 c5c8 | 57f6 e954 | fdff ff41 
  0x0000022773fd10e8: f7d9 e955 | faff ff41 | 8bfb e96f | faff fff7 | dbe9 b9fe | ffff 418b | f1e9 d0fe | ffff 4889 
  0x0000022773fd1108: 8c24 8000 | 0000 4489 | 4c24 384c | 8954 2440 | 448b dd41 | 83c3 fe41 | 83fb 010f | 875b 2100 
  0x0000022773fd1128: 00c5 f35a | cec5 fb5a | c0c5 fa11 | 8424 d400 | 0000 c5fa | 118c 24d0 | 0000 00e9 | e6f8 ffff 
  0x0000022773fd1148: 448b d541 | 83c2 fe41 | 83fa 010f | 8765 2100 | 00c5 d35a | eec5 fb5a | c0c5 fa11 | 8424 cc00 
  0x0000022773fd1168: 0000 c5fa | 11ac 24c8 | 0000 00e9 | 18fd ffff | 4c8b 9424 | 9800 0000 | 458b 5214 

  0x0000022773fd1184: ; implicit exception: dispatches to 0x0000022773fd41b8
  0x0000022773fd1184: 458b 5a08 

  0x0000022773fd1188: ;   {metadata('com/sun/javafx/font/PrismCompositeFontResource')}
  0x0000022773fd1188: 498b d241 | 81fb 70ca | 1201 745d 

  0x0000022773fd1194: ;   {metadata('com/sun/javafx/font/LogicalFont')}
  0x0000022773fd1194: 4181 fb48 | 3212 010f | 85f3 2800 | 00c5 fa11 | 8424 ac00 | 0000 c5fa | 11a4 24a8 | 0000 00c5 
  0x0000022773fd11b4: fa11 9424 | 9400 0000 | c5f9 7edd 

  0x0000022773fd11c0: ;   {optimized virtual_call}
  0x0000022773fd11c0: 4533 c0e8 

  0x0000022773fd11c4: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [152]=Oop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd11c4: b801 69ff | 4889 8424 | a000 0000 | c5f9 6edd | c5fa 1094 | 2494 0000 | 00c5 fa10 | a424 a800 
  0x0000022773fd11e4: 0000 c5fa | 1084 24ac | 0000 00eb | 0f44 8b5a | 0c4d 8bd3 | 4c89 9424 | a000 0000 | 4c8b 9424 
  0x0000022773fd1204: 9800 0000 | c4c1 7a10 | 720c 458b | 5218 4489 | 9424 9400 

  0x0000022773fd1218: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1218: 0000 49b8 | 681b e68a | 0000 0000 | 488d 9c24 | e000 0000 | 498b 0048 | f7c0 0200 | 0000 7524 
  0x0000022773fd1238: 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 
  0x0000022773fd1258: 2c00 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 
  0x0000022773fd1278: 0f85 0a00 | 0000 49ff | 8286 0000 | 0048 33c0 | 0f85 de21 

  0x0000022773fd128c: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd128c: 0000 49ba | 681b e68a | 0000 0000 | 458b 9a8c | 0000 0041 | 8bfb 4585 | db0f 8425 

  0x0000022773fd12a8: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd12a8: 2500 0049 | bb68 1be6 | 8a00 0000 | 0048 8d84 | 24e0 0000 | 0048 8138 | 0000 0000 | 0f84 8300 
  0x0000022773fd12c8: 0000 4d8b | 1349 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 
  0x0000022773fd12e8: 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb47 4981 
  0x0000022773fd1308: ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 
  0x0000022773fd1328: 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 10f7 c000 | 0000 00eb | 084c 8b10 
  0x0000022773fd1348: f04d 0fb1 | 130f 8586 

  0x0000022773fd1350: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1350: 2100 0049 | ba68 1be6 | 8a00 0000 | 0041 0fb6 | aad7 0000 | 0085 ed0f | 84ef 2500 | 004c 8b94 
  0x0000022773fd1370: 2498 0000 | 0045 8b4a | 104c 8b94 | 24a0 0000 | 0045 8b5a 

  0x0000022773fd1384: ;   {metadata('com/sun/javafx/font/directwrite/DWFontFile')}
  0x0000022773fd1384: 0841 81fb | f01c 1201 | 0f85 9a21 | 0000 c5fa | 1184 24b0 | 0000 00c5 | f97e e5c5 | fa11 9424 
  0x0000022773fd13a4: ac00 0000 | c5fa 119c | 24a8 0000 | 0044 8b84 | 2494 0000 | 0049 8bd2 | c5f8 28c6 | 4c89 9424 
  0x0000022773fd13c4: b800 0000 

  0x0000022773fd13c8: ;   {optimized virtual_call}
  0x0000022773fd13c8: 6666 90e8 

  0x0000022773fd13cc: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [152]=Oop [184]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd13cc: b0ff 68ff | 488b d841 | 807f 3800 | 0f85 170a | 0000 4c8b | 9424 9800 | 0000 4c8b | db4c 8b84 
  0x0000022773fd13ec: 2498 0000 | 0045 8958 | 1c4c 8bdb | 4d33 da49 | c1eb 144d | 85db 0f84 | 5509 0000 | 4885 db0f 
  0x0000022773fd140c: 8477 1f00 | 0049 c1ea | 0948 b900 | e09c 7b27 | 0200 0049 | 03ca 8039 | 040f 8505 | 0a00 004c 
  0x0000022773fd142c: 8bd3 c5fa | 109c 24a8 | 0000 00c5 | fa10 9424 | ac00 0000 | c5f9 6ee5 | c5fa 1084 | 24b0 0000 
  0x0000022773fd144c: 00e9 47ed | ffff 458b | 5a14 458b | 5308 498b 

  0x0000022773fd145c: ;   {metadata('com/sun/javafx/font/PrismCompositeFontResource')}
  0x0000022773fd145c: d341 81fa | 70ca 1201 

  0x0000022773fd1464: ;   {metadata('com/sun/javafx/font/LogicalFont')}
  0x0000022773fd1464: 745f 4181 | fa48 3212 | 010f 8533 | 2600 00c5 | fa11 ac24 | 8c00 0000 | c5fa 11a4 | 2488 0000 
  0x0000022773fd1484: 00c5 fa11 | 9424 8400 | 0000 c5f9 | 7edd 4533 

  0x0000022773fd1494: ;   {optimized virtual_call}
  0x0000022773fd1494: c066 90e8 

  0x0000022773fd1498: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [152]=Oop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd1498: e4fe 68ff | 4889 8424 | a000 0000 | c5f9 6edd | c5fa 1094 | 2484 0000 | 00c5 fa10 | a424 8800 
  0x0000022773fd14b8: 0000 c5fa | 10ac 248c | 0000 00eb | 0f44 8b5a | 0c4d 8bd3 | 4c89 9424 | a000 0000 | 4c8b 9424 
  0x0000022773fd14d8: 9800 0000 | c4c1 7a10 | 720c 458b | 5a18 4489 | 9c24 9400 

  0x0000022773fd14ec: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd14ec: 0000 49b8 | 681b e68a | 0000 0000 | 488d 9c24 | e000 0000 | 498b 0048 | f7c0 0200 | 0000 7524 
  0x0000022773fd150c: 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 
  0x0000022773fd152c: 2c00 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 
  0x0000022773fd154c: 0f85 0a00 | 0000 49ff | 8286 0000 | 0048 33c0 | 0f85 da20 

  0x0000022773fd1560: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1560: 0000 49ba | 681b e68a | 0000 0000 | 458b 928c | 0000 0041 | 8bfa 4585 | d20f 8463 

  0x0000022773fd157c: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd157c: 2200 0049 | bb68 1be6 | 8a00 0000 | 0048 8d84 | 24e0 0000 | 0048 8138 | 0000 0000 | 0f84 8300 
  0x0000022773fd159c: 0000 4d8b | 1349 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 
  0x0000022773fd15bc: 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb47 4981 
  0x0000022773fd15dc: ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 
  0x0000022773fd15fc: 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 10f7 c000 | 0000 00eb | 084c 8b10 
  0x0000022773fd161c: f04d 0fb1 | 130f 8582 

  0x0000022773fd1624: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1624: 2000 0049 | ba68 1be6 | 8a00 0000 | 0041 0fb6 | aad7 0000 | 0085 ed0f | 8436 2300 | 004c 8b94 
  0x0000022773fd1644: 2498 0000 | 0045 8b4a | 104c 8b94 | 24a0 0000 | 0045 8b5a 

  0x0000022773fd1658: ;   {metadata('com/sun/javafx/font/directwrite/DWFontFile')}
  0x0000022773fd1658: 0841 81fb | f01c 1201 | 0f85 d81e | 0000 c5fa | 11ac 2484 | 0000 00c5 | f97e e5c5 | fa11 9424 
  0x0000022773fd1678: ac00 0000 | c5fa 119c | 24a8 0000 | 008b 8c24 | 9400 0000 | 4c8b c149 | 8bd2 c5f8 | 28c6 4c89 
  0x0000022773fd1698: 9424 a000 

  0x0000022773fd169c: ;   {optimized virtual_call}
  0x0000022773fd169c: 0000 90e8 

  0x0000022773fd16a0: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [152]=Oop [160]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd16a0: dcfc 68ff | 488b d841 | 807f 3800 | 0f85 b20a | 0000 4c8b | d34c 8b9c | 2498 0000 | 0045 8953 
  0x0000022773fd16c0: 1c4d 8bd3 | 4c8b db4d | 33da 49c1 | eb14 4d85 | db0f 84aa | 0600 0048 | 85db 0f84 | c31c 0000 
  0x0000022773fd16e0: 49c1 ea09 | 48b9 00e0 | 9c7b 2702 | 0000 4903 | ca80 3904 | 0f85 a50a | 0000 4c8b | dbc5 fa10 
  0x0000022773fd1700: 9c24 a800 | 0000 c5fa | 1094 24ac | 0000 00c5 | f96e e5c5 | fa10 ac24 | 8400 0000 | e9d9 edff 
  0x0000022773fd1720: ff4c 8b94 | 2498 0000 | 0045 8b52 | 1445 8b5a | 0849 8bd2 

  0x0000022773fd1734: ;   {metadata('com/sun/javafx/font/PrismCompositeFontResource')}
  0x0000022773fd1734: 4181 fb70 | ca12 0174 

  0x0000022773fd173c: ;   {metadata('com/sun/javafx/font/LogicalFont')}
  0x0000022773fd173c: 6041 81fb | 4832 1201 | 0f85 9823 | 0000 c5fb | 11bc 24a0 | 0000 00c5 | fa11 a424 | 9400 0000 
  0x0000022773fd175c: c5fa 1194 | 2490 0000 | 00c5 f97e | dd45 33c0 

  0x0000022773fd176c: ;   {optimized virtual_call}
  0x0000022773fd176c: 6666 90e8 

  0x0000022773fd1770: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [152]=Oop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd1770: 0cfc 68ff | 4889 8424 | 8800 0000 | c5f9 6edd | c5fa 1094 | 2490 0000 | 00c5 fa10 | a424 9400 
  0x0000022773fd1790: 0000 c5fb | 10bc 24a0 | 0000 00eb | 0f44 8b5a | 0c4d 8bd3 | 4c89 9424 | 8800 0000 | 4c8b 9424 
  0x0000022773fd17b0: 9800 0000 | c4c1 7a10 | 6a0c 458b | 5a18 4489 | 9c24 9400 

  0x0000022773fd17c4: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd17c4: 0000 49b8 | 681b e68a | 0000 0000 | 488d 9c24 | e000 0000 | 498b 0048 | f7c0 0200 | 0000 7524 
  0x0000022773fd17e4: 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 
  0x0000022773fd1804: 2c00 0000 | 4c8b d848 | 33c0 f04d | 0fb1 7b3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 
  0x0000022773fd1824: 0f85 0a00 | 0000 49ff | 8386 0000 | 0048 33c0 | 0f85 d71e 

  0x0000022773fd1838: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1838: 0000 49ba | 681b e68a | 0000 0000 | 458b 928c | 0000 0041 | 8bfa 4585 | d20f 84c1 

  0x0000022773fd1854: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1854: 1f00 0049 | bb68 1be6 | 8a00 0000 | 0048 8d84 | 24e0 0000 | 0048 8138 | 0000 0000 | 0f84 8300 
  0x0000022773fd1874: 0000 4d8b | 1349 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 
  0x0000022773fd1894: 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb47 4981 
  0x0000022773fd18b4: ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 
  0x0000022773fd18d4: 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 10f7 c000 | 0000 00eb | 084c 8b10 
  0x0000022773fd18f4: f04d 0fb1 | 130f 857e 

  0x0000022773fd18fc: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd18fc: 1e00 0049 | ba68 1be6 | 8a00 0000 | 0041 0fb6 | aad7 0000 | 0085 ed0f | 8497 2000 | 004c 8b94 
  0x0000022773fd191c: 2498 0000 | 0045 8b4a | 104c 8b94 | 2488 0000 | 0045 8b52 

  0x0000022773fd1930: ;   {metadata('com/sun/javafx/font/directwrite/DWFontFile')}
  0x0000022773fd1930: 0841 81fa | f01c 1201 | 0f85 381c | 0000 c5fb | 11bc 24a0 | 0000 00c5 | fa11 a424 | 9000 0000 
  0x0000022773fd1950: c5f9 7ed5 | c5fa 119c | 24a8 0000 | 004c 8b94 | 2488 0000 | 0044 8b84 | 2494 0000 | 0049 8bd2 
  0x0000022773fd1970: c5f8 28c5 | 4c89 9424 | b800 0000 

  0x0000022773fd197c: ;   {optimized virtual_call}
  0x0000022773fd197c: 6666 90e8 

  0x0000022773fd1980: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [152]=Oop [184]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd1980: fcf9 68ff | 488b d841 | 807f 3800 | 0f85 6708 | 0000 4c8b | 9424 9800 | 0000 4c8b | c34c 8b9c 
  0x0000022773fd19a0: 2498 0000 | 0045 8943 | 1c4c 8bdb | 4d33 da49 | c1eb 144d | 85db 0f84 | fb03 0000 | 4885 db0f 
  0x0000022773fd19c0: 840b 1a00 | 0049 c1ea | 0948 b900 | e09c 7b27 | 0200 0049 | 03ca 8039 | 040f 8555 | 0800 004c 
  0x0000022773fd19e0: 8bd3 c5fa | 109c 24a8 | 0000 00c5 | f96e d5c5 | fa10 a424 | 9000 0000 | c5fb 10bc | 24a0 0000 
  0x0000022773fd1a00: 00e9 5af0 | ffff 418b | 5814 448b | 5308 488b 

  0x0000022773fd1a10: ;   {metadata('com/sun/javafx/font/PrismCompositeFontResource')}
  0x0000022773fd1a10: d341 81fa | 70ca 1201 

  0x0000022773fd1a18: ;   {metadata('com/sun/javafx/font/LogicalFont')}
  0x0000022773fd1a18: 7471 4181 | fa48 3212 | 010f 85fc | 2000 00c5 | fb11 bc24 | 9000 0000 | 4889 b424 | a000 0000 
  0x0000022773fd1a38: 4c89 8424 | 8000 0000 | 4489 4c24 | 38c5 fa11 | 6424 30c5 | fa11 5424 | 28c5 f97e | dd45 33c0 
  0x0000022773fd1a58: ;   {optimized virtual_call}
  0x0000022773fd1a58: 6666 90e8 

  0x0000022773fd1a5c: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [160]=Oop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd1a5c: 20f9 68ff | 4889 8424 | 8800 0000 | c5f9 6edd | c5fa 1054 | 2428 c5fa | 1064 2430 | 4c8b 8424 
  0x0000022773fd1a7c: 8000 0000 | c5fb 10bc | 2490 0000 | 00eb 1944 | 8b52 0c44 | 894c 2438 | 4889 b424 | a000 0000 
  0x0000022773fd1a9c: 4c89 9424 | 8800 0000 | c4c1 7a10 | 680c 458b | 5018 4489 | 9424 9400 | 0000 4c89 | 8424 9800 
  0x0000022773fd1abc: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1abc: 0000 49b8 | 681b e68a | 0000 0000 | 488d 9c24 | e000 0000 | 498b 0048 | f7c0 0200 | 0000 7524 
  0x0000022773fd1adc: 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 
  0x0000022773fd1afc: 2c00 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 
  0x0000022773fd1b1c: 0f85 0a00 | 0000 49ff | 8286 0000 | 0048 33c0 | 0f85 fc20 

  0x0000022773fd1b30: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1b30: 0000 49ba | 681b e68a | 0000 0000 | 458b 828c | 0000 0045 | 85c0 0f84 | f91c 0000 

  0x0000022773fd1b4c: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1b4c: 418b f849 | bb68 1be6 | 8a00 0000 | 0048 8d84 | 24e0 0000 | 0048 8138 | 0000 0000 | 0f84 8300 
  0x0000022773fd1b6c: 0000 4d8b | 1349 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 
  0x0000022773fd1b8c: 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb47 4981 
  0x0000022773fd1bac: ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 
  0x0000022773fd1bcc: 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 10f7 c000 | 0000 00eb | 084c 8b10 
  0x0000022773fd1bec: f04d 0fb1 | 130f 8591 

  0x0000022773fd1bf4: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd1bf4: 2000 0049 | ba68 1be6 | 8a00 0000 | 0041 0fb6 | aad7 0000 | 0085 ed0f | 84cf 1d00 | 004c 8b94 
  0x0000022773fd1c14: 2498 0000 | 0045 8b4a | 104c 8b94 | 2488 0000 | 0045 8b5a 

  0x0000022773fd1c28: ;   {metadata('com/sun/javafx/font/directwrite/DWFontFile')}
  0x0000022773fd1c28: 0841 81fb | f01c 1201 | 0f85 6a19 | 0000 c5fb | 117c 2430 | c5fa 1164 | 2428 c5f9 | 7ed5 c5fa 
  0x0000022773fd1c48: 119c 24a8 | 0000 008b | 8c24 9400 | 0000 4c8b | c149 8bd2 | c5f8 28c5 | 4c8b 9c24 | 9800 0000 
  0x0000022773fd1c68: 4c89 9c24 | 9000 0000 | 4c89 9424 | b000 0000 

  0x0000022773fd1c78: ;   {optimized virtual_call}
  0x0000022773fd1c78: 6666 90e8 

  0x0000022773fd1c7c: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [144]=Oop [152]=Oop [160]=Oop [176]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd1c7c: 00f7 68ff | 488b d841 | 807f 3800 | 0f85 f30f | 0000 4c8b | db4c 8b94 | 2498 0000 | 0045 895a 
  0x0000022773fd1c9c: 1c4d 8bda | 4c8b d34d | 33d3 49c1 | ea14 4d85 | d20f 84b5 | 0f00 004c | 8bd3 4d85 | d20f 8442 
  0x0000022773fd1cbc: 1f00 0049 | c1eb 0948 | b900 e09c | 7b27 0200 | 0049 03cb | 8039 040f | 85ed 0f00 | 004c 8b84 
  0x0000022773fd1cdc: 2498 0000 | 004d 8bda | 488b 7c24 | 60c5 fa10 | 9c24 a800 | 0000 488b | 4c24 40c5 | f96e d5c5 
  0x0000022773fd1cfc: fa10 6424 | 2844 8b4c | 2438 488b | b424 a000 | 0000 c5fb | 107c 2430 | e9a1 f1ff | ff44 8b54 
  0x0000022773fd1d1c: 2428 e93e | e1ff ff44 | 8b54 2428 | e9e4 e5ff | ff44 8b54 | 2428 e925 | e5ff ff8b | f8e9 0ee9 
  0x0000022773fd1d3c: ffff 448b | 5424 28e9 | 75e8 ffff | 8bf2 e9ed | eeff ff8b | f8e9 19ee | ffff 8bf2 | e982 f2ff 
  0x0000022773fd1d5c: ff48 85db | 0f85 c5f6 | ffff c5fa | 1084 24b0 | 0000 00c5 | fa11 8424 | 0801 0000 | 8bac 2490 
  0x0000022773fd1d7c: 0000 00eb | 2248 85db | 0f85 70f9 | ffff c5fa | 108c 2484 | 0000 00c5 | fa11 8c24 | 0801 0000 
  0x0000022773fd1d9c: 8bac 2480 | 0000 00c5 | fa10 8424 | ac00 0000 | c5fa 1184 | 240c 0100 | 00eb 3148 | 85db 0f85 
  0x0000022773fd1dbc: 1ffc ffff | c5fa 108c | 24d4 0000 | 00c5 fa11 | 8c24 0c01 | 0000 c5fa | 1084 24d0 | 0000 00c5 
  0x0000022773fd1ddc: fa11 8424 | 0801 0000 | 8b6c 243c | 4c8b 8424 | 9800 0000 | e90b 1600 | 004c 8b94 | 2498 0000 
  0x0000022773fd1dfc: 0045 8b5a | 1c45 85db | 0f84 d4f5 | ffff 4d8b | 5720 498b | cb4d 85d2 | 0f84 e218 | 0000 4d8b 
  0x0000022773fd1e1c: 5f30 4b89 | 4c13 f849 | 83c2 f84d | 8957 20e9 | aef5 ffff | 4d8b 5740 | 4d8b 5f50 | f083 4424 
  0x0000022773fd1e3c: c000 8039 | 0074 2744 | 8821 4d85 | d274 0f4b | 894c 13f8 | 4983 c2f8 | 4d89 5740 | eb10 498b 
  0x0000022773fd1e5c: d749 ba40 | 4cc7 09fb | 7f00 0041 | ffd2 4c8b | 9424 9800 | 0000 458b | 5a1c 4585 | db0f 8488 
  0x0000022773fd1e7c: 1e00 004d | 8bd3 498b | dae9 a1f5 | ffff 4d8b | c2eb 00c4 | c179 7eda | eb0d 4d8b | c3eb 034d 
  0x0000022773fd1e9c: 8bc1 c4c1 | 797e daba | e4ff ffff | 488b 6c24 | 4044 8b4c | 2438 4489 | 8c24 0c01 | 0000 c5fa 
  0x0000022773fd1ebc: 1144 2428 | c5fa 116c | 242c 4c8b | 5c24 604c | 895c 2430 | 4c8b 5c24 | 484c 895c | 2438 c5fa 
  0x0000022773fd1edc: 1044 2450 | c5fa 1144 | 2440 4489 | 5424 4444 | 8b5c 2454 | 4489 5c24 | 4844 8b54 | 2458 4489 
  0x0000022773fd1efc: 5424 4c4c | 8b54 2468 | 4c89 5424 | 504c 8b54 | 2470 4c89 | 5424 6044 | 8b5c 245c | 4489 5c24 
  0x0000022773fd1f1c: 584c 8944 | 2470 895c 

  0x0000022773fd1f24: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd1f24: 246c 90e8 

  0x0000022773fd1f28: ; ImmutableOopMap {rbp=Oop [256]=Oop [272]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=NarrowOop [96]=Oop [112]=Oop [120]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getGlyphCode@34 (line 305)
                      ; - com.sun.prism.impl.GlyphCache::render@83 (line 138)
  0x0000022773fd1f28: d449 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd1f48: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0048 | 8b7c 2460 | c5f9 7edb | 488b 4c24 | 4044 8b4c 
  0x0000022773fd1f68: 2438 4d8b | c2eb 68c5 | fa10 8424 | d400 0000 | c5fa 1184 | 240c 0100 | 00c5 fa10 | 8c24 d000 
  0x0000022773fd1f88: 0000 c5fa | 118c 2408 | 0100 008b | 6c24 3c48 | 8b7c 2460 | 488b 4c24 | 4044 8b4c | 2438 4d8b 
  0x0000022773fd1fa8: c2eb 28c5 | fa10 8c24 | cc00 0000 | c5fa 118c | 240c 0100 | 00c5 fa10 | 8424 c800 | 0000 c5fa 
  0x0000022773fd1fc8: 1184 2408 | 0100 008b | 6c24 2cc5 | f97e dbba | deff ffff | 4889 4c24 | 2044 894c | 2428 4889 
  0x0000022773fd1fe8: 7c24 304c | 8b54 2448 | 4c89 5424 | 38c5 fa10 | 4c24 50c5 | fa11 4c24 | 2c89 5c24 | 4044 8b54 
  0x0000022773fd2008: 2454 4489 | 5424 4444 | 8b5c 2458 | 4489 5c24 | 484c 8b54 | 2468 4c89 | 5424 5044 | 8b54 245c 
  0x0000022773fd2028: 4489 5424 | 4c4c 8944 

  0x0000022773fd2030: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2030: 2468 90e8 

  0x0000022773fd2034: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokeinterface getQuantizedPosition {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd2034: c848 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd2054: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0048 | 8b7c 2460 | c4c1 797e | da48 8b4c | 2440 448b 
  0x0000022773fd2074: 4c24 384c | 8b84 2498 | 0000 00eb | 71c5 fa10 | 8c24 d400 | 0000 c5fa | 118c 240c | 0100 00c5 
  0x0000022773fd2094: fa10 8424 | d000 0000 | c5fa 1184 | 2408 0100 | 008b 6c24 | 3c48 8b7c | 2460 488b | 4c24 4044 
  0x0000022773fd20b4: 8b4c 2438 | 4c8b 8424 | 9800 0000 | 498b daeb | 28c5 fa10 | 8424 cc00 | 0000 c5fa | 1184 240c 
  0x0000022773fd20d4: 0100 00c5 | fa10 8c24 | c800 0000 | c5fa 118c | 2408 0100 | 008b 6c24 | 2cc4 c179 | 7eda bade 
  0x0000022773fd20f4: ffff ff48 | 894c 2420 | 4489 4c24 | 2848 897c | 2430 4c8b | 5c24 484c | 895c 2438 | c5fa 1044 
  0x0000022773fd2114: 2450 c5fa | 1144 242c | 4489 5424 | 4044 8b54 | 2454 4489 | 5424 4444 | 8b5c 2458 | 4489 5c24 
  0x0000022773fd2134: 484c 8b54 | 2468 4c89 | 5424 504c | 8b54 2470 | 4c89 5424 | 6044 8b54 | 245c 4489 | 5424 4c4c 
  0x0000022773fd2154: 8944 2468 | 4889 5c24 

  0x0000022773fd215c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd215c: 7066 90e8 

  0x0000022773fd2160: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokeinterface getQuantizedPosition {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@6 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd2160: 9c47 69ff | 4c8b 9424 | 9800 0000 | 458b 5a1c | 4585 db0f | 8439 f5ff | ff4d 8b57 | 2049 8bcb 
  0x0000022773fd2180: 4d85 d20f | 8463 1a00 | 004d 8b5f | 304b 894c | 13f8 4983 | c2f8 4d89 | 5720 e913 | f5ff ff4d 
  0x0000022773fd21a0: 8b57 504d | 8b5f 40f0 | 8344 24c0 | 0080 3900 | 7427 4488 | 214d 85db | 740f 4b89 | 4c1a f849 
  0x0000022773fd21c0: 83c3 f84d | 895f 40eb | 1049 8bd7 | 49ba 404c | c709 fb7f | 0000 41ff | d24c 8b94 | 2498 0000 
  0x0000022773fd21e0: 0045 8b5a | 1c45 85db | 0f84 341b | 0000 4d8b | d349 8bda | e901 f5ff | ff4c 8b94 | 2498 0000 
  0x0000022773fd2200: 0045 8b52 | 1c45 85d2 | 0f84 84f7 | ffff 4d8b | 5f20 498b | ca4d 85db | 0f84 bf1a | 0000 4d8b 
  0x0000022773fd2220: 5730 4b89 | 4c1a f849 | 83c3 f84d | 895f 20e9 | 5ef7 ffff | 4d8b 5740 | 4d8b 5f50 | f083 4424 
  0x0000022773fd2240: c000 8039 | 0074 2744 | 8821 4d85 | d274 0f4b | 894c 13f8 | 4983 c2f8 | 4d89 5740 | eb10 498b 
  0x0000022773fd2260: d749 ba40 | 4cc7 09fb | 7f00 0041 | ffd2 4c8b | 9424 9800 | 0000 458b | 521c 4585 | d20f 84d7 
  0x0000022773fd2280: 1a00 0049 | 8bda e954 | f7ff ffc5 | fa10 8424 | a800 0000 | c5fa 1144 | 242c c5fa | 108c 24a4 
  0x0000022773fd22a0: 0000 00c5 | fa11 4c24 | 2848 8944 | 2420 448b | 9424 a000 | 0000 4489 | 9424 0c01 | 0000 448b 
  0x0000022773fd22c0: 9c24 9000 | 0000 4489 | 9c24 0801 | 0000 eb40 | c5fa 108c | 24a8 0000 | 00c5 fa11 | 4c24 2cc5 
  0x0000022773fd22e0: fa10 8424 | a400 0000 | c5fa 1144 | 2428 4889 | 4424 2044 | 8b9c 24a0 | 0000 0044 | 899c 240c 
  0x0000022773fd2300: 0100 0044 | 8b54 243c | 4489 9424 | 0801 0000 | 488b ac24 | 1001 0000 | ba45 ffff | ff4c 8b54 
  0x0000022773fd2320: 2440 448b | 5c24 3844 | 895c 2430 | 4c89 5424 

  0x0000022773fd2330: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2330: 3866 90e8 

  0x0000022773fd2334: ; ImmutableOopMap {rbp=Oop [256]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@2 (line 316)
                      ; - com.sun.prism.impl.GlyphCache::render@200 (line 154)
  0x0000022773fd2334: c845 69ff | c4c1 797e | dd4c 8b74 | 2468 488b | 4424 7048 | 8bbc 2410 | 0100 0044 | 8b4c 245c 
  0x0000022773fd2354: 448b 4424 | 7848 8b5c | 2440 448b | 5c24 7c44 | 8b54 2438 | eb0c c4c1 | 797e dd8b | 8c24 8000 
  0x0000022773fd2374: 0000 ba45 | ffff ff48 | 899c 2410 | 0100 0044 | 8994 240c | 0100 0044 | 8954 2420 | 894c 2424 
  0x0000022773fd2394: c5fa 1144 | 2428 c5fa | 116c 242c | 48ff 7424 | 6048 8f44 | 2430 48ff | 7424 4848 | 8f44 2438 
  0x0000022773fd23b4: c5fa 104c | 2450 c5fa | 114c 2440 | 4489 6c24 | 448b 4c24 | 5489 4c24 | 4844 8b54 | 2458 4489 
  0x0000022773fd23d4: 5424 4c4c | 8974 2450 | 4889 4424 | 5848 897c | 2460 4489 | 4c24 6844 | 8944 246c | 4489 5c24 
  0x0000022773fd23f4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd23f4: 7066 90e8 

  0x0000022773fd23f8: ; ImmutableOopMap {[256]=Oop [272]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getGlyphCode@10 (line 303)
                      ; - com.sun.prism.impl.GlyphCache::render@83 (line 138)
  0x0000022773fd23f8: 0445 69ff | c5f9 7ed9 | 4c8b 7424 | 6848 8b44 | 2470 488b | bc24 1001 | 0000 448b | 4c24 5c44 
  0x0000022773fd2418: 8b44 2478 | 488b 5c24 | 4044 8b5c | 247c 448b | 5424 38eb | 04c5 f97e | d9ba 45ff | ffff 4889 
  0x0000022773fd2438: 5c24 2044 | 8994 2414 | 0100 00c5 | fa11 4424 | 28c5 fa11 | 6c24 2c48 | ff74 2460 | 488f 4424 
  0x0000022773fd2458: 3048 ff74 | 2448 488f | 4424 38c5 | fa10 4424 | 50c5 fa11 | 4424 4089 | 4c24 4444 | 8b54 2454 
  0x0000022773fd2478: 4489 5424 | 488b 4c24 | 5889 4c24 | 4c4c 8974 | 2450 4889 | 4424 5848 | 897c 2460 | 4489 4c24 
  0x0000022773fd2498: 6844 8944 | 246c 4489 

  0x0000022773fd24a0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd24a0: 5c24 70e8 

  0x0000022773fd24a4: ; ImmutableOopMap {[256]=Oop [32]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getGlyphCode@21 (line 304)
                      ; - com.sun.prism.impl.GlyphCache::render@83 (line 138)
  0x0000022773fd24a4: 5844 69ff | 4489 8424 | 0801 0000 | eb08 4489 | 9424 0801 | 0000 c4c1 | 797e dbeb | 1744 899c 
  0x0000022773fd24c4: 2408 0100 | 00eb 0844 | 899c 2408 | 0100 00c4 | c179 7edb | ba45 ffff | ff4c 8b54 | 2440 4c89 
  0x0000022773fd24e4: 5424 2044 | 8b54 2438 | 4489 9424 | 0c01 0000 | c5fa 1144 | 2428 c5fa | 116c 242c | 4c8b 5424 
  0x0000022773fd2504: 604c 8954 | 2430 4c8b | 5424 484c | 8954 2438 | c5fa 104c | 2450 c5fa | 114c 2440 | 4489 5c24 
  0x0000022773fd2524: 4444 8b54 | 2454 4489 | 5424 4844 | 8b5c 2458 | 4489 5c24 | 4c4c 8b54 | 2468 4c89 | 5424 5044 
  0x0000022773fd2544: 8b54 245c | 4489 5424 

  0x0000022773fd254c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd254c: 5866 90e8 

  0x0000022773fd2550: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=NarrowOop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::render@97 (line 143)
  0x0000022773fd2550: ac43 69ff | 418b e8eb | 078b ac24 | 8000 0000 | c4c1 797e | da44 8b4c | 2438 eb18 | 8b6c 243c 
  0x0000022773fd2570: 458b cbeb | 0341 8beb | c4c1 797e | da8b 8c24 | 8000 0000 | ba45 ffff | ff4c 8b5c | 2440 4c89 
  0x0000022773fd2590: 5c24 2844 | 894c 2424 | 4489 4c24 | 3089 4c24 | 34c5 fa11 | 4424 38c5 | fa11 6c24 | 3c4c 8b5c 
  0x0000022773fd25b0: 2460 4c89 | 5c24 4044 | 8954 2460 | 448b 5424 | 7844 8954 | 2464 448b | 5c24 7c44 | 895c 2478 
  0x0000022773fd25d0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd25d0: 6666 90e8 

  0x0000022773fd25d4: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [100]=NarrowOop [104]=Oop [112]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@10 (line 316)
                      ; - com.sun.prism.impl.GlyphCache::render@109 (line 146)
  0x0000022773fd25d4: 2843 69ff | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 28c5 | fa10 8c24 | a400 0000 | c5fa 118c 
  0x0000022773fd25f4: 240c 0100 | 0048 8944 | 2420 448b | 9424 a000 | 0000 4489 | 9424 0801 | 0000 8bac | 2490 0000 
  0x0000022773fd2614: 00eb 79c5 | fa10 8c24 | 9000 0000 | c5fa 114c | 2428 c5fa | 1084 248c | 0000 00c5 | fa11 8424 
  0x0000022773fd2634: 0c01 0000 | 4889 4424 | 2044 8b9c | 2488 0000 | 0044 899c | 2408 0100 | 008b ac24 | 8000 0000 
  0x0000022773fd2654: eb3a c5fa | 108c 24a8 | 0000 00c5 | fa11 4c24 | 28c5 fa10 | 8424 a400 | 0000 c5fa | 1184 240c 
  0x0000022773fd2674: 0100 0048 | 8944 2420 | 448b 9c24 | a000 0000 | 4489 9c24 | 0801 0000 | 8b6c 243c | ba45 ffff 
  0x0000022773fd2694: ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2438 | 4489 5c24 | 2c4c 8b54 | 2460 4c89 | 5424 384c 
  0x0000022773fd26b4: 8b54 2448 | 4c89 5424 | 4048 8944 | 24f8 8b44 | 2450 8944 | 2448 488b | 4424 f848 | 8944 24f8 
  0x0000022773fd26d4: 8b44 2454 | 8944 2450 | 488b 4424 | f848 8944 | 24f8 8b44 | 2458 8944 | 2454 488b | 4424 f84c 
  0x0000022773fd26f4: 8b54 2468 | 4c89 5424 | 604c 8b54 | 2470 4c89 | 5424 6848 | 8944 24f8 | 8b44 245c | 8944 2458 
  0x0000022773fd2714: 488b 4424 

  0x0000022773fd2718: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2718: f866 90e8 

  0x0000022773fd271c: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [88]=NarrowOop [96]=Oop [104]=Oop [120]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::render@164 (line 150)
  0x0000022773fd271c: e041 69ff | c5fa 108c | 24a8 0000 | 00c5 fa11 | 4c24 28c5 | fa10 8424 | a400 0000 | c5fa 1184 
  0x0000022773fd273c: 240c 0100 | 0048 8944 | 2420 448b | 9c24 a000 | 0000 4489 | 9c24 0801 | 0000 8bac | 2490 0000 
  0x0000022773fd275c: 004c 8b4c | 2440 448b | 5c24 3845 | 8bd0 eb3a | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 28c5 
  0x0000022773fd277c: fa10 8c24 | a400 0000 | c5fa 118c | 240c 0100 | 0048 8944 | 2420 448b | 8424 a000 | 0000 4489 
  0x0000022773fd279c: 8424 0801 | 0000 8b6c | 243c ba45 | ffff ff4c | 894c 2438 | 4489 5c24 | 4044 895c | 2444 4489 
  0x0000022773fd27bc: 9424 8800 

  0x0000022773fd27c0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd27c0: 0000 90e8 

  0x0000022773fd27c4: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@10 (line 316)
                      ; - com.sun.prism.impl.GlyphCache::render@176 (line 153)
  0x0000022773fd27c4: 3841 69ff | c5fa 108c | 24a8 0000 | 00c5 fa11 | 4c24 2cc5 | fa10 8424 | a400 0000 | c5fa 1144 
  0x0000022773fd27e4: 2428 4889 | 4424 2044 | 8b9c 24a0 | 0000 0044 | 899c 240c | 0100 0044 | 8b94 2490 | 0000 0044 
  0x0000022773fd2804: 8994 2408 | 0100 00eb | 40c5 fa10 | 8424 a800 | 0000 c5fa | 1144 242c | c5fa 108c | 24a4 0000 
  0x0000022773fd2824: 00c5 fa11 | 4c24 2848 | 8944 2420 | 448b 9424 | a000 0000 | 4489 9424 | 0c01 0000 | 448b 5c24 
  0x0000022773fd2844: 3c44 899c | 2408 0100 | 00ba 45ff 

  0x0000022773fd2850: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2850: ffff 90e8 

  0x0000022773fd2854: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@21 (line 317)
                      ; - com.sun.prism.impl.GlyphCache::render@176 (line 153)
  0x0000022773fd2854: a840 69ff | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 2cc5 | fa10 8c24 | a400 0000 | c5fa 114c 
  0x0000022773fd2874: 2428 4889 | 4424 2044 | 8b94 24a0 | 0000 0044 | 8994 240c | 0100 0044 | 8b9c 2490 | 0000 0044 
  0x0000022773fd2894: 899c 2408 | 0100 00eb | 40c5 fa10 | 8424 a800 | 0000 c5fa | 1144 242c | c5fa 108c | 24a4 0000 
  0x0000022773fd28b4: 00c5 fa11 | 4c24 2848 | 8944 2420 | 448b 9424 | a000 0000 | 4489 9424 | 0c01 0000 | 448b 5c24 
  0x0000022773fd28d4: 3c44 899c | 2408 0100 | 0048 8bac | 2410 0100 | 00ba 45ff | ffff 448b | 5424 3844 | 8954 2430 
  0x0000022773fd28f4: 4c8b 5424 | 404c 8954 | 2438 4489 | 8424 8400 

  0x0000022773fd2904: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2904: 0000 90e8 

  0x0000022773fd2908: ; ImmutableOopMap {rbp=Oop [256]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@10 (line 316)
                      ; - com.sun.prism.impl.GlyphCache::render@200 (line 154)
  0x0000022773fd2908: f43f 69ff | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 2cc5 | fa10 9c24 | a400 0000 | c5fa 115c 
  0x0000022773fd2928: 2428 4889 | 4424 2044 | 8b94 24a0 | 0000 0044 | 8994 240c | 0100 0044 | 8b9c 2490 | 0000 0044 
  0x0000022773fd2948: 899c 2408 | 0100 004c | 8b54 2440 | eb40 c5fa | 1084 24a8 | 0000 00c5 | fa11 4424 | 2cc5 fa10 
  0x0000022773fd2968: 9c24 a400 | 0000 c5fa | 115c 2428 | 4889 4424 | 2044 8b9c | 24a0 0000 | 0044 899c | 240c 0100 
  0x0000022773fd2988: 0044 8b44 | 243c 4489 | 8424 0801 | 0000 4c8b | 9c24 1001 | 0000 c5f8 | 2eca bdff | ffff ff0f 
  0x0000022773fd29a8: 8a0e 0000 | 000f 8208 | 0000 0040 | 0f95 c540 | 0fb6 edf7 | ddba 45ff | ffff 4c89 | 9424 1001 
  0x0000022773fd29c8: 0000 448b | 5424 3844 | 8954 2430 | 4c8b 5424 | 604c 8954 | 2438 4c8b | 5424 484c | 8954 2440 
  0x0000022773fd29e8: c5fa 104c | 2450 c5fa | 114c 2434 | 4889 4424 | f88b 4424 | 5489 4424 | 4c48 8b44 | 24f8 4889 
  0x0000022773fd2a08: 4424 f88b | 4424 5889 | 4424 5048 | 8b44 24f8 | 4c8b 5424 | 684c 8954 | 2460 4c8b | 5424 704c 
  0x0000022773fd2a28: 8954 2468 | 4c89 5c24 | 7048 8944 | 24f8 8b44 | 245c 8944 | 2454 488b 

  0x0000022773fd2a40: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2a40: 4424 f8e8 

  0x0000022773fd2a44: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [56]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::render@212 (line 154)
  0x0000022773fd2a44: b83e 69ff | 8bac 2490 | 0000 00eb | 0a4d 8bc3 | 8bac 2480 | 0000 00c5 | fa11 8c24 | 0801 0000 
  0x0000022773fd2a64: c4c1 797e | dbeb 1e4d | 8bc2 8b6c | 243c eb07 | 4d8b c18b | 6c24 2cc5 | fa11 b424 | 0801 0000 
  0x0000022773fd2a84: c4c1 797e | dbba e4ff | ffff 4c8b | 5424 404c | 8954 2428 | 448b 4c24 | 3844 894c | 2430 c5fa 
  0x0000022773fd2aa4: 1144 2434 | c5fa 116c | 2438 4c8b | 5424 604c | 8954 2440 | 4489 5c24 | 6044 8b5c | 2478 4489 
  0x0000022773fd2ac4: 5c24 6444 | 8b54 247c | 4489 5424 | 784c 8984 | 2480 0000 | 0089 5c24 

  0x0000022773fd2adc: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2adc: 7c66 90e8 

  0x0000022773fd2ae0: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [100]=NarrowOop [104]=Oop [112]=Oop [128]=Oop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@109 (line 146)
  0x0000022773fd2ae0: 1c3e 69ff | 4d8b c2c5 | fa10 9424 | a800 0000 | c5fa 1154 | 242c c5fa | 108c 24a4 | 0000 00c5 
  0x0000022773fd2b00: fa11 4c24 | 28c5 fa11 | 8424 0c01 | 0000 4889 | 4424 2044 | 8b8c 24a0 | 0000 0044 | 898c 2408 
  0x0000022773fd2b20: 0100 008b | ac24 9000 | 0000 eb43 | 4d8b c2c5 | fa10 8c24 | a800 0000 | c5fa 114c | 242c c5fa 
  0x0000022773fd2b40: 1094 24a4 | 0000 00c5 | fa11 5424 | 28c5 fa11 | 8424 0c01 | 0000 4889 | 4424 2044 | 8b94 24a0 
  0x0000022773fd2b60: 0000 0044 | 8994 2408 | 0100 008b | 6c24 3cba | e4ff ffff | 4c89 8424 | 8800 0000 | 4489 9c24 
  0x0000022773fd2b80: 9000 0000 

  0x0000022773fd2b84: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2b84: 6666 90e8 

  0x0000022773fd2b88: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [136]=Oop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@176 (line 153)
  0x0000022773fd2b88: 743d 69ff | 4d8b dac5 | fa10 9424 | a800 0000 | c5fa 1154 | 2430 c5fa | 108c 24a4 | 0000 00c5 
  0x0000022773fd2ba8: fa11 4c24 | 2cc5 fa11 | 4424 2848 | 8944 2420 | 448b 8424 | a000 0000 | 4489 8424 | 0c01 0000 
  0x0000022773fd2bc8: 448b 9424 | 9000 0000 | 4489 9424 | 0801 0000 | eb49 4d8b | dac5 fa10 | 8c24 a800 | 0000 c5fa 
  0x0000022773fd2be8: 114c 2430 | c5fa 1094 | 24a4 0000 | 00c5 fa11 | 5424 2cc5 | fa11 4424 | 2848 8944 | 2420 448b 
  0x0000022773fd2c08: 9424 a000 | 0000 4489 | 9424 0c01 | 0000 448b | 4424 3c44 | 8984 2408 | 0100 0048 | 8bac 2410 
  0x0000022773fd2c28: 0100 00ba | e4ff ffff | 448b 5424 | 3844 8954 | 2434 4c8b | 5424 404c | 8954 2438 | 448b 9424 
  0x0000022773fd2c48: 8800 0000 | 4489 5424 | 404c 899c | 2488 0000 | 0044 898c | 2484 0000 

  0x0000022773fd2c60: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2c60: 0066 90e8 

  0x0000022773fd2c64: ; ImmutableOopMap {rbp=Oop [256]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [136]=Oop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@200 (line 154)
  0x0000022773fd2c64: 983c 69ff | 4c8b d34d | 85d2 0f84 | 1b11 0000 | 4c8b 8424 | 9800 0000 | e960 f0ff | ff4c 8b94 
  0x0000022773fd2c84: 2490 0000 | 0045 8b5a | 1c45 85db | 7427 498b | fa4d 8b57 | 2049 8bcb | 4d85 d20f | 844d 1000 
  0x0000022773fd2ca4: 004d 8b5f | 304b 894c | 13f8 4983 | c2f8 4d89 | 5720 4c8b | d74c 8994 | 2498 0000 | 00e9 c8ef 
  0x0000022773fd2cc4: ffff 4d8b | 5750 4d8b | 5f40 f083 | 4424 c000 | 8039 0074 | 2744 8821 | 4d85 db74 | 0f4b 894c 
  0x0000022773fd2ce4: 1af8 4983 | c3f8 4d89 | 5f40 eb10 | 498b d749 | ba40 4cc7 | 09fb 7f00 | 0041 ffd2 | 4c8b 8424 
  0x0000022773fd2d04: 9800 0000 | 458b 501c | 4585 d20f | 84a7 1000 | 00e9 c7ef | ffff bade | ffff ff48 | 8b6c 2460 
  0x0000022773fd2d24: 48ff 7424 | 4848 8f44 | 2420 c5fa | 1144 2430 | c5fa 114c | 2434 897c | 2438 4889 | 4c24 4044 
  0x0000022773fd2d44: 894c 2448 | 4489 4424 | 4c48 895c 

  0x0000022773fd2d50: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2d50: 2450 90e8 

  0x0000022773fd2d54: ; ImmutableOopMap {rbp=Oop [256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [80]=Oop }
                      ;*invokeinterface getGlyphCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@51 (line 133)
  0x0000022773fd2d54: a83b 69ff | c5fa 1184 | 240c 0100 | 0044 8b94 | 2490 0000 | 0044 8994 | 2408 0100 | 00eb 19c5 
  0x0000022773fd2d74: fa11 ac24 | 0c01 0000 | 448b 9424 | 8000 0000 | 4489 9424 | 0801 0000 | c5fa 1154 | 2420 c4c1 
  0x0000022773fd2d94: 797e daeb | 7b48 8944 | 24f8 8b84 | 24d4 0000 | 0089 4424 | 2048 8b44 | 24f8 4889 | 4424 f88b 
  0x0000022773fd2db4: 8424 d000 | 0000 8984 | 240c 0100 | 0048 8b44 | 24f8 448b | 5c24 3c44 | 899c 2408 | 0100 00eb 
  0x0000022773fd2dd4: 3a48 8944 | 24f8 8b84 | 24cc 0000 | 0089 4424 | 2048 8b44 | 24f8 4889 | 4424 f88b | 8424 c800 
  0x0000022773fd2df4: 0000 8984 | 240c 0100 | 0048 8b44 | 24f8 448b | 5c24 2c44 | 899c 2408 | 0100 00c4 | c179 7eda 
  0x0000022773fd2e14: ba45 ffff | ff4c 8b5c | 2440 4c89 | 5c24 2844 | 8b5c 2438 | 4489 5c24 | 244c 8b5c | 2460 4c89 
  0x0000022773fd2e34: 5c24 304c | 8b5c 2448 | 4c89 5c24 | 38c5 fa10 | 4c24 50c5 | fa11 4c24 | 4044 8954 | 2444 448b 
  0x0000022773fd2e54: 5424 5444 | 8954 2448 | 448b 5c24 | 5844 895c | 244c 4c8b | 5424 684c | 8954 2450 | 4c8b 5424 
  0x0000022773fd2e74: 704c 8954 | 2460 448b | 5424 5c44 | 8954 2458 | 448b 5c24 | 7844 895c | 245c 448b | 5424 7c44 
  0x0000022773fd2e94: 8954 2468 | 4c89 4424 

  0x0000022773fd2e9c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2e9c: 7866 90e8 

  0x0000022773fd2ea0: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=NarrowOop [92]=NarrowOop [96]=Oop [120]=Oop [152]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWFontStrike::getQuantizedPosition@23 (line 86)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@6 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd2ea0: 5c3a 69ff | 4c8b f148 | 8bbc 2410 | 0100 00eb | 0848 8bbc | 2410 0100 | 00ba 76ff | ffff 488b 
  0x0000022773fd2ec0: eb48 ff74 | 2448 488f | 8424 1001 | 0000 c5fa | 1144 2420 | c5fa 114c | 2424 8b4c | 2454 894c 
  0x0000022773fd2ee0: 2428 4c89 | 7424 3048 | 8944 2438 | 4889 7c24 | 4044 894c | 2448 4489 | 4424 4c44 | 895c 2454 
  0x0000022773fd2f00: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd2f00: 6666 90e8 

  0x0000022773fd2f04: ; ImmutableOopMap {rbp=Oop [256]=Oop [272]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [96]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::render@77 (line 137)
  0x0000022773fd2f04: f839 69ff | c5fa 1184 | 240c 0100 | 0044 8b9c | 2490 0000 | 0044 899c | 2408 0100 | 00eb 19c5 
  0x0000022773fd2f24: fa11 ac24 | 0c01 0000 | 448b 9424 | 8000 0000 | 4489 9424 | 0801 0000 | c5fa 1154 | 2420 c4c1 
  0x0000022773fd2f44: 797e dbeb | 7b48 8944 | 24f8 8b84 | 24d4 0000 | 0089 4424 | 2048 8b44 | 24f8 4889 | 4424 f88b 
  0x0000022773fd2f64: 8424 d000 | 0000 8984 | 240c 0100 | 0048 8b44 | 24f8 448b | 5424 3c44 | 8994 2408 | 0100 00eb 
  0x0000022773fd2f84: 3a48 8944 | 24f8 8b84 | 24cc 0000 | 0089 4424 | 2048 8b44 | 24f8 4889 | 4424 f88b | 8424 c800 
  0x0000022773fd2fa4: 0000 8984 | 240c 0100 | 0048 8b44 | 24f8 448b | 5c24 2c44 | 899c 2408 | 0100 00c4 | c179 7edb 
  0x0000022773fd2fc4: ba45 ffff | ff4c 8b54 | 2440 4c89 | 5424 2844 | 8b54 2438 | 4489 5424 | 244c 8b54 | 2460 4c89 
  0x0000022773fd2fe4: 5424 304c | 8b54 2448 | 4c89 5424 | 38c5 fa10 | 4c24 50c5 | fa11 4c24 | 4044 895c | 2444 448b 
  0x0000022773fd3004: 5424 5444 | 8954 2448 | 448b 5c24 | 5844 895c | 244c 4c8b | 5424 684c | 8954 2450 | 4c8b 5424 
  0x0000022773fd3024: 704c 8954 | 2460 448b | 5424 5c44 | 8954 2458 | 448b 5c24 | 7844 895c | 245c 448b | 5424 7c44 
  0x0000022773fd3044: 8954 2468 | 4c89 8424 | 8000 0000 

  0x0000022773fd3050: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3050: 6666 90e8 

  0x0000022773fd3054: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=NarrowOop [92]=NarrowOop [96]=Oop [128]=Oop [152]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.PrismFontStrike::getQuantizedPosition@4 (line 144)
                      ; - com.sun.javafx.font.directwrite.DWFontStrike::getQuantizedPosition@147 (line 111)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@6 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3054: a838 69ff | ba45 ffff | ff4c 8944 | 2428 4c89 | 4c24 30c5 | fa11 4c24 | 3c48 894c 

  0x0000022773fd3070: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3070: 2448 90e8 

  0x0000022773fd3074: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [40]=Oop [48]=Oop [72]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::render@4 (line 123)
  0x0000022773fd3074: 8838 69ff | c5fa 1084 | 248c 0000 | 00c5 fa11 | 4424 28c5 | fa10 8c24 | 8800 0000 | c5fa 118c 
  0x0000022773fd3094: 240c 0100 | 0048 8944 | 2420 448b | 5424 3c44 | 8994 2408 | 0100 008b | 6c24 2ce9 | dcf5 ffff 
  0x0000022773fd30b4: 488b bc24 | 1001 0000 | 448b 4c24 | 5c44 8b5c | 247c e9ee | fdff ff48 | 8bbc 2410 | 0100 00e9 
  0x0000022773fd30d4: e1fd ffff | 8bac 2490 | 0000 00eb | 078b ac24 | 8000 0000 | c4c1 797e | db48 8b4c | 2440 448b 
  0x0000022773fd30f4: 4c24 38eb | 118b 6c24 | 3c49 8bcb | eb03 418b | ebc4 c179 | 7edb ba45 | ffff ff48 | 894c 2428 
  0x0000022773fd3114: 4489 4c24 | 2444 894c | 2430 c5fa | 1144 2434 | c5fa 116c | 2438 4c8b | 5424 604c | 8954 2440 
  0x0000022773fd3134: 4489 5c24 | 6044 8b54 | 2478 4489 

  0x0000022773fd3140: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3140: 5424 64e8 

  0x0000022773fd3144: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [100]=NarrowOop [104]=Oop [112]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@75 (line 324)
                      ; - com.sun.prism.impl.GlyphCache::render@109 (line 146)
  0x0000022773fd3144: b837 69ff | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 28c5 | fa10 8c24 | a400 0000 | c5fa 118c 
  0x0000022773fd3164: 240c 0100 | 0048 8944 | 2420 448b | 9424 a000 | 0000 4489 | 9424 0801 | 0000 8bac | 2490 0000 
  0x0000022773fd3184: 00eb 3ac5 | fa10 8424 | a800 0000 | c5fa 1144 | 2428 c5fa | 108c 24a4 | 0000 00c5 | fa11 8c24 
  0x0000022773fd31a4: 0c01 0000 | 4889 4424 | 2044 8b94 | 24a0 0000 | 0044 8994 | 2408 0100 | 008b 6c24 | 3cba 45ff 
  0x0000022773fd31c4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd31c4: ffff 90e8 

  0x0000022773fd31c8: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@75 (line 324)
                      ; - com.sun.prism.impl.GlyphCache::render@176 (line 153)
  0x0000022773fd31c8: 3437 69ff | c5fa 1084 | 24a8 0000 | 00c5 fa11 | 4424 2cc5 | fa10 8c24 | a400 0000 | c5fa 114c 
  0x0000022773fd31e8: 2428 4889 | 4424 2044 | 8b94 24a0 | 0000 0044 | 8994 240c | 0100 0044 | 8b9c 2490 | 0000 0044 
  0x0000022773fd3208: 899c 2408 | 0100 0044 | 8b9c 2488 | 0000 00eb | 40c5 fa10 | 8c24 a800 | 0000 c5fa | 114c 242c 
  0x0000022773fd3228: c5fa 1084 | 24a4 0000 | 00c5 fa11 | 4424 2848 | 8944 2420 | 448b 8424 | a000 0000 | 4489 8424 
  0x0000022773fd3248: 0c01 0000 | 448b 5424 | 3c44 8994 | 2408 0100 | 0048 8bac | 2410 0100 | 00ba 45ff | ffff 4c8b 
  0x0000022773fd3268: 5424 4044 | 8b44 2438 | 4489 4424 | 304c 8954 | 2438 4489 

  0x0000022773fd327c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd327c: 5c24 40e8 

  0x0000022773fd3280: ; ImmutableOopMap {rbp=Oop [256]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.text.TextRun::getPosX@75 (line 324)
                      ; - com.sun.prism.impl.GlyphCache::render@200 (line 154)
  0x0000022773fd3280: 7c36 69ff | c5fa 11ac | 240c 0100 | 00c5 fb11 | 4c24 2044 | 8b54 243c | 4489 9424 | 0801 0000 
  0x0000022773fd32a0: c4c1 797e | db48 8b4c | 2440 c4c1 | 797e d048 | 8bb4 2480 | 0000 00c4 | e1f9 7efb | eb2b c5fa 
  0x0000022773fd32c0: 118c 240c | 0100 00c5 | fb11 6c24 | 2044 8b5c | 242c 4489 | 9c24 0801 | 0000 c4c1 | 797e dbc4 
  0x0000022773fd32e0: c179 7ed0 | c4e1 f97e | fbba 45ff | ffff 4889 | 4c24 2844 | 894c 2430 | 4c8b 5424 | 604c 8954 
  0x0000022773fd3300: 2438 4c8b | 5424 484c | 8954 2440 | c5fa 1044 | 2450 c5fa | 1144 2434 | 4489 5c24 | 4848 8944 
  0x0000022773fd3320: 24f8 8b44 | 2454 8944 | 244c 488b | 4424 f848 | 8944 24f8 | 8b44 2458 | 8944 2450 | 488b 4424 
  0x0000022773fd3340: f84c 8b54 | 2468 4c89 | 5424 6048 | 8944 24f8 | 8b44 245c | 8944 2454 | 488b 4424 | f844 8b5c 
  0x0000022773fd3360: 2478 4489 | 5c24 5844 | 8b54 247c | 4489 5424 | 5c48 8974 | 2470 4889 | 5c24 7844 | 8984 2480 
  0x0000022773fd3380: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3380: 0000 00e8 

  0x0000022773fd3384: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [56]=Oop [64]=Oop [84]=NarrowOop [88]=NarrowOop [96]=Oop [112]=Oop }
                      ;*tableswitch {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::transform@32 (line 666)
                      ; - com.sun.prism.impl.GlyphCache::render@135 (line 147)
  0x0000022773fd3384: 7835 69ff | c5fa 108c | 24b0 0000 | 00c5 fa11 | 8c24 0801 | 0000 8bac | 2490 0000 | 00eb 19c5 
  0x0000022773fd33a4: fa10 8424 | 8400 0000 | c5fa 1184 | 2408 0100 | 008b ac24 | 8000 0000 | c5fa 108c | 24ac 0000 
  0x0000022773fd33c4: 00c5 fa11 | 8c24 0c01 | 0000 eb28 | c5fa 108c | 24d4 0000 | 00c5 fa11 | 8c24 0c01 | 0000 c5fa 
  0x0000022773fd33e4: 1084 24d0 | 0000 00c5 | fa11 8424 | 0801 0000 | 8b6c 243c | 4c8b 8424 | 9800 0000 | baf6 ffff 
  0x0000022773fd3404: ff4c 8b54 | 2440 4c89 | 5424 2044 | 8b5c 2438 | 4489 5c24 | 284c 8b54 | 2460 4c89 | 5424 304c 
  0x0000022773fd3424: 8b54 2448 | 4c89 5424 | 38c5 fa10 | 4424 50c5 | fa11 4424 | 2c44 8b54 | 2454 4489 | 5424 4444 
  0x0000022773fd3444: 8b5c 2458 | 4489 5c24 | 484c 8b54 | 2468 4c89 | 5424 5044 | 8b54 245c | 4489 5424 | 4c4c 8944 
  0x0000022773fd3464: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3464: 2468 90e8 

  0x0000022773fd3468: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokeinterface getQuantizedPosition {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@6 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3468: 9434 69ff | c5fa 11b4 | 24b4 0000 | 00c5 fa11 | 8424 b000 | 0000 c5fa | 11a4 24ac | 0000 00c5 
  0x0000022773fd3488: fa11 9424 | a800 0000 | c5f9 7edd 

  0x0000022773fd3494: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3494: 48ba 681b | e68a 0000 | 0000 4c8d | 8424 e000 

  0x0000022773fd34a4: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022773fd34a4: 0000 90e8 

  0x0000022773fd34a8: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [148]=NarrowOop [152]=Oop [160]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.PrismFontFactory::getFontFactory@-1 (line 177)
                      ; - com.sun.javafx.font.CompositeStrike::getAAMode@0 (line 88)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd34a8: 5489 74ff | c5f9 6edd | c5fa 1094 | 24a8 0000 | 00c5 fa10 | a424 ac00 | 0000 c5fa | 1084 24b0 
  0x0000022773fd34c8: 0000 00c5 | fa10 b424 | b400 0000 | e9b5 ddff | ffc4 c179 | 7ef5 c4c1 | 797e c6c5 | f97e e6c5 
  0x0000022773fd34e8: f97e d5c5 

  0x0000022773fd34ec: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd34ec: f97e db48 | b968 1be6 | 8a00 0000 | 0048 8d94 | 24e0 0000 | 004d 8bc7 | 49ba f017 | 080a fb7f 
  0x0000022773fd350c: 0000 41ff | d2c5 f96e | dbc5 f96e | d5c5 f96e | e6c4 c179 | 6ec6 c4c1 | 796e f5e9 | 27de ffff 
  0x0000022773fd352c: c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b | ac24 8000 
  0x0000022773fd354c: 0000 c5fa | 1194 240c | 0100 0044 | 894c 242c | c5fa 1174 | 2428 4c8b | 9424 a000 | 0000 4c89 
  0x0000022773fd356c: 5424 20c4 | c179 7edb | eb6f c5fa | 108c 24d4 | 0000 00c5 | fa11 8c24 | 0c01 0000 | c5fa 1084 
  0x0000022773fd358c: 24d0 0000 | 00c5 fa11 | 8424 0801 | 0000 8b6c | 243c eb28 | c5fa 108c | 24cc 0000 | 00c5 fa11 
  0x0000022773fd35ac: 8c24 0c01 | 0000 c5fa | 1084 24c8 | 0000 00c5 | fa11 8424 | 0801 0000 | 8b6c 242c | 4489 4c24 
  0x0000022773fd35cc: 2cc5 fa11 | 6c24 284c | 8b94 2488 | 0000 004c | 8954 2420 | c4c1 797e | dbba deff | ffff 4c8b 
  0x0000022773fd35ec: 5424 404c | 8954 2430 | 4c8b 5424 | 604c 8954 | 2440 c5fa | 104c 2450 | c5fa 114c | 243c 4489 
  0x0000022773fd360c: 5c24 504c | 8b54 2468 | 4c89 5424 | 604c 8b54 | 2470 4c89 | 5424 6844 | 8b54 2478 | 4489 5424 
  0x0000022773fd362c: 7044 8b5c | 247c 4489 

  0x0000022773fd3634: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3634: 5c24 74e8 

  0x0000022773fd3638: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=NarrowOop [148]=NarrowOop [152]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3638: c432 69ff | c5fa 11ac | 2490 0000 | 00c5 fa11 | b424 8c00 | 0000 c5fa | 11a4 2488 | 0000 00c5 
  0x0000022773fd3658: fa11 9424 | 8400 0000 | c5f9 7edd 

  0x0000022773fd3664: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3664: 48ba 681b | e68a 0000 | 0000 4c8d | 8424 e000 

  0x0000022773fd3674: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022773fd3674: 0000 90e8 

  0x0000022773fd3678: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [148]=NarrowOop [152]=Oop [160]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.PrismFontFactory::getFontFactory@-1 (line 177)
                      ; - com.sun.javafx.font.CompositeStrike::getAAMode@0 (line 88)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3678: 8487 74ff | c5f9 6edd | c5fa 1094 | 2484 0000 | 00c5 fa10 | a424 8800 | 0000 c5fa | 10b4 248c 
  0x0000022773fd3698: 0000 00c5 | fa10 ac24 | 9000 0000 | e9b9 deff | ffc4 c179 | 7eed c4c1 | 797e f6c5 | f97e e6c5 
  0x0000022773fd36b8: f97e d5c5 

  0x0000022773fd36bc: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd36bc: f97e db48 | b968 1be6 | 8a00 0000 | 0048 8d94 | 24e0 0000 | 004d 8bc7 | 49ba f017 | 080a fb7f 
  0x0000022773fd36dc: 0000 41ff | d2c5 f96e | dbc5 f96e | d5c5 f96e | e6c4 c179 | 6ef6 c4c1 | 796e ede9 | 2bdf ffff 
  0x0000022773fd36fc: 498b d749 | ba60 4cc7 | 09fb 7f00 | 0041 ffd2 | e9cd dcff | ffc5 fa11 | ac24 a400 | 0000 c5fb 
  0x0000022773fd371c: 11bc 24a8 | 0000 00c5 | fa11 a424 | a000 0000 | c5fa 1194 | 2490 0000 | 00c5 f97e 

  0x0000022773fd3738: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3738: dd48 ba68 | 1be6 8a00 | 0000 004c | 8d84 24e0 

  0x0000022773fd3748: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022773fd3748: 0000 00e8 

  0x0000022773fd374c: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.PrismFontFactory::getFontFactory@-1 (line 177)
                      ; - com.sun.javafx.font.CompositeStrike::getAAMode@0 (line 88)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd374c: b086 74ff | c5f9 6edd | c5fa 1094 | 2490 0000 | 00c5 fa10 | a424 a000 | 0000 c5fb | 10bc 24a8 
  0x0000022773fd376c: 0000 00c5 | fa10 ac24 | a400 0000 | e9bd e0ff | ffc4 c179 | 7eee c4c1 | f97e fdc5 | f97e e6c5 
  0x0000022773fd378c: f97e d5c5 

  0x0000022773fd3790: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3790: f97e db48 | b968 1be6 | 8a00 0000 | 0048 8d94 | 24e0 0000 | 004d 8bc7 | 49ba f017 | 080a fb7f 
  0x0000022773fd37b0: 0000 41ff | d2c5 f96e | dbc5 f96e | d5c5 f96e | e6c4 c1f9 | 6efd c4c1 | 796e eee9 | 2fe1 ffff 
  0x0000022773fd37d0: c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b | ac24 8000 
  0x0000022773fd37f0: 0000 c5fa | 1194 240c | 0100 00c5 | fa11 7424 | 284c 8b94 | 24a0 0000 | 004c 8954 | 2420 c4c1 
  0x0000022773fd3810: 797e da44 | 8bc7 eb6d | c5fa 1084 | 24d4 0000 | 00c5 fa11 | 8424 0c01 | 0000 c5fa | 108c 24d0 
  0x0000022773fd3830: 0000 00c5 | fa11 8c24 | 0801 0000 | 8b6c 243c | 458b c2eb | 28c5 fa10 | 8424 cc00 | 0000 c5fa 
  0x0000022773fd3850: 1184 240c | 0100 00c5 | fa10 8c24 | c800 0000 | c5fa 118c | 2408 0100 | 008b 6c24 | 2cc5 fa11 
  0x0000022773fd3870: 6c24 284c | 8b94 2488 | 0000 004c | 8954 2420 | c4c1 797e | daba 45ff | ffff 4c8b | 5c24 404c 
  0x0000022773fd3890: 895c 2430 | 448b 5c24 | 3844 895c | 242c 4c8b | 5c24 604c | 895c 2438 | 4c8b 5c24 | 484c 895c 
  0x0000022773fd38b0: 2440 4889 | 4424 f88b | 4424 5089 | 4424 4848 | 8b44 24f8 | 4489 5424 | 4c48 8944 | 24f8 8b44 
  0x0000022773fd38d0: 2454 8944 | 2450 488b | 4424 f848 | 8944 24f8 | 8b44 2458 | 8944 2454 | 488b 4424 | f84c 8b54 
  0x0000022773fd38f0: 2468 4c89 | 5424 604c | 8b54 2470 | 4c89 5424 | 6848 8944 | 24f8 8b44 | 245c 8944 | 2458 488b 
  0x0000022773fd3910: 4424 f844 | 8b5c 2478 | 4489 5c24 | 5c44 8b54 | 247c 4489 | 5424 704c | 8b94 2498 | 0000 004c 
  0x0000022773fd3930: 8994 2480 | 0000 004c | 8994 2488 | 0000 0044 | 8b9c 2494 | 0000 0044 | 895c 2474 | 4489 8424 
  0x0000022773fd3950: 9800 0000 

  0x0000022773fd3954: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3954: 6666 90e8 

  0x0000022773fd3958: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [88]=NarrowOop [92]=NarrowOop [96]=Oop [104]=Oop [116]=NarrowOop [128]=Oop [136]=Oop [152]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.PrismFontFactory::getFontFactory@3 (line 177)
                      ; - com.sun.javafx.font.CompositeStrike::getAAMode@0 (line 88)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3958: a42f 69ff | c5fa 1184 | 240c 0100 | 0044 8b9c | 2490 0000 | 0044 899c | 2408 0100 | 00eb 19c5 
  0x0000022773fd3978: fa11 ac24 | 0c01 0000 | 448b 9c24 | 8000 0000 | 4489 9c24 | 0801 0000 | c5fa 1154 | 2420 c5fa 
  0x0000022773fd3998: 1174 2424 | 4c8b 9424 | a000 0000 | 4c89 5424 | 28c4 c179 | 7edb eb76 | c5fa 108c | 24d4 0000 
  0x0000022773fd39b8: 00c5 fa11 | 4c24 20c5 | fa10 8424 | d000 0000 | c5fa 1184 | 240c 0100 | 0044 8b5c | 243c 4489 
  0x0000022773fd39d8: 9c24 0801 | 0000 eb2e | c5fa 1084 | 24cc 0000 | 00c5 fa11 | 4424 20c5 | fa10 8c24 | c800 0000 
  0x0000022773fd39f8: c5fa 118c | 240c 0100 | 0044 8b54 | 242c 4489 | 9424 0801 | 0000 c5fa | 116c 2424 | 4c8b 9424 
  0x0000022773fd3a18: 8800 0000 | 4c89 5424 | 28c4 c179 | 7edb ba45 | ffff ff4c | 8b54 2440 | 4c89 5424 | 304c 8b54 
  0x0000022773fd3a38: 2460 4c89 | 5424 40c5 | fa10 4c24 | 50c5 fa11 | 4c24 3c44 | 895c 2450 | 4c8b 5424 | 684c 8954 
  0x0000022773fd3a58: 2460 4c8b | 5424 704c | 8954 2468 | 448b 5c24 | 7844 895c | 2470 448b | 5424 7c44 | 8954 2474 
  0x0000022773fd3a78: 448b 9c24 | 9400 0000 | 4489 9c24 | 9000 0000 | 89bc 2494 

  0x0000022773fd3a8c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3a8c: 0000 00e8 

  0x0000022773fd3a90: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=NarrowOop [144]=NarrowOop [148]=NarrowOop [152]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.CompositeStrike::getAAMode@8 (line 89)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3a90: 6c2e 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd3ab0: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0048 | 8954 2420 | 488b 7c24 | 60c4 c179 | 7edb 488b 
  0x0000022773fd3ad0: 4c24 4044 | 8b4c 2438 | 4c8b 8424 | 9800 0000 | eb73 c5fa | 1084 24d4 | 0000 00c5 | fa11 8424 
  0x0000022773fd3af0: 0c01 0000 | c5fa 108c | 24d0 0000 | 00c5 fa11 | 8c24 0801 | 0000 8b6c | 243c 488b | 7c24 6048 
  0x0000022773fd3b10: 8b4c 2440 | 448b 4c24 | 384c 8b84 | 2498 0000 | 00eb 28c5 | fa10 8c24 | cc00 0000 | c5fa 118c 
  0x0000022773fd3b30: 240c 0100 | 00c5 fa10 | 8424 c800 | 0000 c5fa | 1184 2408 | 0100 008b | 6c24 2c48 | 8954 2420 
  0x0000022773fd3b50: c4c1 797e | dbba c6ff | ffff 4889 | 4c24 2844 | 894c 2430 | 4889 7c24 | 384c 8b54 | 2448 4c89 
  0x0000022773fd3b70: 5424 40c5 | fa10 4c24 | 50c5 fa11 | 4c24 3444 | 895c 2448 | 4889 4424 | f88b 4424 | 5489 4424 
  0x0000022773fd3b90: 4c48 8b44 | 24f8 4889 | 4424 f88b | 4424 5889 | 4424 5048 | 8b44 24f8 | 4c8b 5424 | 684c 8954 
  0x0000022773fd3bb0: 2460 4c8b | 5424 704c | 8954 2468 | 4889 4424 | f88b 4424 | 5c89 4424 | 5448 8b44 | 24f8 448b 
  0x0000022773fd3bd0: 5c24 7844 | 895c 2458 | 448b 5424 | 7c44 8954 | 245c 4c89 

  0x0000022773fd3be4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3be4: 4424 78e8 

  0x0000022773fd3be8: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop [84]=NarrowOop [88]=NarrowOop [96]=Oop [104]=Oop [120]=Oop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3be8: 142d 69ff | 498b d749 | ba60 4cc7 | 09fb 7f00 | 0041 ffd2 | e9b1 daff | ffc5 fa10 | 8c24 cc00 
  0x0000022773fd3c08: 0000 c5fa | 118c 240c | 0100 00c5 | fa10 8424 | c800 0000 | c5fa 1184 | 2408 0100 | 008b 6c24 
  0x0000022773fd3c28: 2ce9 caf7 | ffff c5fa | 116c 2434 | c5fb 11bc | 2480 0000 | 00c5 fa11 | 6424 30c5 | fa11 5424 
  0x0000022773fd3c48: 28c5 f97e 

  0x0000022773fd3c4c: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3c4c: dd48 ba68 | 1be6 8a00 | 0000 004c | 8d84 24e0 

  0x0000022773fd3c5c: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022773fd3c5c: 0000 00e8 

  0x0000022773fd3c60: ; ImmutableOopMap {[256]=Oop [264]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [136]=Oop [148]=NarrowOop [152]=Oop [160]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.PrismFontFactory::getFontFactory@-1 (line 177)
                      ; - com.sun.javafx.font.CompositeStrike::getAAMode@0 (line 88)
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@33 (line 110)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3c60: 9c81 74ff | c5f9 6edd | c5fa 1054 | 2428 c5fa | 1064 2430 | c5fb 10bc | 2480 0000 | 00c5 fa10 
  0x0000022773fd3c80: 6c24 34e9 | aade ffff | c4c1 797e | eec4 e1f9 | 7efd c4c1 | 797e e5c5 | f97e d3c5 

  0x0000022773fd3c9c: ;   {oop(a 'java/lang/Class'{0x000000008ae61b68} = 'com/sun/javafx/font/PrismFontFactory')}
  0x0000022773fd3c9c: f97e de48 | b968 1be6 | 8a00 0000 | 0048 8d94 | 24e0 0000 | 004d 8bc7 | 49ba f017 | 080a fb7f 
  0x0000022773fd3cbc: 0000 41ff | d2c5 f96e | dec5 f96e | d3c4 c179 | 6ee5 c4e1 | f96e fdc4 | c179 6eee | e91a dfff 
  0x0000022773fd3cdc: ff49 8bd7 | 49ba 604c | c709 fb7f | 0000 41ff | d2e9 a0dc | ffff 498b | d749 ba60 | 4cc7 09fb 
  0x0000022773fd3cfc: 7f00 0041 | ffd2 e9af | efff ffc5 | fa10 8424 | b000 0000 | c5fa 1184 | 2408 0100 | 008b ac24 
  0x0000022773fd3d1c: 9000 0000 | eb19 c5fa | 1084 2484 | 0000 00c5 | fa11 8424 | 0801 0000 | 8bac 2480 | 0000 00c5 
  0x0000022773fd3d3c: fa10 8c24 | ac00 0000 | c5fa 118c | 240c 0100 | 004c 8b84 | 2498 0000 | 00e9 a6f6 | ffff c5fa 
  0x0000022773fd3d5c: 108c 24d4 | 0000 00c5 | fa11 8c24 | 0c01 0000 | c5fa 1084 | 24d0 0000 | 00c5 fa11 | 8424 0801 
  0x0000022773fd3d7c: 0000 8b6c | 243c 4c8b | 8424 9800 | 0000 e971 | f6ff ffc5 | fa10 8c24 | cc00 0000 | c5fa 118c 
  0x0000022773fd3d9c: 240c 0100 | 00c5 fa10 | 8424 c800 | 0000 c5fa | 1184 2408 | 0100 008b | 6c24 2ce9 | 2ce0 ffff 
  0x0000022773fd3dbc: c5fa 108c | 24cc 0000 | 00c5 fa11 | 8c24 0c01 | 0000 c5fa | 1084 24c8 | 0000 00c5 | fa11 8424 
  0x0000022773fd3ddc: 0801 0000 | 8b6c 242c | e917 f6ff | ffc4 c179 | 7edb eb05 | c4c1 797e | dbba f6ff | ffff 488b 
  0x0000022773fd3dfc: 6c24 4044 | 8b44 2438 | 4489 8424 | 0c01 0000 | c5fa 1144 | 2428 c5fa | 116c 242c | 4c8b 5424 
  0x0000022773fd3e1c: 604c 8954 | 2430 4c8b | 5424 484c | 8954 2438 | c5fa 104c | 2450 c5fa | 114c 2440 | 4489 5c24 
  0x0000022773fd3e3c: 4444 8b54 | 2454 4489 | 5424 4844 | 8b5c 2458 | 4489 5c24 | 4c4c 8b54 | 2468 4c89 | 5424 5044 
  0x0000022773fd3e5c: 8b54 245c | 4489 5424 | 5889 5c24 

  0x0000022773fd3e68: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3e68: 6c66 90e8 

  0x0000022773fd3e6c: ; ImmutableOopMap {rbp=Oop [256]=Oop [272]=Oop [48]=Oop [56]=Oop [80]=Oop [88]=NarrowOop [112]=Oop [120]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getGlyphCode@34 (line 305)
                      ; - com.sun.prism.impl.GlyphCache::render@83 (line 138)
  0x0000022773fd3e6c: 902a 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd3e8c: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0048 | 8b7c 2460 | c4c1 797e | da48 8b4c | 2440 448b 
  0x0000022773fd3eac: 4c24 38eb | 64c5 fa10 | 8424 d400 | 0000 c5fa | 1184 240c | 0100 00c5 | fa10 8c24 | d000 0000 
  0x0000022773fd3ecc: c5fa 118c | 2408 0100 | 008b 6c24 | 3c49 8bfa | 488b 4c24 | 4044 8b4c | 2438 eb28 | c5fa 1084 
  0x0000022773fd3eec: 24cc 0000 | 00c5 fa11 | 8424 0c01 | 0000 c5fa | 108c 24c8 | 0000 00c5 | fa11 8c24 | 0801 0000 
  0x0000022773fd3f0c: 8b6c 242c | c4c1 797e | daba f6ff | ffff 4889 | 4c24 2044 | 894c 2428 | 4889 7c24 | 304c 8b5c 
  0x0000022773fd3f2c: 2448 4c89 | 5c24 38c5 | fa10 4424 | 50c5 fa11 | 4424 2c44 | 8954 2440 | 448b 5c24 | 5444 895c 
  0x0000022773fd3f4c: 2444 448b | 5424 5844 | 8954 2448 | 448b 5c24 | 5c44 895c 

  0x0000022773fd3f60: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3f60: 244c 90e8 

  0x0000022773fd3f64: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [76]=NarrowOop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokeinterface getQuantizedPosition {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd3f64: 9829 69ff | 8bac 2490 | 0000 00eb | 078b ac24 | 8000 0000 | c5fa 118c | 2408 0100 | 00c4 c179 
  0x0000022773fd3f84: 7edb eb18 | 8b6c 243c | eb04 8b6c | 242c c5fa | 11b4 2408 | 0100 00c4 | c179 7edb | baf6 ffff 
  0x0000022773fd3fa4: ff4c 8b54 | 2440 448b | 4424 384c | 8954 2428 | 4489 4424 | 30c5 fa11 | 4424 34c5 | fa11 6c24 
  0x0000022773fd3fc4: 384c 8b54 | 2460 4c89 | 5424 4044 | 895c 2460 | 448b 5424 | 7844 8954 | 2464 448b | 5c24 7c44 
  0x0000022773fd3fe4: 895c 2478 | 895c 247c 

  0x0000022773fd3fec: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd3fec: 6666 90e8 

  0x0000022773fd3ff0: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [100]=NarrowOop [104]=Oop [112]=Oop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@109 (line 146)
  0x0000022773fd3ff0: 0c29 69ff | c5fa 108c | 24a8 0000 | 00c5 fa11 | 4c24 2cc5 | fa10 9424 | a400 0000 | c5fa 1154 
  0x0000022773fd4010: 2428 c5fa | 1184 240c | 0100 0048 | 8944 2420 | 448b 9424 | a000 0000 | 4489 9424 | 0801 0000 
  0x0000022773fd4030: 8bac 2490 | 0000 00eb | 40c5 fa10 | 9424 a800 | 0000 c5fa | 1154 242c | c5fa 108c | 24a4 0000 
  0x0000022773fd4050: 00c5 fa11 | 4c24 28c5 | fa11 8424 | 0c01 0000 | 4889 4424 | 2044 8b84 | 24a0 0000 | 0044 8984 
  0x0000022773fd4070: 2408 0100 | 008b 6c24 | 3cba f6ff | ffff 4489 | 9c24 8800 

  0x0000022773fd4084: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd4084: 0000 90e8 

  0x0000022773fd4088: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [64]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@176 (line 153)
  0x0000022773fd4088: 7428 69ff | c5fa 1094 | 24a8 0000 | 00c5 fa11 | 5424 30c5 | fa10 8c24 | a400 0000 | c5fa 114c 
  0x0000022773fd40a8: 242c c5fa | 1144 2428 | 4889 4424 | 2044 8b9c | 24a0 0000 | 0044 899c | 240c 0100 | 0044 8b94 
  0x0000022773fd40c8: 2490 0000 | 0044 8994 | 2408 0100 | 00eb 46c5 | fa10 8c24 | a800 0000 | c5fa 114c | 2430 c5fa 
  0x0000022773fd40e8: 1094 24a4 | 0000 00c5 | fa11 5424 | 2cc5 fa11 | 4424 2848 | 8944 2420 | 448b 9424 | a000 0000 
  0x0000022773fd4108: 4489 9424 | 0c01 0000 | 448b 5c24 | 3c44 899c | 2408 0100 | 0048 8bac | 2410 0100 | 00ba f6ff 
  0x0000022773fd4128: ffff 4c8b | 5424 4044 | 8b5c 2438 | 4489 5c24 | 344c 8954 | 2438 4489 | 8c24 8400 

  0x0000022773fd4144: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd4144: 0000 90e8 

  0x0000022773fd4148: ; ImmutableOopMap {rbp=Oop [256]=Oop [32]=Oop [56]=Oop [72]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop }
                      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.text.TextRun::getPosX@65 (line 322)
                      ; - com.sun.prism.impl.GlyphCache::render@200 (line 154)
  0x0000022773fd4148: b427 69ff | baf6 ffff | ff48 8b6c | 2460 4c89 | 4424 204c | 8954 2428 | c5fa 114c | 2434 4889 
  0x0000022773fd4168: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd4168: 4c24 40e8 

  0x0000022773fd416c: ; ImmutableOopMap {rbp=Oop [256]=Oop [264]=Oop [272]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*invokevirtual getBackingStore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getBackingStore@4 (line 226)
                      ; - com.sun.prism.impl.GlyphCache::render@39 (line 130)
  0x0000022773fd416c: 9027 69ff | baf6 ffff | ff48 8b6c | 2460 4c89 | 5424 20c5 | fa11 4c24 | 2c48 894c | 2438 4489 
  0x0000022773fd418c: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd418c: 4c24 40e8 

  0x0000022773fd4190: ; ImmutableOopMap {rbp=Oop [256]=Oop [264]=Oop [272]=Oop [32]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokevirtual getVertexBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@45 (line 131)
  0x0000022773fd4190: 6c27 69ff | baf6 ffff | ff48 8b6c | 2460 c5fa | 114c 242c | 4889 4c24 | 3844 894c | 2440 4489 
  0x0000022773fd41b0: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd41b0: 4424 44e8 

  0x0000022773fd41b4: ; ImmutableOopMap {rbp=Oop [256]=Oop [264]=Oop [272]=Oop [56]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop }
                      ;*invokeinterface getGlyphCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::render@51 (line 133)
  0x0000022773fd41b4: 4827 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd41d4: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0048 | 8b7c 2460 | c4c1 797e | da48 8b4c | 2440 448b 
  0x0000022773fd41f4: 4c24 384c | 8b84 2498 | 0000 00eb | 6ec5 fa10 | 8424 d400 | 0000 c5fa | 1184 240c | 0100 00c5 
  0x0000022773fd4214: fa10 8c24 | d000 0000 | c5fa 118c | 2408 0100 | 008b 6c24 | 3c48 8b7c | 2460 488b | 4c24 4044 
  0x0000022773fd4234: 8b4c 2438 | 4c8b 8424 | 9800 0000 | eb28 c5fa | 1084 24cc | 0000 00c5 | fa11 8424 | 0c01 0000 
  0x0000022773fd4254: c5fa 108c | 24c8 0000 | 00c5 fa11 | 8c24 0801 | 0000 8b6c | 242c c4c1 | 797e daba | f6ff ffff 
  0x0000022773fd4274: 4889 4c24 | 2044 894c | 2428 4889 | 7c24 304c | 8b5c 2448 | 4c89 5c24 | 38c5 fa10 | 4424 50c5 
  0x0000022773fd4294: fa11 4424 | 2c44 8954 | 2440 448b | 5424 5444 | 8954 2444 | 448b 5c24 | 5844 895c | 2448 4c8b 
  0x0000022773fd42b4: 5424 684c | 8954 2450 | 4c8b 5424 | 704c 8954 | 2460 448b | 5424 5c44 | 8954 244c | 4c89 4424 
  0x0000022773fd42d4: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd42d4: 7066 90e8 

  0x0000022773fd42d8: ; ImmutableOopMap {[256]=Oop [272]=Oop [32]=Oop [48]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [112]=Oop [120]=NarrowOop }
                      ;*invokeinterface getSlotResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@16 (line 108)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd42d8: 2426 69ff | c5fa 1184 | 2408 0100 | 008b ac24 | 9000 0000 | eb10 c5fa | 11ac 2408 | 0100 008b 
  0x0000022773fd42f8: ac24 8000 | 0000 c5fa | 1194 240c | 0100 0044 | 894c 2424 | c5fa 1174 | 2420 c4c1 | 797e daeb 
  0x0000022773fd4318: 62c5 fa10 | 8c24 d400 | 0000 c5fa | 118c 240c | 0100 00c5 | fa10 8424 | d000 0000 | c5fa 1184 
  0x0000022773fd4338: 2408 0100 | 008b 6c24 | 3ceb 28c5 | fa10 8424 | cc00 0000 | c5fa 1184 | 240c 0100 | 00c5 fa10 
  0x0000022773fd4358: 8c24 c800 | 0000 c5fa | 118c 2408 | 0100 008b | 6c24 2c44 | 894c 2424 | c5fa 116c | 2420 c4c1 
  0x0000022773fd4378: 797e daba | f6ff ffff | 4c8b 5c24 | 404c 895c | 2428 448b | 5c24 3844 | 895c 2430 | 4c8b 5c24 
  0x0000022773fd4398: 604c 895c | 2438 4c8b | 5c24 484c | 895c 2440 | c5fa 104c | 2450 c5fa | 114c 2434 | 4489 5424 
  0x0000022773fd43b8: 4848 8944 | 24f8 8b44 | 2454 8944 | 244c 488b | 4424 f848 | 8944 24f8 | 8b44 2458 | 8944 2450 
  0x0000022773fd43d8: 488b 4424 | f84c 8b54 | 2468 4c89 | 5424 604c | 8b54 2470 | 4c89 5424 | 6848 8944 | 24f8 8b44 
  0x0000022773fd43f8: 245c 8944 | 2454 488b | 4424 f844 | 8b54 2478 | 4489 5424 | 5844 8b5c | 247c 4489 

  0x0000022773fd4414: ;   {runtime_call UncommonTrapBlob}
  0x0000022773fd4414: 5c24 5ce8 

  0x0000022773fd4418: ; ImmutableOopMap {[256]=Oop [272]=Oop [40]=Oop [56]=Oop [64]=Oop [84]=NarrowOop [88]=NarrowOop [96]=Oop [104]=Oop [148]=NarrowOop [152]=Oop }
                      ;*invokeinterface getStrike {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.CompositeStrike::getStrikeSlot@36 (line 109)
                      ; - com.sun.javafx.font.CompositeStrike::getQuantizedPosition@2 (line 192)
                      ; - com.sun.prism.impl.GlyphCache::render@145 (line 148)
  0x0000022773fd4418: e424 69ff | eb0c eb0a | eb08 eb06 | eb04 eb02 | eb00 488b | d0eb 14eb | 0feb 04eb | 02eb 0048 
  0x0000022773fd4438: 8bd0 eb07 | eb02 eb00 | 488b d048 | 81c4 f000 

  0x0000022773fd4448: ;   {runtime_call _rethrow_Java}
  0x0000022773fd4448: 0000 5de9 | 30de 74ff 

  0x0000022773fd4450: ;   {internal_word}
  0x0000022773fd4450: 49ba ca02 | fd73 2702 | 0000 4d89 | 9768 0300 

  0x0000022773fd4460: ;   {runtime_call SafepointBlob}
  0x0000022773fd4460: 00e9 9a35 | 69ff f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000022773fd4480: ;   {no_reloc}
  0x0000022773fd4480: 48bb 0000 | 0000 0000 

  0x0000022773fd4488: ;   {runtime_call}
  0x0000022773fd4488: 0000 e9fb 

  0x0000022773fd448c: ;   {static_stub}
  0x0000022773fd448c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773fd4498: ;   {runtime_call}
  0x0000022773fd4498: 00e9 fbff 

  0x0000022773fd449c: ;   {static_stub}
  0x0000022773fd449c: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022773fd44a8: ;   {runtime_call}
  0x0000022773fd44a8: e9fb ffff 

  0x0000022773fd44ac: ;   {static_stub}
  0x0000022773fd44ac: ff48 bb00 | 0000 0000 

  0x0000022773fd44b4: ;   {runtime_call}
  0x0000022773fd44b4: 0000 00e9 | fbff ffff 

  0x0000022773fd44bc: ;   {static_stub}
  0x0000022773fd44bc: 48bb 0000 | 0000 0000 

  0x0000022773fd44c4: ;   {runtime_call}
  0x0000022773fd44c4: 0000 e9fb 

  0x0000022773fd44c8: ;   {static_stub}
  0x0000022773fd44c8: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773fd44d4: ;   {runtime_call}
  0x0000022773fd44d4: 00e9 fbff 

  0x0000022773fd44d8: ;   {static_stub}
  0x0000022773fd44d8: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022773fd44e4: ;   {runtime_call}
  0x0000022773fd44e4: e9fb ffff 

  0x0000022773fd44e8: ;   {static_stub}
  0x0000022773fd44e8: ff48 bb00 | 0000 0000 

  0x0000022773fd44f0: ;   {runtime_call}
  0x0000022773fd44f0: 0000 00e9 | fbff ffff 

  0x0000022773fd44f8: ;   {static_stub}
  0x0000022773fd44f8: 48bb 0000 | 0000 0000 

  0x0000022773fd4500: ;   {runtime_call}
  0x0000022773fd4500: 0000 e9fb 

  0x0000022773fd4504: ;   {static_stub}
  0x0000022773fd4504: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773fd4510: ;   {runtime_call}
  0x0000022773fd4510: 00e9 fbff 

  0x0000022773fd4514: ;   {static_stub}
  0x0000022773fd4514: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022773fd4520: ;   {runtime_call}
  0x0000022773fd4520: e9fb ffff 

  0x0000022773fd4524: ;   {static_stub}
  0x0000022773fd4524: ff48 bb00 | 0000 0000 

  0x0000022773fd452c: ;   {runtime_call}
  0x0000022773fd452c: 0000 00e9 | fbff ffff 

  0x0000022773fd4534: ;   {static_stub}
  0x0000022773fd4534: 48bb 0000 | 0000 0000 

  0x0000022773fd453c: ;   {runtime_call}
  0x0000022773fd453c: 0000 e9fb 

  0x0000022773fd4540: ;   {static_stub}
  0x0000022773fd4540: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022773fd454c: ;   {runtime_call}
  0x0000022773fd454c: 00e9 fbff 

  0x0000022773fd4550: ;   {static_stub}
  0x0000022773fd4550: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022773fd455c: ;   {runtime_call}
  0x0000022773fd455c: e9fb ffff 

  0x0000022773fd4560: ;   {static_stub}
  0x0000022773fd4560: ff48 bb00 | 0000 0000 

  0x0000022773fd4568: ;   {runtime_call}
  0x0000022773fd4568: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x0000022773fd4570: ;   {runtime_call ExceptionBlob}
  0x0000022773fd4570: e90b 366b | ffe8 0000 | 0000 4883 

  0x0000022773fd457c: ;   {runtime_call DeoptimizationBlob}
  0x0000022773fd457c: 2c24 05e9 | 1c27 69ff | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000002274abbbb00, length=27, elements={
0x00000227646b9030, 0x000002277f313340, 0x000002277f313fd0, 0x000002277f328990,
0x000002277f32a770, 0x000002277f32b950, 0x000002277f32c310, 0x000002277f32d000,
0x000002277f32eae0, 0x000002277f334430, 0x000002277f2f71f0, 0x00000227491739a0,
0x00000227491aa3a0, 0x00000227492384c0, 0x0000022749baf0d0, 0x000002274a14d020,
0x000002274a1511d0, 0x000002274a433c40, 0x000002274a7791d0, 0x000002274f7533a0,
0x000002274f754cf0, 0x000002274f755710, 0x0000022750236820, 0x0000022750238800,
0x00000227502372c0, 0x0000022750237d60, 0x000002274f7538b0
}

Java Threads: ( => current thread )
  0x00000227646b9030 JavaThread "main" [_thread_blocked, id=25440, stack(0x000000d13ab00000,0x000000d13ac00000)]
  0x000002277f313340 JavaThread "Reference Handler" daemon [_thread_blocked, id=11672, stack(0x000000d13b200000,0x000000d13b300000)]
  0x000002277f313fd0 JavaThread "Finalizer" daemon [_thread_blocked, id=19776, stack(0x000000d13b300000,0x000000d13b400000)]
  0x000002277f328990 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=25468, stack(0x000000d13b400000,0x000000d13b500000)]
  0x000002277f32a770 JavaThread "Attach Listener" daemon [_thread_blocked, id=17396, stack(0x000000d13b500000,0x000000d13b600000)]
  0x000002277f32b950 JavaThread "Service Thread" daemon [_thread_blocked, id=11888, stack(0x000000d13b600000,0x000000d13b700000)]
  0x000002277f32c310 JavaThread "Monitor Deflation Thread" daemon [_thread_blocked, id=10852, stack(0x000000d13b700000,0x000000d13b800000)]
  0x000002277f32d000 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=17656, stack(0x000000d13b800000,0x000000d13b900000)]
  0x000002277f32eae0 JavaThread "C1 CompilerThread0" daemon [_thread_blocked, id=13628, stack(0x000000d13b900000,0x000000d13ba00000)]
  0x000002277f334430 JavaThread "Sweeper thread" daemon [_thread_blocked, id=4252, stack(0x000000d13ba00000,0x000000d13bb00000)]
  0x000002277f2f71f0 JavaThread "Common-Cleaner" daemon [_thread_blocked, id=11692, stack(0x000000d13bb00000,0x000000d13bc00000)]
  0x00000227491739a0 JavaThread "JDWP Event Helper Thread" daemon [_thread_blocked, id=13160, stack(0x000000d13c000000,0x000000d13c100000)]
  0x00000227491aa3a0 JavaThread "Notification Thread" daemon [_thread_blocked, id=8780, stack(0x000000d13be00000,0x000000d13bf00000)]
  0x00000227492384c0 JavaThread "JavaFX-Launcher" [_thread_blocked, id=14576, stack(0x000000d13c400000,0x000000d13c500000)]
=>0x0000022749baf0d0 JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=20528, stack(0x000000d13c500000,0x000000d13c600000)]
  0x000002274a14d020 JavaThread "InvokeLaterDispatcher" daemon [_thread_blocked, id=7656, stack(0x000000d13c300000,0x000000d13c400000)]
  0x000002274a1511d0 JavaThread "JavaFX Application Thread" [_thread_blocked, id=8136, stack(0x000000d13c800000,0x000000d13c900000)]
  0x000002274a433c40 JavaThread "Thread-2" daemon [_thread_in_native, id=19084, stack(0x000000d13de00000,0x000000d13df00000)]
  0x000002274a7791d0 JavaThread "Prism Font Disposer" daemon [_thread_blocked, id=10124, stack(0x000000d13e300000,0x000000d13e400000)]
  0x000002274f7533a0 JavaThread "Cleaner-0" daemon [_thread_blocked, id=18652, stack(0x000000d13e800000,0x000000d13e900000)]
  0x000002274f754cf0 JavaThread "mysql-cj-abandoned-connection-cleanup" daemon [_thread_blocked, id=23576, stack(0x000000d13ec00000,0x000000d13ed00000)]
  0x000002274f755710 JavaThread "HikariPool-1 housekeeper" daemon [_thread_blocked, id=24316, stack(0x000000d13ee00000,0x000000d13ef00000)]
  0x0000022750236820 JavaThread "C1 CompilerThread1" daemon [_thread_blocked, id=17048, stack(0x000000d13aa00000,0x000000d13ab00000)]
  0x0000022750238800 JavaThread "C2 CompilerThread1" daemon [_thread_blocked, id=24632, stack(0x000000d13bf00000,0x000000d13c000000)]
  0x00000227502372c0 JavaThread "C1 CompilerThread2" daemon [_thread_blocked, id=7012, stack(0x000000d13c100000,0x000000d13c200000)]
  0x0000022750237d60 JavaThread "C2 CompilerThread2" daemon [_thread_blocked, id=15152, stack(0x000000d13c600000,0x000000d13c700000)]
  0x000002274f7538b0 JavaThread "SIGINT handler" daemon [_thread_blocked, id=9852, stack(0x000000d13e000000,0x000000d13e100000)]

Other Threads:
  0x000002277f308800 VMThread "VM Thread" [stack: 0x000000d13b100000,0x000000d13b200000] [id=21972]
  0x0000022749184c10 WatcherThread [stack: 0x000000d13c200000,0x000000d13c300000] [id=13540]
  0x0000022764712950 GCTaskThread "GC Thread#0" [stack: 0x000000d13ac00000,0x000000d13ad00000] [id=8952]
  0x000002274a31ec60 GCTaskThread "GC Thread#1" [stack: 0x000000d13d300000,0x000000d13d400000] [id=3684]
  0x000002274a3023e0 GCTaskThread "GC Thread#2" [stack: 0x000000d13d400000,0x000000d13d500000] [id=10068]
  0x000002274a3026a0 GCTaskThread "GC Thread#3" [stack: 0x000000d13d500000,0x000000d13d600000] [id=22508]
  0x000002274a302960 GCTaskThread "GC Thread#4" [stack: 0x000000d13d600000,0x000000d13d700000] [id=7472]
  0x000002274a303430 GCTaskThread "GC Thread#5" [stack: 0x000000d13d700000,0x000000d13d800000] [id=24696]
  0x000002274a331ee0 GCTaskThread "GC Thread#6" [stack: 0x000000d13d800000,0x000000d13d900000] [id=23316]
  0x000002274a3329b0 GCTaskThread "GC Thread#7" [stack: 0x000000d13d900000,0x000000d13da00000] [id=21292]
  0x000002274a333080 GCTaskThread "GC Thread#8" [stack: 0x000000d13da00000,0x000000d13db00000] [id=15856]
  0x000002274a333340 GCTaskThread "GC Thread#9" [stack: 0x000000d13db00000,0x000000d13dc00000] [id=10688]
  0x000002274a333600 GCTaskThread "GC Thread#10" [stack: 0x000000d13dc00000,0x000000d13dd00000] [id=25336]
  0x000002274a333cd0 GCTaskThread "GC Thread#11" [stack: 0x000000d13dd00000,0x000000d13de00000] [id=19308]
  0x000002274b0be980 GCTaskThread "GC Thread#12" [stack: 0x000000d13e400000,0x000000d13e500000] [id=2804]
  0x0000022764722420 ConcurrentGCThread "G1 Main Marker" [stack: 0x000000d13ad00000,0x000000d13ae00000] [id=21792]
  0x0000022764722e40 ConcurrentGCThread "G1 Conc#0" [stack: 0x000000d13ae00000,0x000000d13af00000] [id=15212]
  0x000002274aa45a50 ConcurrentGCThread "G1 Conc#1" [stack: 0x000000d13bc00000,0x000000d13bd00000] [id=2128]
  0x000002274aa45d10 ConcurrentGCThread "G1 Conc#2" [stack: 0x000000d13bd00000,0x000000d13be00000] [id=8160]
  0x000002276476da00 ConcurrentGCThread "G1 Refine#0" [stack: 0x000000d13af00000,0x000000d13b000000] [id=23624]
  0x000002276476e430 ConcurrentGCThread "G1 Service" [stack: 0x000000d13b000000,0x000000d13b100000] [id=20964]

Threads with active compile tasks:

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x000000008a400000, size: 1884 MB, Compressed Oops mode: 32-bit

CDS archive(s) mapped at: [0x0000022704000000-0x0000022704ba0000-0x0000022704ba0000), size 12189696, SharedBaseAddress: 0x0000022704000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000022705000000-0x0000022745000000, reserved size: 1073741824
Narrow klass base: 0x0000022704000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CPUs: 16 total, 16 available
 Memory: 7528M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (32-bit)
 Heap Region Size: 1M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 118M
 Heap Max Capacity: 1884M
 Pre-touch: Disabled
 Parallel Workers: 13
 Concurrent Workers: 3
 Concurrent Refinement Workers: 13
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 51200K, used 32914K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 20 young (20480K), 1 survivors (1024K)
 Metaspace       used 29275K, committed 29568K, reserved 1114112K
  class space    used 3745K, committed 3904K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, OA=open archive, CA=closed archive, TAMS=top-at-mark-start (previous, next)
|   0|0x000000008a400000, 0x000000008a500000, 0x000000008a500000|100%| O|  |TAMS 0x000000008a500000, 0x000000008a400000| Untracked 
|   1|0x000000008a500000, 0x000000008a600000, 0x000000008a600000|100%| O|  |TAMS 0x000000008a600000, 0x000000008a500000| Untracked 
|   2|0x000000008a600000, 0x000000008a700000, 0x000000008a700000|100%| O|  |TAMS 0x000000008a700000, 0x000000008a600000| Untracked 
|   3|0x000000008a700000, 0x000000008a800000, 0x000000008a800000|100%| O|  |TAMS 0x000000008a800000, 0x000000008a700000| Untracked 
|   4|0x000000008a800000, 0x000000008a800000, 0x000000008a900000|  0%| F|  |TAMS 0x000000008a800000, 0x000000008a800000| Untracked 
|   5|0x000000008a900000, 0x000000008aa00000, 0x000000008aa00000|100%|HS|  |TAMS 0x000000008aa00000, 0x000000008a900000| Complete 
|   6|0x000000008aa00000, 0x000000008ab00000, 0x000000008ab00000|100%|HC|  |TAMS 0x000000008ab00000, 0x000000008aa00000| Complete 
|   7|0x000000008ab00000, 0x000000008ac00000, 0x000000008ac00000|100%| O|  |TAMS 0x000000008ab00000, 0x000000008ab00000| Untracked 
|   8|0x000000008ac00000, 0x000000008ad00000, 0x000000008ad00000|100%| O|  |TAMS 0x000000008ac00000, 0x000000008ac00000| Untracked 
|   9|0x000000008ad00000, 0x000000008ae00000, 0x000000008ae00000|100%| O|  |TAMS 0x000000008ad00000, 0x000000008ad00000| Untracked 
|  10|0x000000008ae00000, 0x000000008af00000, 0x000000008af00000|100%| O|  |TAMS 0x000000008ae00000, 0x000000008ae00000| Untracked 
|  11|0x000000008af00000, 0x000000008b000000, 0x000000008b000000|100%| O|  |TAMS 0x000000008af00000, 0x000000008af00000| Untracked 
|  12|0x000000008b000000, 0x000000008b100000, 0x000000008b100000|100%| O|  |TAMS 0x000000008b000000, 0x000000008b000000| Untracked 
|  13|0x000000008b100000, 0x000000008b200000, 0x000000008b200000|100%| O|  |TAMS 0x000000008b100000, 0x000000008b100000| Untracked 
|  14|0x000000008b200000, 0x000000008b300000, 0x000000008b300000|100%| O|  |TAMS 0x000000008b200000, 0x000000008b200000| Untracked 
|  15|0x000000008b300000, 0x000000008b3a1200, 0x000000008b400000| 62%| O|  |TAMS 0x000000008b300000, 0x000000008b300000| Untracked 
|  16|0x000000008b400000, 0x000000008b400000, 0x000000008b500000|  0%| F|  |TAMS 0x000000008b400000, 0x000000008b400000| Untracked 
|  17|0x000000008b500000, 0x000000008b500000, 0x000000008b600000|  0%| F|  |TAMS 0x000000008b500000, 0x000000008b500000| Untracked 
|  18|0x000000008b600000, 0x000000008b600000, 0x000000008b700000|  0%| F|  |TAMS 0x000000008b600000, 0x000000008b600000| Untracked 
|  19|0x000000008b700000, 0x000000008b700000, 0x000000008b800000|  0%| F|  |TAMS 0x000000008b700000, 0x000000008b700000| Untracked 
|  20|0x000000008b800000, 0x000000008b800000, 0x000000008b900000|  0%| F|  |TAMS 0x000000008b800000, 0x000000008b800000| Untracked 
|  21|0x000000008b900000, 0x000000008b900000, 0x000000008ba00000|  0%| F|  |TAMS 0x000000008b900000, 0x000000008b900000| Untracked 
|  22|0x000000008ba00000, 0x000000008ba00000, 0x000000008bb00000|  0%| F|  |TAMS 0x000000008ba00000, 0x000000008ba00000| Untracked 
|  23|0x000000008bb00000, 0x000000008bb00000, 0x000000008bc00000|  0%| F|  |TAMS 0x000000008bb00000, 0x000000008bb00000| Untracked 
|  24|0x000000008bc00000, 0x000000008bc00000, 0x000000008bd00000|  0%| F|  |TAMS 0x000000008bc00000, 0x000000008bc00000| Untracked 
|  25|0x000000008bd00000, 0x000000008bd00000, 0x000000008be00000|  0%| F|  |TAMS 0x000000008bd00000, 0x000000008bd00000| Untracked 
|  26|0x000000008be00000, 0x000000008be00000, 0x000000008bf00000|  0%| F|  |TAMS 0x000000008be00000, 0x000000008be00000| Untracked 
|  27|0x000000008bf00000, 0x000000008bf00000, 0x000000008c000000|  0%| F|  |TAMS 0x000000008bf00000, 0x000000008bf00000| Untracked 
|  28|0x000000008c000000, 0x000000008c000000, 0x000000008c100000|  0%| F|  |TAMS 0x000000008c000000, 0x000000008c000000| Untracked 
|  29|0x000000008c100000, 0x000000008c100000, 0x000000008c200000|  0%| F|  |TAMS 0x000000008c100000, 0x000000008c100000| Untracked 
|  30|0x000000008c200000, 0x000000008c21dc50, 0x000000008c300000| 11%| E|  |TAMS 0x000000008c200000, 0x000000008c200000| Complete 
|  31|0x000000008c300000, 0x000000008c400000, 0x000000008c400000|100%| E|CS|TAMS 0x000000008c300000, 0x000000008c300000| Complete 
|  32|0x000000008c400000, 0x000000008c500000, 0x000000008c500000|100%| E|CS|TAMS 0x000000008c400000, 0x000000008c400000| Complete 
|  33|0x000000008c500000, 0x000000008c600000, 0x000000008c600000|100%| E|CS|TAMS 0x000000008c500000, 0x000000008c500000| Complete 
|  34|0x000000008c600000, 0x000000008c700000, 0x000000008c700000|100%| E|CS|TAMS 0x000000008c600000, 0x000000008c600000| Complete 
|  35|0x000000008c700000, 0x000000008c800000, 0x000000008c800000|100%| E|CS|TAMS 0x000000008c700000, 0x000000008c700000| Complete 
|  36|0x000000008c800000, 0x000000008c900000, 0x000000008c900000|100%| E|CS|TAMS 0x000000008c800000, 0x000000008c800000| Complete 
|  37|0x000000008c900000, 0x000000008ca00000, 0x000000008ca00000|100%| E|CS|TAMS 0x000000008c900000, 0x000000008c900000| Complete 
|  38|0x000000008ca00000, 0x000000008cb00000, 0x000000008cb00000|100%| E|CS|TAMS 0x000000008ca00000, 0x000000008ca00000| Complete 
|  39|0x000000008cb00000, 0x000000008cc00000, 0x000000008cc00000|100%| E|  |TAMS 0x000000008cb00000, 0x000000008cb00000| Complete 
|  40|0x000000008cc00000, 0x000000008cd00000, 0x000000008cd00000|100%| E|CS|TAMS 0x000000008cc00000, 0x000000008cc00000| Complete 
|  41|0x000000008cd00000, 0x000000008ce00000, 0x000000008ce00000|100%| E|CS|TAMS 0x000000008cd00000, 0x000000008cd00000| Complete 
|  73|0x000000008ed00000, 0x000000008ee00000, 0x000000008ee00000|100%| E|CS|TAMS 0x000000008ed00000, 0x000000008ed00000| Complete 
|  74|0x000000008ee00000, 0x000000008ef00000, 0x000000008ef00000|100%| E|CS|TAMS 0x000000008ee00000, 0x000000008ee00000| Complete 
|  75|0x000000008ef00000, 0x000000008f000000, 0x000000008f000000|100%| E|CS|TAMS 0x000000008ef00000, 0x000000008ef00000| Complete 
|  76|0x000000008f000000, 0x000000008f100000, 0x000000008f100000|100%| E|CS|TAMS 0x000000008f000000, 0x000000008f000000| Complete 
|  77|0x000000008f100000, 0x000000008f200000, 0x000000008f200000|100%| E|CS|TAMS 0x000000008f100000, 0x000000008f100000| Complete 
|  78|0x000000008f200000, 0x000000008f300000, 0x000000008f300000|100%| E|CS|TAMS 0x000000008f200000, 0x000000008f200000| Complete 
|  79|0x000000008f300000, 0x000000008f383970, 0x000000008f400000| 51%| S|CS|TAMS 0x000000008f300000, 0x000000008f300000| Complete 
| 117|0x0000000091900000, 0x0000000091a00000, 0x0000000091a00000|100%| E|CS|TAMS 0x0000000091900000, 0x0000000091900000| Complete 

Card table byte_map: [0x000002277be20000,0x000002277c1d0000] _byte_map_base: 0x000002277b9ce000

Marking Bits (Prev, Next): (CMBitMap*) 0x0000022764712fb0, (CMBitMap*) 0x0000022764712f70
 Prev Bits: [0x0000022700000000, 0x0000022701d70000)
 Next Bits: [0x000002277c580000, 0x000002277e2f0000)

Polling page: 0x0000022763e70000

Metaspace:

Usage:
  Non-class:     24.93 MB used.
      Class:      3.66 MB used.
       Both:     28.59 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      25.06 MB ( 39%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       3.81 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      28.88 MB (  3%) committed. 

Chunk freelists:
   Non-Class:  6.66 MB
       Class:  12.23 MB
        Both:  18.89 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 35.12 MB
CDS: on
MetaspaceReclaimPolicy: balanced
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - new_chunks_are_fully_committed: 0.
 - uncommit_free_chunks: 1.
 - use_allocation_guard: 0.
 - handle_deallocations: 1.


Internal statistics:

num_allocs_failed_limit: 3.
num_arena_births: 220.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 462.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 3.
num_chunks_taken_from_freelist: 1018.
num_chunk_merges: 3.
num_chunk_splits: 724.
num_chunks_enlarged: 568.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=2554Kb max_used=2554Kb free=116613Kb
 bounds [0x0000022773d60000, 0x0000022773fe0000, 0x000002277b1c0000]
CodeHeap 'profiled nmethods': size=119104Kb used=12307Kb max_used=12307Kb free=106796Kb
 bounds [0x000002276c1c0000, 0x000002276cdd0000, 0x0000022773610000]
CodeHeap 'non-nmethods': size=7488Kb used=2720Kb max_used=3316Kb free=4767Kb
 bounds [0x0000022773610000, 0x00000227739c0000, 0x0000022773d60000]
 total_blobs=6405 nmethods=5493 adapters=820
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 442.718 Thread 0x000002277f32eae0 nmethod 5486 0x000002276cdc2f90 code [0x000002276cdc3140, 0x000002276cdc33b8]
Event: 442.722 Thread 0x0000022750237d60 nmethod 5471 0x0000022773fda990 code [0x0000022773fdab40, 0x0000022773fdb018]
Event: 442.723 Thread 0x0000022750237d60 5442       4       java.lang.ref.Reference::<init> (25 bytes)
Event: 442.723 Thread 0x00000227502372c0 5489       3       com.sun.javafx.font.directwrite.DWRITE_GLYPH_METRICS::<init> (5 bytes)
Event: 442.723 Thread 0x00000227502372c0 nmethod 5489 0x000002276cdc3490 code [0x000002276cdc3620, 0x000002276cdc3778]
Event: 442.724 Thread 0x000002277f32eae0 5490       3       com.sun.javafx.font.directwrite.ID2D1RenderTarget::CreateSolidColorBrush (28 bytes)
Event: 442.724 Thread 0x00000227502372c0 5491       3       com.sun.javafx.font.directwrite.ID2D1RenderTarget::DrawGlyphRun (16 bytes)
Event: 442.724 Thread 0x0000022750238800 nmethod 5433 0x0000022773fdb810 code [0x0000022773fdb9c0, 0x0000022773fdbf88]
Event: 442.725 Thread 0x0000022750238800 5431       4       java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial (21 bytes)
Event: 442.725 Thread 0x0000022750237d60 nmethod 5442 0x0000022773fdc290 code [0x0000022773fdc400, 0x0000022773fdc638]
Event: 442.725 Thread 0x0000022750237d60 5472       4       com.sun.javafx.font.CompositeGlyphMapper::getGlyphCode (42 bytes)
Event: 442.725 Thread 0x0000022750236820 5492       3       com.sun.javafx.font.directwrite.IWICBitmap::Lock (37 bytes)
Event: 442.725 Thread 0x00000227502372c0 nmethod 5491 0x000002276cdc3810 code [0x000002276cdc39c0, 0x000002276cdc3b28]
Event: 442.725 Thread 0x000002277f32eae0 nmethod 5490 0x000002276cdc3c10 code [0x000002276cdc3de0, 0x000002276cdc4128]
Event: 442.725 Thread 0x0000022750236820 nmethod 5492 0x000002276cdc4290 code [0x000002276cdc4460, 0x000002276cdc4808]
Event: 442.726 Thread 0x000002277f32d000 nmethod 5415 0x0000022773fdc690 code [0x0000022773fdc8a0, 0x0000022773fdd0a0]
Event: 442.727 Thread 0x0000022750238800 nmethod 5431 0x0000022773fdd810 code [0x0000022773fdd9a0, 0x0000022773fddba8]
Event: 442.728 Thread 0x0000022750236820 5493       3       com.sun.javafx.font.directwrite.DWFontStrike::getFontFace (13 bytes)
Event: 442.729 Thread 0x0000022750236820 nmethod 5493 0x000002276cdc4990 code [0x000002276cdc4b40, 0x000002276cdc4df8]
Event: 442.733 Thread 0x0000022750237d60 nmethod 5472 0x0000022773fddd90 code [0x0000022773fddf80, 0x0000022773fde5f0]

GC Heap History (10 events):
Event: 1.156 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 120832K, used 22528K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 23 young (23552K), 0 survivors (0K)
 Metaspace       used 4347K, committed 4544K, reserved 1114112K
  class space    used 425K, committed 512K, reserved 1048576K
}
Event: 1.163 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 120832K, used 4650K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 4347K, committed 4544K, reserved 1114112K
  class space    used 425K, committed 512K, reserved 1048576K
}
Event: 2.075 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 120832K, used 33322K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 32 young (32768K), 3 survivors (3072K)
 Metaspace       used 12206K, committed 12480K, reserved 1114112K
  class space    used 1604K, committed 1728K, reserved 1048576K
}
Event: 2.083 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 120832K, used 8240K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 4 survivors (4096K)
 Metaspace       used 12206K, committed 12480K, reserved 1114112K
  class space    used 1604K, committed 1728K, reserved 1048576K
}
Event: 6.746 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 120832K, used 44080K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 38 young (38912K), 4 survivors (4096K)
 Metaspace       used 21263K, committed 21504K, reserved 1114112K
  class space    used 2920K, committed 3008K, reserved 1048576K
}
Event: 6.752 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 120832K, used 12806K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 7 young (7168K), 7 survivors (7168K)
 Metaspace       used 21263K, committed 21504K, reserved 1114112K
  class space    used 2920K, committed 3008K, reserved 1048576K
}
Event: 16.366 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 51200K, used 36358K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 30 young (30720K), 7 survivors (7168K)
 Metaspace       used 27078K, committed 27328K, reserved 1114112K
  class space    used 3527K, committed 3648K, reserved 1048576K
}
Event: 16.372 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 51200K, used 15084K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 27078K, committed 27328K, reserved 1114112K
  class space    used 3527K, committed 3648K, reserved 1048576K
}
Event: 16.524 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 51200K, used 16108K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 3 survivors (3072K)
 Metaspace       used 27445K, committed 27776K, reserved 1114112K
  class space    used 3565K, committed 3712K, reserved 1048576K
}
Event: 16.527 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 51200K, used 15506K [0x000000008a400000, 0x0000000100000000)
  region size 1024K, 1 young (1024K), 1 survivors (1024K)
 Metaspace       used 27445K, committed 27776K, reserved 1114112K
  class space    used 3565K, committed 3712K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.804 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-locale-l1-1-0.dll
Event: 0.808 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-math-l1-1-0.dll
Event: 0.813 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-multibyte-l1-1-0.dll
Event: 0.819 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-private-l1-1-0.dll
Event: 0.823 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-process-l1-1-0.dll
Event: 0.826 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.829 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.833 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-string-l1-1-0.dll
Event: 0.836 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-time-l1-1-0.dll
Event: 0.841 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.857 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\ucrtbase.dll
Event: 0.865 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\vcruntime140.dll
Event: 0.870 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\vcruntime140_1.dll
Event: 0.881 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140.dll
Event: 0.885 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140_1.dll
Event: 0.891 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140_2.dll
Event: 1.001 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\prism_d3d.dll
Event: 1.074 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\glass.dll
Event: 1.399 Loaded shared library C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\javafx_font.dll
Event: 2.136 Loaded shared library C:\Users\fiona\.jdks\corretto-17.0.9\bin\sunmscapi.dll

Deoptimization events (20 events):
Event: 27.896 Thread 0x0000022749baf0d0 DEOPT PACKING pc=0x0000022773fc74b8 sp=0x000000d13c5fa810
Event: 27.896 Thread 0x0000022749baf0d0 DEOPT UNPACKING pc=0x00000227736669a3 sp=0x000000d13c5fa7c0 mode 2
Event: 27.896 Thread 0x0000022749baf0d0 Uncommon trap: trap_request=0xffffffbe fr.pc=0x0000022773fc74b8 relative=0x0000000000003318
Event: 27.896 Thread 0x0000022749baf0d0 Uncommon trap: reason=profile_predicate action=maybe_recompile pc=0x0000022773fc74b8 method=com.sun.prism.impl.GlyphCache.render(Lcom/sun/prism/impl/BaseContext;Lcom/sun/javafx/scene/text/GlyphList;FFIILcom/sun/prism/paint/Color;Lcom/sun/prism/paint/Color
Event: 27.896 Thread 0x0000022749baf0d0 DEOPT PACKING pc=0x0000022773fc74b8 sp=0x000000d13c5f9ef0
Event: 27.896 Thread 0x0000022749baf0d0 DEOPT UNPACKING pc=0x00000227736669a3 sp=0x000000d13c5f9ea0 mode 2
Event: 442.692 Thread 0x000002274a1511d0 Uncommon trap: trap_request=0xffffffbe fr.pc=0x0000022773f51010 relative=0x0000000000000630
Event: 442.692 Thread 0x000002274a1511d0 Uncommon trap: reason=profile_predicate action=maybe_recompile pc=0x0000022773f51010 method=com.sun.javafx.css.BitSet.addAll(Ljava/util/Collection;)Z @ 122 c2
Event: 442.692 Thread 0x000002274a1511d0 DEOPT PACKING pc=0x0000022773f51010 sp=0x000000d13c8fae50
Event: 442.692 Thread 0x000002274a1511d0 DEOPT UNPACKING pc=0x00000227736669a3 sp=0x000000d13c8fadc0 mode 2
Event: 442.692 Thread 0x000002274a1511d0 Uncommon trap: trap_request=0xffffffbe fr.pc=0x0000022773f51010 relative=0x0000000000000630
Event: 442.692 Thread 0x000002274a1511d0 Uncommon trap: reason=profile_predicate action=maybe_recompile pc=0x0000022773f51010 method=com.sun.javafx.css.BitSet.addAll(Ljava/util/Collection;)Z @ 122 c2
Event: 442.692 Thread 0x000002274a1511d0 DEOPT PACKING pc=0x0000022773f51010 sp=0x000000d13c8fae50
Event: 442.692 Thread 0x000002274a1511d0 DEOPT UNPACKING pc=0x00000227736669a3 sp=0x000000d13c8fadc0 mode 2
Event: 442.717 Thread 0x0000022749baf0d0 Uncommon trap: trap_request=0xffffffc6 fr.pc=0x0000022773f186f0 relative=0x0000000000001450
Event: 442.717 Thread 0x0000022749baf0d0 Uncommon trap: reason=bimorphic_or_optimized_type_check action=maybe_recompile pc=0x0000022773f186f0 method=java.util.concurrent.ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object; @ 242 c2
Event: 442.717 Thread 0x0000022749baf0d0 DEOPT PACKING pc=0x0000022773f186f0 sp=0x000000d13c5fc340
Event: 442.717 Thread 0x0000022749baf0d0 DEOPT UNPACKING pc=0x00000227736669a3 sp=0x000000d13c5fc2c0 mode 2
Event: 442.745 Thread 0x00000227493d1060 DEOPT PACKING pc=0x000002276c3681cc sp=0x000000d13e6ff0f0
Event: 442.745 Thread 0x00000227493d1060 DEOPT UNPACKING pc=0x0000022773667143 sp=0x000000d13e6fe550 mode 1

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 1.966 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fd5da40}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000008fd5da40) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 1.968 Thread 0x000002274a1511d0 Exception <a 'java/lang/IncompatibleClassChangeError'{0x000000008fd66e48}: Found class java.lang.Object, but interface was expected> (0x000000008fd66e48) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 826]
Event: 1.970 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fd6e528}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object)'> (0x000000008fd6e528) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.447 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000090741ac8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeInterface(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000090741ac8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.447 Thread 0x000002274a1511d0 Exception <a 'java/lang/IncompatibleClassChangeError'{0x0000000090745450}: Found class java.lang.Object, but interface was expected> (0x0000000090745450) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 826]
Event: 5.544 Thread 0x000002274a1511d0 Implicit null exception at 0x0000022773e5d479 to 0x0000022773e5d518
Event: 5.689 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fffa008}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x000000008fffa008) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.780 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fd968c8}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000008fd968c8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.781 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fd9a318}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000008fd9a318) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.785 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fdb21c0}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, long)'> (0x000000008fdb21c0) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 5.786 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008fdb5d30}: 'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, long, java.lang.Object)'> (0x000000008fdb5d30) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 6.755 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000919045a8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, int, int, int, int, int, java.lang.Object)'> (0x00000000919045a8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 6.756 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000091917828}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, int, int, int, int, int)'> (0x0000000091917828) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 6.761 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000009191f330}: 'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, java.lang.Object, int, int, int, int, int, java.lang.Object)'> (0x000000009191f330) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 10.744 Thread 0x0000022749baf0d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008cd39c88}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, int)'> (0x000000008cd39c88) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 13.281 Thread 0x000002274f752980 Implicit null exception at 0x0000022773ed1f64 to 0x0000022773ed2028
Event: 15.846 Thread 0x000002274a1511d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000008c2aacf0}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000008c2aacf0) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 16.380 Thread 0x000002274a1511d0 Exception <a 'java/lang/ClassNotFoundException'{0x0000000091923578}: com/sun/rowset/RowSetResourceBundle> (0x0000000091923578) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 535]
Event: 16.381 Thread 0x000002274a1511d0 Exception <a 'java/lang/ClassNotFoundException'{0x0000000091935178}: com/sun/rowset/RowSetResourceBundle_en> (0x0000000091935178) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 535]
Event: 16.381 Thread 0x000002274a1511d0 Exception <a 'java/lang/ClassNotFoundException'{0x0000000091936140}: com/sun/rowset/RowSetResourceBundle_en_GB> (0x0000000091936140) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 535]

VM Operations (20 events):
Event: 423.754 Executing VM operation: get/set locals
Event: 423.754 Executing VM operation: get/set locals done
Event: 423.755 Executing VM operation: get/set locals
Event: 423.755 Executing VM operation: get/set locals done
Event: 423.755 Executing VM operation: get/set locals
Event: 423.755 Executing VM operation: get/set locals done
Event: 442.682 Executing VM operation: ChangeBreakpoints
Event: 442.682 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done
Event: 442.683 Executing VM operation: ChangeBreakpoints
Event: 442.683 Executing VM operation: ChangeBreakpoints done

Events (20 events):
Event: 442.682 Thread 0x000002274f752470 Thread exited: 0x000002274f752470
Event: 442.686 Thread 0x0000022750236820 Thread added: 0x0000022750236820
Event: 442.687 Thread 0x000002274915fe00 Thread exited: 0x000002274915fe00
Event: 442.699 Thread 0x0000022750238800 Thread added: 0x0000022750238800
Event: 442.708 Thread 0x00000227502372c0 Thread added: 0x00000227502372c0
Event: 442.715 Thread 0x0000022750237d60 Thread added: 0x0000022750237d60
Event: 442.741 loading class jdk/internal/misc/Signal$1
Event: 442.742 loading class jdk/internal/misc/Signal$1 done
Event: 442.742 Thread 0x000002274f7538b0 Thread added: 0x000002274f7538b0
Event: 442.743 Thread 0x000002274f753dc0 Thread added: 0x000002274f753dc0
Event: 442.743 Thread 0x00000227493d24a0 Thread added: 0x00000227493d24a0
Event: 442.743 Thread 0x00000227493d1060 Thread added: 0x00000227493d1060
Event: 442.743 Thread 0x000002274f753dc0 Thread exited: 0x000002274f753dc0
Event: 442.744 loading class com/sun/javafx/font/PrismFontFile
Event: 442.744 loading class com/sun/javafx/font/PrismFontFile done
Event: 442.744 loading class com/sun/javafx/tk/quantum/QuantumRenderer
Event: 442.744 loading class com/sun/javafx/tk/quantum/QuantumRenderer done
Event: 442.744 loading class com/sun/javafx/tk/quantum/QuantumToolkit
Event: 442.744 loading class com/sun/javafx/tk/quantum/QuantumToolkit done
Event: 442.745 Thread 0x00000227493d1060 Thread exited: 0x00000227493d1060


Dynamic libraries:
0x00007ff714410000 - 0x00007ff71441e000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\java.exe
0x00007ffb613f0000 - 0x00007ffb61607000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007ffb600d0000 - 0x00007ffb60194000 	C:\Windows\System32\KERNEL32.DLL
0x00007ffb5e900000 - 0x00007ffb5eca5000 	C:\Windows\System32\KERNELBASE.dll
0x00007ffb5e7e0000 - 0x00007ffb5e8f1000 	C:\Windows\System32\ucrtbase.dll
0x00007ffb55380000 - 0x00007ffb5539b000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\VCRUNTIME140.dll
0x00007ffb553a0000 - 0x00007ffb553b7000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\jli.dll
0x00007ffb5fc30000 - 0x00007ffb5fdde000 	C:\Windows\System32\USER32.dll
0x00007ffb5ecb0000 - 0x00007ffb5ecd6000 	C:\Windows\System32\win32u.dll
0x00007ffb48450000 - 0x00007ffb486e3000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.2506_none_270c5ae97388e100\COMCTL32.dll
0x00007ffb5fe70000 - 0x00007ffb5fe99000 	C:\Windows\System32\GDI32.dll
0x00007ffb5fea0000 - 0x00007ffb5ff47000 	C:\Windows\System32\msvcrt.dll
0x00007ffb5ee10000 - 0x00007ffb5ef29000 	C:\Windows\System32\gdi32full.dll
0x00007ffb5f0a0000 - 0x00007ffb5f13a000 	C:\Windows\System32\msvcp_win.dll
0x00007ffb5f280000 - 0x00007ffb5f2b1000 	C:\Windows\System32\IMM32.DLL
0x00007ffb55340000 - 0x00007ffb5534c000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\vcruntime140_1.dll
0x00007ffb4d190000 - 0x00007ffb4d21d000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\msvcp140.dll
0x00007ffb099a0000 - 0x00007ffb0a601000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\server\jvm.dll
0x00007ffb60010000 - 0x00007ffb600c1000 	C:\Windows\System32\ADVAPI32.dll
0x00007ffb5ff50000 - 0x00007ffb5fff6000 	C:\Windows\System32\sechost.dll
0x00007ffb61290000 - 0x00007ffb613a7000 	C:\Windows\System32\RPCRT4.dll
0x00007ffb5e090000 - 0x00007ffb5e0dd000 	C:\Windows\SYSTEM32\POWRPROF.dll
0x00007ffb3a310000 - 0x00007ffb3a319000 	C:\Windows\SYSTEM32\WSOCK32.dll
0x00007ffb54b70000 - 0x00007ffb54ba4000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007ffb56c40000 - 0x00007ffb56c4a000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007ffb5f1f0000 - 0x00007ffb5f261000 	C:\Windows\System32\WS2_32.dll
0x00007ffb5e000000 - 0x00007ffb5e013000 	C:\Windows\SYSTEM32\UMPDC.dll
0x00007ffb5d6e0000 - 0x00007ffb5d6f8000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ffb55370000 - 0x00007ffb5537a000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\jimage.dll
0x00007ffb51e90000 - 0x00007ffb520c3000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ffb601a0000 - 0x00007ffb60529000 	C:\Windows\System32\combase.dll
0x00007ffb60e20000 - 0x00007ffb60ef7000 	C:\Windows\System32\OLEAUT32.dll
0x00007ffb320b0000 - 0x00007ffb320e2000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007ffb5e760000 - 0x00007ffb5e7da000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ffb53e80000 - 0x00007ffb53ebb000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\jdwp.dll
0x00007ffb5b460000 - 0x00007ffb5b46e000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\instrument.dll
0x00007ffb4d100000 - 0x00007ffb4d125000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\java.dll
0x00007ffb4d150000 - 0x00007ffb4d168000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\zip.dll
0x00007ffb4bfd0000 - 0x00007ffb4c0a7000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\jsvml.dll
0x00007ffb605b0000 - 0x00007ffb60e09000 	C:\Windows\System32\SHELL32.dll
0x00007ffb5c630000 - 0x00007ffb5cf24000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007ffb5c4f0000 - 0x00007ffb5c62e000 	C:\Windows\SYSTEM32\wintypes.dll
0x00007ffb60f00000 - 0x00007ffb60ff3000 	C:\Windows\System32\SHCORE.dll
0x00007ffb5fa10000 - 0x00007ffb5fa6e000 	C:\Windows\System32\shlwapi.dll
0x00007ffb5e690000 - 0x00007ffb5e6b6000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ffb59af0000 - 0x00007ffb59afc000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\dt_socket.dll
0x00007ffb5d1a0000 - 0x00007ffb5d1cd000 	C:\Windows\SYSTEM32\IPHLPAPI.DLL
0x00007ffb5dbe0000 - 0x00007ffb5dc49000 	C:\Windows\system32\mswsock.dll
0x00007ffb55350000 - 0x00007ffb55369000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\net.dll
0x00007ffb57f50000 - 0x00007ffb58087000 	C:\Windows\SYSTEM32\WINHTTP.dll
0x00007ffb4d170000 - 0x00007ffb4d186000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\nio.dll
0x0000022703e80000 - 0x0000022703e83000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-console-l1-1-0.dll
0x0000022703e90000 - 0x0000022703e93000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-console-l1-2-0.dll
0x0000022703ea0000 - 0x0000022703ea3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-datetime-l1-1-0.dll
0x0000022703eb0000 - 0x0000022703eb3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-debug-l1-1-0.dll
0x0000022703ec0000 - 0x0000022703ec3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-errorhandling-l1-1-0.dll
0x0000022703ed0000 - 0x0000022703ed4000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-file-l1-1-0.dll
0x0000022703ee0000 - 0x0000022703ee3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-file-l1-2-0.dll
0x0000022703ef0000 - 0x0000022703ef3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-file-l2-1-0.dll
0x0000022703f00000 - 0x0000022703f03000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-handle-l1-1-0.dll
0x0000022703f10000 - 0x0000022703f13000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-heap-l1-1-0.dll
0x0000022703f20000 - 0x0000022703f23000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-interlocked-l1-1-0.dll
0x0000022703f30000 - 0x0000022703f33000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-libraryloader-l1-1-0.dll
0x0000022703f40000 - 0x0000022703f43000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-localization-l1-2-0.dll
0x0000022703f50000 - 0x0000022703f53000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-memory-l1-1-0.dll
0x0000022703f60000 - 0x0000022703f63000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-namedpipe-l1-1-0.dll
0x0000022703f70000 - 0x0000022703f73000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-processenvironment-l1-1-0.dll
0x0000022703f80000 - 0x0000022703f83000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-processthreads-l1-1-0.dll
0x0000022703f90000 - 0x0000022703f93000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-processthreads-l1-1-1.dll
0x0000022703fa0000 - 0x0000022703fa3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-profile-l1-1-0.dll
0x0000022703fb0000 - 0x0000022703fb3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-rtlsupport-l1-1-0.dll
0x0000022703fc0000 - 0x0000022703fc3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-string-l1-1-0.dll
0x0000022703fd0000 - 0x0000022703fd3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-synch-l1-1-0.dll
0x0000022703fe0000 - 0x0000022703fe3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-synch-l1-2-0.dll
0x0000022703ff0000 - 0x0000022703ff3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-sysinfo-l1-1-0.dll
0x0000022749c00000 - 0x0000022749c03000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-timezone-l1-1-0.dll
0x0000022749c10000 - 0x0000022749c13000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-core-util-l1-1-0.dll
0x0000022749c20000 - 0x0000022749c23000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-conio-l1-1-0.dll
0x0000022749c30000 - 0x0000022749c34000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-convert-l1-1-0.dll
0x0000022749c40000 - 0x0000022749c43000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-environment-l1-1-0.dll
0x0000022749c50000 - 0x0000022749c53000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-filesystem-l1-1-0.dll
0x0000022749c60000 - 0x0000022749c63000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-heap-l1-1-0.dll
0x0000022749c70000 - 0x0000022749c73000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-locale-l1-1-0.dll
0x0000022749c80000 - 0x0000022749c85000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-math-l1-1-0.dll
0x0000022749c90000 - 0x0000022749c95000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-multibyte-l1-1-0.dll
0x0000022749ca0000 - 0x0000022749cb0000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-private-l1-1-0.dll
0x0000022749cb0000 - 0x0000022749cb3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-process-l1-1-0.dll
0x0000022749cc0000 - 0x0000022749cc4000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-runtime-l1-1-0.dll
0x0000022749cd0000 - 0x0000022749cd4000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-stdio-l1-1-0.dll
0x0000022749ce0000 - 0x0000022749ce4000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-string-l1-1-0.dll
0x0000022749cf0000 - 0x0000022749cf3000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-time-l1-1-0.dll
0x0000022749d00000 - 0x0000022749d03000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\api-ms-win-crt-utility-l1-1-0.dll
0x00007ffb274f0000 - 0x00007ffb275ec000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\ucrtbase.dll
0x00007ffb4ba40000 - 0x00007ffb4ba5b000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\vcruntime140.dll
0x00007ffb4c560000 - 0x00007ffb4c56c000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\vcruntime140_1.dll
0x00007ffb24fb0000 - 0x00007ffb2503e000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140.dll
0x00007ffb610d0000 - 0x00007ffb61270000 	C:\Windows\System32\ole32.dll
0x00007ffb4bfc0000 - 0x00007ffb4bfc9000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140_1.dll
0x00007ffb4ba10000 - 0x00007ffb4ba3f000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\msvcp140_2.dll
0x00007ffb482d0000 - 0x00007ffb482ff000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\prism_d3d.dll
0x00007ffae4ad0000 - 0x00007ffae4c79000 	C:\Windows\system32\d3d9.dll
0x00007ffb5be80000 - 0x00007ffb5beab000 	C:\Windows\SYSTEM32\dwmapi.dll
0x00007ffb5bd30000 - 0x00007ffb5bd66000 	C:\Windows\SYSTEM32\dxcore.dll
0x00007ffb5bc50000 - 0x00007ffb5bcfb000 	C:\Windows\system32\uxtheme.dll
0x00007ffb53f00000 - 0x00007ffb540bb000 	C:\Windows\System32\DriverStore\FileRepository\u0395598.inf_amd64_ddc78b0127c2a6a5\B394313\aticfx64.dll
0x00007ffb30d00000 - 0x00007ffb30d34000 	C:\Windows\System32\DriverStore\FileRepository\u0395598.inf_amd64_ddc78b0127c2a6a5\B394313\atiu9p64.dll
0x00007ffaef8e0000 - 0x00007ffaf0635000 	C:\Windows\System32\DriverStore\FileRepository\u0395598.inf_amd64_ddc78b0127c2a6a5\B394313\atiumd64.dll
0x000000005d7b0000 - 0x000000005e6c2000 	C:\Windows\System32\DriverStore\FileRepository\u0395598.inf_amd64_ddc78b0127c2a6a5\B394313\atiumd6a.dll
0x00007ffb5f2c0000 - 0x00007ffb5f734000 	C:\Windows\System32\SETUPAPI.dll
0x00007ffb54740000 - 0x00007ffb54775000 	C:\Windows\SYSTEM32\amdihk64.dll
0x00007ffb59450000 - 0x00007ffb5949a000 	C:\Windows\SYSTEM32\directxdatabasehelper.dll
0x00007ffb2b9c0000 - 0x00007ffb2ba02000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\glass.dll
0x00007ffb5f7a0000 - 0x00007ffb5f899000 	C:\Windows\System32\COMDLG32.dll
0x00007ffb5f8c0000 - 0x00007ffb5fa0f000 	C:\Windows\System32\MSCTF.dll
0x00007ffb4b650000 - 0x00007ffb4b664000 	C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64\javafx_font.dll
0x00007ffb5a660000 - 0x00007ffb5a8d3000 	C:\Windows\SYSTEM32\dwrite.dll
0x00007ffb5dea0000 - 0x00007ffb5debb000 	C:\Windows\SYSTEM32\CRYPTSP.dll
0x00007ffb5d6a0000 - 0x00007ffb5d6d5000 	C:\Windows\system32\rsaenh.dll
0x00007ffb5dd40000 - 0x00007ffb5dd6c000 	C:\Windows\SYSTEM32\USERENV.dll
0x00007ffb5e110000 - 0x00007ffb5e138000 	C:\Windows\SYSTEM32\bcrypt.dll
0x00007ffb5dec0000 - 0x00007ffb5decc000 	C:\Windows\SYSTEM32\CRYPTBASE.dll
0x00007ffb60000000 - 0x00007ffb60009000 	C:\Windows\System32\NSI.dll
0x00007ffb55d70000 - 0x00007ffb55d89000 	C:\Windows\SYSTEM32\dhcpcsvc6.DLL
0x00007ffb55b80000 - 0x00007ffb55b9f000 	C:\Windows\SYSTEM32\dhcpcsvc.DLL
0x00007ffb5d1d0000 - 0x00007ffb5d2c9000 	C:\Windows\SYSTEM32\DNSAPI.dll
0x00007ffb53cf0000 - 0x00007ffb53cfe000 	C:\Users\fiona\.jdks\corretto-17.0.9\bin\sunmscapi.dll
0x00007ffb5ef30000 - 0x00007ffb5f096000 	C:\Windows\System32\CRYPT32.dll
0x00007ffb5e0e0000 - 0x00007ffb5e10d000 	C:\Windows\SYSTEM32\ncrypt.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Users\fiona\.jdks\corretto-17.0.9\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.2506_none_270c5ae97388e100;C:\Users\fiona\.jdks\corretto-17.0.9\bin\server;C:\Users\fiona\.openjfx\cache\21.0.1+6\amd64;C:\Windows\System32\DriverStore\FileRepository\u0395598.inf_amd64_ddc78b0127c2a6a5\B394313;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55171,suspend=y,server=n -javaagent:C:\Users\fiona\AppData\Local\JetBrains\IntelliJIdea2023.2\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 
java_command: cs308.group7.usms.App
java_class_path (initial): C:\Users\fiona\OneDrive - University of Strathclyde\Strathclyde\Year 3\CS308 Building Software Systems\cs308-usms\target\classes;C:\Users\fiona\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\fiona\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\fiona\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\fiona\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\fiona\.m2\repository\org\slf4j\slf4j-jdk14\2.0.9\slf4j-jdk14-2.0.9.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-controls\21.0.1\javafx-controls-21.0.1-win.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-graphics\21.0.1\javafx-graphics-21.0.1-win.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-base\21.0.1\javafx-base-21.0.1-win.jar;C:\Users\fiona\.m2\repository\org\jetbrains\annotations\24.0.1\annotations-24.0.1.jar;C:\Users\fiona\.m2\repository\org\kordamp\ikonli\ikonli-core\12.3.1\ikonli-core-12.3.1.jar;C:\Users\fiona\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.3.1\ikonli-javafx-12.3.1.jar;C:\Users\fiona\.m2\repository\org\kordamp\ikonli\ikonli-fontawesome5-pack\12.3.1\ikonli-fontawesome5-pack-12.3.1.jar;C:\Users\fiona\.m2\repository\org\jpedal\OpenViewerFX\7.12.28\OpenViewerFX-7.12.28.jar;C:\Users\fiona\.m2\repository\org\eclipse\birt\runtime\3_7_1\org.mozilla.javascript\1.7.2\org.mozilla.javascript-1.7.2.jar;C:\Users\fiona\.m2\repository\bouncycastle\bcprov-jdk16\140\bcprov-jdk16-140.jar;C:\Users\fiona\.m2\repository\bouncycastle\bcmail-jdk16\140\bcmail-jdk16-140.jar;C:\Users\fiona\.m2\repository\org\openjfx\javafx-swing\11-ea+24\javafx-swing-11-ea+24.jar;C:\Users\fiona\.m2\rep
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 13                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 1048576                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 123731968                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 1975517184                                {product} {ergonomic}
   size_t MaxNewSize                               = 1184890880                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 1048576                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 1975517184                             {manageable} {ergonomic}
     bool UseCompressedClassPointers               = true                           {product lp64_product} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags
 #1: stderr all=off uptime,level,tags

Environment Variables:
JAVA_HOME=C:\Users\fiona\.jdks\corretto-17.0.9\bin
PATH=C:\Python312\Scripts\;C:\Python312\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Ruby32-x64\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\fiona\AppData\Local\Microsoft\WindowsApps;C:\Users\fiona\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\fiona\AppData\Local\GitHubDesktop\bin;C:\Users\fiona\AppData\Local\Programs\oh-my-posh\bin;C:\ghcup\bin;C:\Users\fiona\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\fiona\AppData\Roaming\npm
USERNAME=fiona
OS=Windows_NT
PROCESSOR_IDENTIFIER=AMD64 Family 23 Model 104 Stepping 1, AuthenticAMD
TMP=C:\Users\fiona\AppData\Local\Temp
TEMP=C:\Users\fiona\AppData\Local\Temp



Periodic native trim disabled


---------------  S Y S T E M  ---------------

OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.2506)
OS uptime: 6 days 17:43 hours
Hyper-V role detected

CPU: total 16 (initial active 16) (16 cores per cpu, 2 threads per core) family 23 model 104 stepping 1 microcode 0x0, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, hv
Processor Information for all 16 processors :
  Max Mhz: 1801, Current Mhz: 1801, Mhz Limit: 1801

Memory: 4k page, system-wide physical 7528M (841M free)
TotalPageFile size 15720M (AvailPageFile size 4853M)
current process WorkingSet (physical memory assigned to process): 181M, peak: 208M
current process commit charge ("private bytes"): 287M, peak: 323M

vm_info: OpenJDK 64-Bit Server VM (17.0.9+8-LTS) for windows-amd64 JRE (17.0.9+8-LTS), built on Oct 12 2023 16:15:33 by "Administrator" with MS VC++ 16.10 / 16.11 (VS2019)

END.
